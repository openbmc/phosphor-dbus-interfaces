{
  "comments": [
    {
      "key": {
        "uuid": "47248882_ee7bf406",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-06-17T21:17:23Z",
      "side": 1,
      "message": "WriteProtected seems more like a property or characteristic, not necessarily a state? Just seems to me that if i were to query the state of a fw version, i\u0027d expect it to have values of active, or invalid, staged, etc, not to describe the characteristic of the version such as if it\u0027s write protected, or redundant, etc.\n\nDoes write protected overlap with updatable? The description for updatable almost sounds like it\u0027s describing a read-only version (\"for reporting purposes only\") and therefore it\u0027s write protected. Maybe we don\u0027t need this one?",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f0dd771_cf4644ec",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-18T07:30:36Z",
      "side": 1,
      "message": "yeah, you are right. This should be more like property to Software instead of States. Should we move this to Software Version or maybe just rename this to Software/Property?\n\nFor write Protect and Updatable, they are related but are not exactly overlap. Since there could be software that is not Updatable at all... and WriteProtected does not matter at all.\n\nThinking about it more... maybe it is not needed...",
      "parentUuid": "47248882_ee7bf406",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9edb81ad_918dffaa",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-22T18:38:48Z",
      "side": 1,
      "message": "Should I move this to \n`yaml/xyz/openbmc_project/Software/Property.interface.yaml`?",
      "parentUuid": "8f0dd771_cf4644ec",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f48e6c8_38782dc3",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-06-22T20:55:20Z",
      "side": 1,
      "message": "What about `yaml/xyz/openbmc_project/Software/Settings.interface.yaml`? It seems that this property is not just something that describes the version, but also it can be modified by the user, so maybe Settings would be appropriate in this case. I see \"./xyz/openbmc_project/Logging/Settings.interface.yaml\" perhaps as an example, where it says those properties control the behavior of the logging interface.\n\n@patrick: Any preference/thoughts?",
      "parentUuid": "9edb81ad_918dffaa",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25bcec28_326496cf",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-22T22:49:57Z",
      "side": 1,
      "message": "I will move it to `yaml/xyz/openbmc_project/Software/Settings.interface.yaml` for now to clean this up a bit.\n\nSettings make sense for this user configurable property.\n\nWill change is if any patrick@ has and preference on it.",
      "parentUuid": "9f48e6c8_38782dc3",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c475a224_136b66fe",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-06-17T21:17:23Z",
      "side": 1,
      "message": "You mentioned that this property would replace the updatable association \"and gather the different states in one place.\"\n\nWhy is a replacement needed? There are other apps querying the associations interface to find out the properties of the version, such as if it\u0027s functional, updatable, etc. I\u0027d be a bit hesitant on moving one or more associations to a different interface without a reason.\n\nDescription of the associations here:\nhttps://github.com/openbmc/docs/blob/master/architecture/code-update/code-update.md#associations",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d7f0d75_5d965eb0",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-18T07:30:36Z",
      "side": 1,
      "message": "I guess I don\u0027t meant that we need to migrate it to this. Just have the option to do so.\n\nMaybe I should just update the association doc to support WriteProtected instead of adding this property as d-bus API.\n\n---\n\nThanks for the reference.",
      "parentUuid": "c475a224_136b66fe",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20dd9afb_d36e0f7a",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-21T17:21:28Z",
      "side": 1,
      "message": "just realized that if I want to to be able to remove WriteProtected... maybe it is not best to have it represented as a dbus object. Adding/removing d-bus objects seems like a bit too much to represent a boolean value?",
      "parentUuid": "3d7f0d75_5d965eb0",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72fc6abb_9e56b5e9",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-06-21T21:18:52Z",
      "side": 1,
      "message": "I wouldn\u0027t think it\u0027s too much, probably is more about how it\u0027s going to be used. Would this be a property that the user set instead of being something that it\u0027s set in the image itself?\nIf the user sets this value, how would it be enforced? Would the code update app prevent the update and deletion of it (or do you see something like the image would need to be remounted read-only)?\n\nIf it\u0027s a user setting, probably a property makes more sense than an association, the association seems it\u0027s something the apps determine and not the user.",
      "parentUuid": "20dd9afb_d36e0f7a",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7078ce1_f31540bf",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-22T10:36:30Z",
      "side": 1,
      "message": "I think I would want the WriteProtected to be able to set by the users to match how Redfish does it.\n\nI am not sure how the user set values will be enforced. (Not exactly sure what you mean. Dow you mean enforced by the service?) \n\nFor,\n```\nWould the code update app prevent the update and deletion of it (or do you see something like the image would need to be remounted read-only)\n```\n\nIdeally, that\u0027s what the value should indicate, but I am not sure how that can be enforced by the user. I was thinking that this property/flag is more like an indicator to let us know if that is the case and provide us with options to modify it. What happens after setting the values are all dependent on the service that exported them. \n\n----\n\nOk, yeah, property does make more sense for user setting.",
      "parentUuid": "72fc6abb_9e56b5e9",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42cd6a50_e4d6b077",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-06-22T20:55:20Z",
      "side": 1,
      "message": "Ok I see, yeah I meant enforced by the service, which you confirmed that whatever is needed to enforce this property will be done by the service that exports it.\nJust for my reference, do you have in mind already a service that would implement this? Were you thinking perhaps that would be added to the phophor-bmc-code-mgmt, or you\u0027re still working on a service to implement this new property at a later time?",
      "parentUuid": "f7078ce1_f31540bf",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c27c856_db0b4b14",
        "filename": "yaml/xyz/openbmc_project/Software/State.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-06-22T22:49:57Z",
      "side": 1,
      "message": "yeah, sounds good.\n\nI don\u0027t have any service in mind right now. I will be using this internally first to support SSD controller software for now. With the property being controlled by the SSD itself.\n\nNot sure how this will be used in openbmc in general. Mostly added this to support Redfish properties with the same name (WriteProtected).",
      "parentUuid": "42cd6a50_e4d6b077",
      "revId": "86b8cb154ece42eb90e91d49dd3be1d316561041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}