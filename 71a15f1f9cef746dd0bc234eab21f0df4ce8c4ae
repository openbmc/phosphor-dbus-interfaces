{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7c556544_3b9123de",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-19T16:11:11Z",
      "side": 1,
      "message": "Maybe better in yaml/xyz/openbmc_project/Inventory/Decorator/PCIeSlot.interface.yaml?",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85e12210_a00b55ac",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-19T18:01:43Z",
      "side": 1,
      "message": "How does a single slot have bifurcation?",
      "parentUuid": "7c556544_3b9123de",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f88e4005_40d43377",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-19T18:51:21Z",
      "side": 1,
      "message": "um.. maybe it is not appropriate in here\u003e?\n\nI was thinking of PCIe devices that might have a MUX and split the slot into lanes? Is that unexpected?",
      "parentUuid": "85e12210_a00b55ac",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b5081e1_c0c74c11",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-19T19:49:18Z",
      "side": 1,
      "message": "I guess this should be a higher level then slot. \n\nMaybe add it to yaml/xyz/openbmc_project/Inventory/Decorator/PCIe.interface.yaml instead?",
      "parentUuid": "f88e4005_40d43377",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad392b58_f73e33f1",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-19T20:03:05Z",
      "side": 1,
      "message": "\u003e I was thinking of PCIe devices that might have a MUX and split the slot into lanes? Is that unexpected?\n\nGenerally bifurcation is controlled either the root complex itself or in a PCIe switch.  A slot is 16x, 4x, 1x, etc.  What you can have is two 16x slots that lead back to a root complex, which itself only has 16 usable lanes.  The root complex has a bifurcation options of [[16x], [8x, 8x]].  If you put two 16x cards in the two slots they only end up running at 8x.\n\nEven if this were in another object, I don\u0027t think that a simple array expresses the bifurcation options, but it does express the bifurcation in effect.  At one point I thought we discussed having a different property here for \"physical lanes\" and \"lanes used\", but I only see the one property here.",
      "parentUuid": "0b5081e1_c0c74c11",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe22853_4634c9e8",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-19T20:23:24Z",
      "side": 1,
      "message": "ah, ok. Thanks for the explanation. Yeah, I think I am more interested in the bifurcation options as you mentioned. I just want a way to get the highest level of bifurcation possible for a given slot.\n\nWill `array[array[size]]` be enough to represent the options? I wonder how this will be exposed by the service.\n\nMy use case will be to use Entity Manager and have the config hardcoded for a given device, but I am not sure how suitable it is for other use cases.",
      "parentUuid": "ad392b58_f73e33f1",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95d15057_bf49a447",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-10-22T21:52:09Z",
      "side": 1,
      "message": "\u003e I just want a way to get the highest level of bifurcation possible for a given slot.  Will `array[array[size]]` be enough to represent the options?\n\nStill not positive what this means w.r.t. a slot.  Do we have a root-complex and/or switch entity that this belongs in?",
      "parentUuid": "cbe22853_4634c9e8",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13a9c374_9ff1ef5c",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-22T22:24:11Z",
      "side": 1,
      "message": "let me ask Benjamin Fair on more context for this.",
      "parentUuid": "95d15057_bf49a447",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "338f659b_af5234d8",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-11T01:46:08Z",
      "side": 1,
      "message": "I think we have a root-complex that is managing the PCIe. So from you previous comment, we want two different interfaces. One with the possible bifurcation modeling the root complex and one at the device level (that bifurcation used). Maybe something like that?\n\nI was looking at how Root Complex is modeled in redfish, it is created as an Entpoint with  EntityType of RootComplex. Not sure how we useful that is for dbus-interface.\n\nhttps://www.dmtf.org/sites/default/files/standards/documents/DSP2046_2021.2.pdf",
      "parentUuid": "13a9c374_9ff1ef5c",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccdc45dc_4c46d291",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-11T16:16:49Z",
      "side": 1,
      "message": "\u003e One with the possible bifurcation modeling the root complex and one at the device level (that bifurcation used).\n\nI don\u0027t really know how bifurcation is related to the device (or slot) at all.  When a slot isn\u0027t populated I guess you have a \"maximum remaining lanes\" concept which tells you how many of the Lanes could be assigned to a device if you were to insert one, but otherwise when a device (or slot) is active you really only have \"number of physical lanes\" and \"number of active lanes\".  I don\u0027t know if the \"maximum remaining lanes\" information could be obtained from however you represent bifurcation at the RC/Switch level.\n\nIt does seem like you should have a separate interface to represent a RC.  We need to also consider is how would you model a PCIe Switch.  \n\nThe root complex has a fixed number of lanes and it can bifurcate in a number of different lane combinations.  Those lane combinations are from a combination of chip-level support AND board wiring to slots.  Should a RC only tell you the chip-level and then you also need to piece together board wiring to figure out the subset of possibilities?  That doesn\u0027t really seem like a great abstraction.  So, I think it is best if two identical processors gave different bifurcation information depending on which board they were plugged into.\n\nA PCIe Switch is a PCIe device with N lanes input, M channels out each having {M_1, M_2, ... M_N} lanes.  \u0027sum(M_i) \u003e\u003d N\u0027 in most cases.  Sometimes there is also bifurcation options in a switch as well, but I think that is rarer.\n\nFor a PCIe Switch you also should consider multi-host configurations.  Many PCIe switches can be configured to have 2 (or more) uplink channels.  See https://docs.broadcom.com/doc/12351853 as an example.  Also https://docs.broadcom.com/doc/12351860 mentions having \"dual upstream\" support where you can combine two 8x ports from the RC to aggregate 16x worth of bandwidth to a large swath of downstream 8x devices.\n\nUnfortunately, there is still a lot of complexity to work through on how best to model the PCIe bifurcation information.",
      "parentUuid": "338f659b_af5234d8",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0e8c520_64e95874",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2021-11-12T00:38:48Z",
      "side": 1,
      "message": "Our goal is to handle cases where there could be different bifurcation depending on the specific system configuration, e.g. presence or absence of bifurcation risers[0], PCIe devices that might bifurcate internally, etc. Switches could also be important in the future, but we don\u0027t need to model them immediately for our use case.\n\nWe want to have Inventory objects that express the desired bifurcation of each of these pieces of hardware so that we can inform the BIOS what bifurcation configuration it should apply to the root complex.\n\n[0] Example: https://www.density.sk/product/pcie-bifurcated-riser-cable/",
      "parentUuid": "ccdc45dc_4c46d291",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b551d3d2_33da4e4e",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-18T23:05:37Z",
      "side": 1,
      "message": "Thanks for the feedback. I understanding that modeling the PCIe bifurcation information is complex, so I am thinking that we don\u0027t do that fully. Getting the root-complex information and representing it can be a challenge of its own (I think, correct me if I am wrong).\n\nI am not sure if all of the possible bifurcation the root complex can give is too useful in general. From my point of view, we only care about the current machine config and how we need to bifuricate to suppor the devices,\n\nAs Benjamin mentioned, the goal is to basically determine the desired bifurication based on the device level and ask the BIOS to set the current bifurcation at the root complex to the desired.\n\nThe use cause will be with https://gerrit.openbmc-project.xyz/c/openbmc/google-ipmi-sys/+/47712 that calculate the desired bifurcation to support all of the devices.\n\nFor that goal, we want to model the PCIe device instead of the slot (mistake on my part of adding it here).\n\nI am looking at https://github.com/DMTF/Redfish/pull/4871/files#diff-44c3c9e8dc3fb0569ea0c7e730b34b7cdfc3f1ccd44ec291b4c9591a7c4a7febR601 (Thanks to Benjamin for the reference). Redfish seems to be modeling the slot with max lanes, while modeling the bifurication at the device level. As you mentioned, the lane used information might not be obtainable. \n\nSo if we just have\n |_ Slot (max lanes)\n    |_Device0 (max device lanes, bifurication)\n    |_Device1 (max device lanes, bifurication)\n    |_Device2 (max device lanes, bifurication)\nwill provide us with enough information on how the slot should be bifurcated. Each device should also be able to bifurcate,\n\nExample,\n\n |_ Slot0 (16)\n    |_Device0 (8, [4, 4])\n        |_Device2 (4, [2,2])\n        |_Device3 (4, [])\n    |_Device1 (8, [])\n    \nWith this the slot will be bifurcated to\n\n2x2x4x8 (highest level of bifurcation)\n\nThe devices linked to the slot needs to have the max lanes added up the number of max lines in the slot.\n\nSomething like this? if this make any sense.",
      "parentUuid": "e0e8c520_64e95874",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c1c01c7_df3ca03a",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-19T14:06:44Z",
      "side": 1,
      "message": "\u003e I am looking at https://github.com/DMTF/Redfish/pull/4871/files#diff-44c3c9e8dc3fb0569ea0c7e730b34b7cdfc3f1ccd44ec291b4c9591a7c4a7febR601 \n\nYou\u0027ve linked to a PR in a private repository that I don\u0027t have access to.\n\n\u003e Redfish seems to be modeling the slot with max lanes, while modeling the bifurication at the device level.\n\nIs this a proposal in Redfish or a merged schema?  I still don\u0027t even understand what \"bifurcation at the device level\" means.  Devices don\u0027t have bifurcation.  PCIe ports off a RC or switch have bifurcation.\n\n```\n |_ Slot0 (16)\n    |_Device0 (8, [4, 4])\n        |_Device2 (4, [2,2])\n        |_Device3 (4, [])\n    |_Device1 (8, [])\n```\n\nI don\u0027t understand this example at a PCIe level at all.\n\n1. Why does a slot have 2 devices in it?  Slots should always have 1 device.\n2. Device0 is a switch or hub?  That is the only rational reason why it would itself have downstream devices.\n3. Is Device2 also a switch?  If not, what does \"[2,2]\" represent?\n\n\u003e The devices linked to the slot needs to have the max lanes added up the number of max lines in the slot.\n\nI feel like you are confusing the terms port and slot.  PCIe ports can be bifurcated.  PCIe slots are physical entities that (typically) allow a single device to be plugged in.",
      "parentUuid": "b551d3d2_33da4e4e",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85ba6015_279b6899",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-11-19T21:24:21Z",
      "side": 1,
      "message": "\u003e \u003e I am looking at https://github.com/DMTF/Redfish/pull/4871/files#diff-44c3c9e8dc3fb0569ea0c7e730b34b7cdfc3f1ccd44ec291b4c9591a7c4a7febR601 \n\u003e \n\u003e You\u0027ve linked to a PR in a private repository that I don\u0027t have access to.\n\u003e \n\nOh dang. I guess I\u0027ll just share a snippet.\n\nPCIeDevice\n```\n    \"PCIeInterface\": {\n        \"PCIeType\": \"Gen2\",\n        \"MaxPCIeType\": \"Gen3\",\n        \"LanesInUse\": 1,\n        \"MaxLanes\": 4\n    },\n    \"Slot\": {\n        \"SlotType\": \"HalfLength\",\n        \"PCIeType\": \"Gen3\",\n        \"Lanes\": 1,\n        \"Location\": {\n            \"PartLocation\": {\n                \"ServiceLabel\": \"Slot 3\",\n                \"LocationOrdinalValue\": 3,\n                \"LocationType\": \"Slot\",\n                \"Orientation\": \"LeftToRight\",\n                \"Reference\": \"Rear\"\n            }\n        }\n    },\n```\nDevice.MaxLanes: he number of PCIe lanes supported by this device.\nDevice.LanesInUse: The number of PCIe lanes in use by this device.\n\n\nAnd the device is linked to a slot that shows how many total lanes that the slot support.\n\nSlot.Lanes: The number of PCIe lanes supported by this slot.\n\nAnd at each device level, it is linked to some slot. The devices that is linked to the same slot will be implied that the slot is bifuricated.\n\n\n\u003e \u003e Redfish seems to be modeling the slot with max lanes, while modeling the bifurication at the device level.\n\u003e \n\u003e Is this a proposal in Redfish or a merged schema?  I still don\u0027t even understand what \"bifurcation at the device level\" means.  Devices don\u0027t have bifurcation.  PCIe ports off a RC or switch have bifurcation.\n\nThis is actually merged. As for \"bifurcation at the device level\", I meant that the device will provide the lanes it needes to support the device. At the slow level, it can use that information to ask the root complex to bifurcate to that if possible?\n\n\u003e \n\u003e ```\n\u003e  |_ Slot0 (16)\n\u003e     |_Device0 (8, [4, 4])\n\u003e         |_Device2 (4, [2,2])\n\u003e         |_Device3 (4, [])\n\u003e     |_Device1 (8, [])\n\u003e ```\n\u003e \n\u003e I don\u0027t understand this example at a PCIe level at all.\n\nI guess it is not at the PCIe level. This is just at the device level to show that what bifurcation we need to support the current set of devices.\n\u003e \n\u003e 1. Why does a slot have 2 devices in it?  Slots should always have 1 device.\n\nA device and bifuricate more? maybe that\u0027s not a device anymore. Like some cable? https://www.density.sk/product/pcie-bifurcated-riser-cable/\n\n\u003e 2. Device0 is a switch or hub?  That is the only rational reason why it would itself have downstream devices.\n\nLike a hub? Maybe we shouldn\u0027t call it a device, but it is something that create another level of bifurication if that make sense. I\u0027ll have to check with Benjamin again on the details.\n\n\u003e 3. Is Device2 also a switch?  If not, what does \"[2,2]\" represent?\n\nyea, it will be the same as Device0. Another level of bifurication\n\u003e \n\u003e \u003e The devices linked to the slot needs to have the max lanes added up the number of max lines in the slot.\n\u003e \n\u003e I feel like you are confusing the terms port and slot.  PCIe ports can be bifurcated.  PCIe slots are physical entities that (typically) allow a single device to be plugged in.\n\nAh, yes, I am. Thanks. (didn\u0027t realize that they are different)",
      "parentUuid": "9c1c01c7_df3ca03a",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5df372fb_c5d20e88",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-06T12:32:38Z",
      "side": 1,
      "message": "\u003e \u003e \u003e I am looking at https://github.com/DMTF/Redfish/pull/4871/files#diff-44c3c9e8dc3fb0569ea0c7e730b34b7cdfc3f1ccd44ec291b4c9591a7c4a7febR601 \n\u003e \u003e \n\u003e \u003e You\u0027ve linked to a PR in a private repository that I don\u0027t have access to.\n\u003e \u003e \n\u003e \n\u003e Oh dang. I guess I\u0027ll just share a snippet.\n\u003e \n\u003e PCIeDevice\n\u003e ```\n\u003e     \"PCIeInterface\": {\n\u003e         \"PCIeType\": \"Gen2\",\n\u003e         \"MaxPCIeType\": \"Gen3\",\n\u003e         \"LanesInUse\": 1,\n\u003e         \"MaxLanes\": 4\n\u003e     },\n\u003e     \"Slot\": {\n\u003e         \"SlotType\": \"HalfLength\",\n\u003e         \"PCIeType\": \"Gen3\",\n\u003e         \"Lanes\": 1,\n\u003e         \"Location\": {\n\u003e             \"PartLocation\": {\n\u003e                 \"ServiceLabel\": \"Slot 3\",\n\u003e                 \"LocationOrdinalValue\": 3,\n\u003e                 \"LocationType\": \"Slot\",\n\u003e                 \"Orientation\": \"LeftToRight\",\n\u003e                 \"Reference\": \"Rear\"\n\u003e             }\n\u003e         }\n\u003e     },\n\u003e ```\n\u003e Device.MaxLanes: he number of PCIe lanes supported by this device.\n\u003e Device.LanesInUse: The number of PCIe lanes in use by this device.\n\u003e \n\u003e \n\u003e And the device is linked to a slot that shows how many total lanes that the slot support.\n\u003e \n\u003e Slot.Lanes: The number of PCIe lanes supported by this slot.\n\u003e \n\u003e And at each device level, it is linked to some slot. The devices that is linked to the same slot will be implied that the slot is bifuricated.\n\nI follow you all the way until this last line.  This example shows a PCIeDevice \"having\" a Slot and not \"referencing\" a Slot.  And, that isn\u0027t really unreasonable because you can only have one card in a slot anyhow.\n\nWhat do you mean by \"the devices [plural] that is linked to the same slot\"?  Slots only fit one device.  Slots aren\u0027t bifurcated.  Devices aren\u0027t bifurcated.  *Ports* are bifurcated.",
      "parentUuid": "85ba6015_279b6899",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4ac110d_70374098",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2022-02-08T23:58:37Z",
      "side": 1,
      "message": "Why don\u0027t we add the MaxLanes property to the PCIeDevice interface instead, along with using a mapping from devices to slots?\n\nThe Redfish spec allows an array of PCIeDevice[0] resources to be logically associated with one PCIeSlot[1]. These PCIeDevice resources have a MaxLanes property, which the BMC could determine based on the FRU contents of the PCIe devices that it detects (either with some OEM field, a static mapping in e-m JSON files, etc). This should imply that you can have a single slot be bifurcated to support multiple devices (for instance with a bifurcation riser[2] or even a single PCIe card with two NVMe drives but no PCIe switch).\n\nIn the future, we can also have the BIOS report back to the BMC what bifurcation was actually implemented in order to fill in the LanesInUse properties, but this isn\u0027t immediately necessary (we\u0027ll probably just leave it \"null\" for now in bmcweb).\n\n[0] https://redfish.dmtf.org/schemas/v1/PCIeDevice.v1_9_0.json\n[1] https://redfish.dmtf.org/schemas/v1/PCIeSlots.v1_5_0.json\n[2] https://www.density.sk/product/pcie-bifurcated-riser-cable/",
      "parentUuid": "5df372fb_c5d20e88",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13b851e2_f759d11d",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-15T21:58:43Z",
      "side": 1,
      "message": "Updated to use MaxLanes for now.\n\nWe can also have \n\n```\nassociations:\n    - name: upstream_pcie_slot\n      description: \u003e\n          Objects that implement PCIeDevice can optionally implement the\n          upstream_pcie_slot association to provide a link back to a PCIe slot.\n      reverse_name: associated_pcie_device\n      required_endpoint_interfaces:\n        - xyz.openbmc_project.Inventory.Item.PCIeSlot\n```\n\nfor the association from the device to the pcie slot to link the relationships. With the two info, then we can determine the current bifurication.",
      "parentUuid": "e4ac110d_70374098",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "71a15f1f9cef746dd0bc234eab21f0df4ce8c4ae",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}