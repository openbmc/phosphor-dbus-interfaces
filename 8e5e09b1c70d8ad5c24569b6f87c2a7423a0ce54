{
  "comments": [
    {
      "key": {
        "uuid": "38088b41_ec218cfc",
        "filename": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-28T15:25:10Z",
      "side": 1,
      "message": "BandwidthPercent BlocksReadLifetime BlocksWrittenLifetime BlocksReadCurrent BlocksWrittenCurrent RemainingSpareBlockPercentage, PredictedMediaLifeLeftPercent\n\nAll seem like they would be updated a lot, and likely should be sensors, not individual properties on the memory schema",
      "range": {
        "startLine": 28,
        "startChar": 12,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "8e5e09b1c70d8ad5c24569b6f87c2a7423a0ce54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "113e5b55_c7ffd323",
        "filename": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000656
      },
      "writtenOn": "2020-10-01T16:12:21Z",
      "side": 1,
      "message": "Good suggestion. Let me try this one.",
      "parentUuid": "38088b41_ec218cfc",
      "range": {
        "startLine": 28,
        "startChar": 12,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "8e5e09b1c70d8ad5c24569b6f87c2a7423a0ce54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "222b1e5b_d50a9b55",
        "filename": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-10-01T16:23:12Z",
      "side": 1,
      "message": "They are part of the memory schema if we\u0027re talking Redfish. If they were part of sensors we\u0027d need some weird lookup to pull these out of sensors schema and into memory. Also, I don\u0027t think we have a unit of Blocks for sensors, and I\u0027m not sure that makes sense either?",
      "parentUuid": "113e5b55_c7ffd323",
      "range": {
        "startLine": 28,
        "startChar": 12,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "8e5e09b1c70d8ad5c24569b6f87c2a7423a0ce54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a265b24_783a9fc8",
        "filename": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-10-01T16:24:33Z",
      "side": 1,
      "message": "https://github.com/openbmc/bmcweb/blob/0f8472a78ec387efea09c4494e3a664cb9ffd0e8/static/redfish/v1/schema/MemoryMetrics_v1.xml#L131",
      "parentUuid": "222b1e5b_d50a9b55",
      "range": {
        "startLine": 28,
        "startChar": 12,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "8e5e09b1c70d8ad5c24569b6f87c2a7423a0ce54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b38b9c39_f70f7cd6",
        "filename": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-10-01T16:33:54Z",
      "side": 1,
      "message": "The Redfish APIs would be tough to write, but it means that we get all the telemetry/aggregation stuff for \"free\".  Also, we already know how to write the redfish APIs for this stuff, and if we defined a consistent path naming, it seems like it would be pretty simple.",
      "parentUuid": "9a265b24_783a9fc8",
      "range": {
        "startLine": 28,
        "startChar": 12,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "8e5e09b1c70d8ad5c24569b6f87c2a7423a0ce54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63b508b3_958ff0ea",
        "filename": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-28T15:25:10Z",
      "side": 1,
      "message": "Most of these seem like they would be better as log events rather than directly accessible struct members.  Is there a use case for directly accessing the CorrectableEccError bool aside from logging?",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 65,
        "endChar": 19
      },
      "revId": "8e5e09b1c70d8ad5c24569b6f87c2a7423a0ce54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c09636e_afad84a2",
        "filename": "xyz/openbmc_project/Inventory/Item/PersistentMemory/MemoryMetrics.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1000656
      },
      "writtenOn": "2020-10-01T16:12:21Z",
      "side": 1,
      "message": "Yes all of these properties are being used for logging purpose. Can you please explain why it is better to log as events rather than bool properties?",
      "parentUuid": "63b508b3_958ff0ea",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 65,
        "endChar": 19
      },
      "revId": "8e5e09b1c70d8ad5c24569b6f87c2a7423a0ce54",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}