{
  "comments": [
    {
      "key": {
        "uuid": "b355f086_3d785af1",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T17:46:19Z",
      "side": 1,
      "message": "This version should be in an openbmc-project.xyz interface.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 78
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e57b4688_0cb78617",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-16T09:29:00Z",
      "side": 1,
      "message": "Yeah true but felt the same as other change comments (https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/43532/4//COMMIT_MSG#12)\n\nI think I can move once I got feedback for the above comment.",
      "parentUuid": "b355f086_3d785af1",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 78
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a593c9cc_55e29f0e",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T17:46:19Z",
      "side": 1,
      "message": "Where does this \"key\" come from?  Why isn\u0027t your PLDM provider performing the translation?",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 79
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db55614d_84d9f261",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-16T09:29:00Z",
      "side": 1,
      "message": "This is key is coming from PHAL (POWER Hardware Abstraction Layer) i.e there is CEC (Central Electronics Complex) device tree which contains BMC and HostBoot interested cec hardware details and each hardware having a key called \"EntityPath\".\n\nPHAL layer will push into upstream (OpenPOWER) shortly and this layer will be used in openPOWER based BMC applications (openpower-proc-control, openpower-hw-diags) so those applications may interested to isolate many other hardwares which are not modeled in inventory. \n\nToday, we are modeling Core and Dimm through PLDM and the remaining BMC interested POWER processor subunits (hardware for example Memory Controller, etc..) details we are pulling from the PHAL CEC device tree. \n\nThis version (entity path) of the interface will be used by BMC openPOWER based applications to isolate hardware.",
      "parentUuid": "a593c9cc_55e29f0e",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 79
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06739451_99b18127",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T11:39:51Z",
      "side": 1,
      "message": "\u003e PHAL layer will push into upstream (OpenPOWER) shortly and this layer will be used in openPOWER based BMC applications (openpower-proc-control, openpower-hw-diags) so those applications may interested to isolate many other hardwares which are not modeled in inventory. \n\nThis statement is implying an entire design which has not been discussed with the open source community.  We don\u0027t currently have \"libraries\" like what you\u0027re suggesting here.  It is disappointing that it sounds like you\u0027re team has gone off and written a bunch of code in a closed manner and then are expecting to drop it on the rest of us when it doesn\u0027t fit the rest of the software design.",
      "parentUuid": "db55614d_84d9f261",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 79
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f0b1cd4_5bc27047",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-06-15T04:12:28Z",
      "side": 1,
      "message": "Phal application uses as Entity path as common key between Hostboot targetting and device tree,\nConsidering this design direction better to provide Entity path based interface for PHal application and avoid using Physical path based interfaces. physical path is almost arbitrary based on how the mrw gets filled in, packaging can change it and numbering is \"fluid\". entity path is more formalized with meaning so less likely to be weird for different systems.",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "396925de_3eef2325",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-15T06:37:49Z",
      "side": 1,
      "message": "This interface will support both so, consumers of this interface can decide how they want. \n\nOr Do we need to remove this support from the interface?\n\nI know, there is a guard tool to do the same activity and just providing the same support in dbus as well.",
      "parentUuid": "2f0b1cd4_5bc27047",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87806870_c1b07f2e",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-06-15T07:50:38Z",
      "side": 1,
      "message": "Gneral design direction , followed here is use entity path as common key considering future use cases. . Unless you got strong use case to use physical path.",
      "parentUuid": "396925de_3eef2325",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95ffed6e_67d2afd6",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-15T09:45:53Z",
      "side": 1,
      "message": "You can use entity path also in this interface. \n\nI think you are talking why need \"third\" type, there are hardwares which is not available inventory (today).\nso, to isolate that we need to use entity path which is an array of byte and it can not understand by the user (lab user/developer). \n\nToday, we are using the guard tool to use human-understandable format to isolate something so, the same support can be given in dbus as well right?  â€‹",
      "parentUuid": "87806870_c1b07f2e",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b00ce2e1_e37fd715",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2021-06-15T10:44:57Z",
      "side": 1,
      "message": "Key point you need to consider here is to avoid usage of physical path based interface in the production code.\n\nAnother problem statement i heard from guard tool users( dev/test/lab) , how to get guardable units information , to create guard records. to get entity path ot physical path , need to look devtree for gettibg this info. If you can  provide some  option in tool or interface  to dump guardable units keys  based on the type , that will be more useful.",
      "parentUuid": "95ffed6e_67d2afd6",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44293292_df0cd8f3",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-15T11:08:49Z",
      "side": 1,
      "message": "\u003e Key point you need to consider here is to avoid usage of physical path based interface in the production code.\n\nWhy? We can not trust? If so, I can go and remove this support.\nI am not seeing any data like we can not trust/use the physical path in some cases.  \n\n\u003e Another problem statement i heard from guard tool users( dev/test/lab) , how to get guardable units information , to create guard records. to get entity path ot physical path , need to look devtree for gettibg this info. If you can  provide some  option in tool or interface  to dump guardable units keys  based on the type , that will be more useful.\n\nLooks you are coming with a new requirement which we won\u0027t support today,\nYou can create an issue and we can track and implement that and Yes, it will be really useful for dev/test/lab users.",
      "parentUuid": "b00ce2e1_e37fd715",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "528d50ba_5c573a5c",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-15T11:37:01Z",
      "side": 1,
      "message": "OK, I will remove the support (physical path) from dbus because our end goal is to model all the isolatable hardware into bmc inventory and after that, those additional types are useless except the first type.\n\nis it fine?",
      "parentUuid": "44293292_df0cd8f3",
      "range": {
        "startLine": 24,
        "startChar": 13,
        "endLine": 25,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "736adc4b_56617346",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T17:46:19Z",
      "side": 1,
      "message": "Can this be a path to the event object?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 36,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1038b137_98e8c515",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-16T09:29:00Z",
      "side": 1,
      "message": "This interface can be used by an external user to manually isolate hardware and we don\u0027t have/generate the event log because this is not an error case and the user voluntarily tried to isolate hardware.\n\nand I think we can not use optional parameter in dbus right? Please let me know if there is a way to do that if it makes sense to you.\n\nor Any different thoughts?",
      "parentUuid": "736adc4b_56617346",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 36,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dfbebc1_b534837a",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T11:39:51Z",
      "side": 1,
      "message": "\u003e and I think we can not use optional parameter in dbus right? Please let me know if there is a way to do that if it makes sense to you.\n\nCorrect, there are no optional values.  If you want a way to create manual entries without a corresponding log, when most of the non-manual cases have a log, you\u0027ll need a separate method for that.\n\nCan the entry, when it exists, be a path?",
      "parentUuid": "1038b137_98e8c515",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 36,
        "endChar": 66
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43e382e0_37c9ecb5",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T17:46:19Z",
      "side": 1,
      "message": "I think we\u0027ve been trying to eliminate these InternalFailures as much as possible.  Do we have any better error definition for what is happening in your daemon?",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 60
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "120022c4_df4b1363",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-16T09:29:00Z",
      "side": 1,
      "message": "Ah ok make sense since we can not get the exact reason but, the daemon which will implement this interface using a library (libguard) from openPOWER to create a record into the PNOR partition and it throwing runtime exception so I thought to use Interfailure in those cases.",
      "parentUuid": "43e382e0_37c9ecb5",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 60
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b37dff6e_e4d0ca0f",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T11:39:51Z",
      "side": 1,
      "message": "Again, we don\u0027t have libraries like this.  Won\u0027t this all be in the \"guard\" daemon (ie. the implementation of this interface).",
      "parentUuid": "120022c4_df4b1363",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 60
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f45ccd1d_adab9e90",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T17:46:19Z",
      "side": 1,
      "message": "Under what conditions would it be \"NotAllowed\"?",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd40700b_58579bec",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-06-16T09:29:00Z",
      "side": 1,
      "message": "We have a use case to check whether the maximum count reached to create the record in PNOR so, I thought will throw this error if the count is reached and could not create the record for isolating hardware.",
      "parentUuid": "f45ccd1d_adab9e90",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1c47563_a6491c2c",
        "filename": "yaml/org/open_power/HardwareIsolation/Create.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-16T11:39:51Z",
      "side": 1,
      "message": "Please don\u0027t reuse Common.Errors for non-standard purposes.  \"NotAllowed\" is typically used in for a bad state request.  (Eg. someone asked to power on a device and the device is already powered on)\n\nI think it would be better to define your own error for this case unless you can find an existing common error that more succinctly encapsulates the error condition.  Maybe Common.Error.TooManyResources.",
      "parentUuid": "cd40700b_58579bec",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "9e653594f95bd080dcf0fdb862f6ecde93f3b665",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}