{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "59c60740_51449f75",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Slot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-31T14:43:31Z",
      "side": 1,
      "message": "State / Status is not inventory.  Inventory should be infrequently changing information.",
      "revId": "a0a18eb657f0b6dad7a6d23509067af4346fd5ba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9482e3f_e1fc687e",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Slot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2024-08-05T03:09:05Z",
      "side": 1,
      "message": "So, is it appropriate to add a new SlotState.interface under yaml/xyz/openbmc_project/State/Decorator? \nOr is it that only the interfaces used by phosphor-state-manager can be defined here?\nThank you.",
      "parentUuid": "59c60740_51449f75",
      "revId": "a0a18eb657f0b6dad7a6d23509067af4346fd5ba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c4f8012_cf93dfcc",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Slot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-05T12:50:27Z",
      "side": 1,
      "message": "What is a \"slot status\"?  I can\u0027t really give any suggestions until I know what you\u0027re even using this for.",
      "parentUuid": "d9482e3f_e1fc687e",
      "revId": "a0a18eb657f0b6dad7a6d23509067af4346fd5ba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "808dbc82_c7d2ead5",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Slot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2024-08-07T01:46:04Z",
      "side": 1,
      "message": "Due to the previous request from the Thermal team to control fan speed based on the slot content status:\n1. Sentinel Dome\n2. Air blocker\n3. Empty\n\nSince the Air blocker does not have an FRU, it can only be determined by the combination of the PRSNT PIN and CARD_TYPE PIN values in the GPIO. \nTherefore, I added a Property to record the slot content status on DBUS. \nEach time the PIN changes, I determine whether the current slot content is Sentinel Dome, Air blocker, or Empty based on the status and the changed PIN.\n\nHowever, as the Thermal team mentioned yesterday, there will be no Air blocker in future Data centers. \nTherefore, there is no need to add an extra Property to record the slot status. \nI will revert this commit to WIP.",
      "parentUuid": "7c4f8012_cf93dfcc",
      "revId": "a0a18eb657f0b6dad7a6d23509067af4346fd5ba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcc77a78_53994159",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Slot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-31T14:43:31Z",
      "side": 1,
      "message": "Free-form strings are not acceptable for states.",
      "revId": "a0a18eb657f0b6dad7a6d23509067af4346fd5ba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8391fcc0_92953ae1",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Slot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2024-08-05T03:09:05Z",
      "side": 1,
      "message": "The correct approach should be to define the type as an enum and specify the property name to be used in the values of the enumerations. \nIs this correct? \nThank you.",
      "parentUuid": "dcc77a78_53994159",
      "revId": "a0a18eb657f0b6dad7a6d23509067af4346fd5ba",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}