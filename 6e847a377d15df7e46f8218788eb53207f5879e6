{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5fe83baf_340acbfc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000992
      },
      "writtenOn": "2022-10-12T09:13:46Z",
      "side": 1,
      "message": "Hi Patrick,\n\nIt\u0027s compiling error with console logs:\n```\nopenbmc/phosphor-dbus-interfaces: WARNING: You should add the boolean check kwarg to the run_command call.\nopenbmc/phosphor-dbus-interfaces:          It currently defaults to false,\nopenbmc/phosphor-dbus-interfaces:          but it will default to true in future releases of meson.\nopenbmc/phosphor-dbus-interfaces:          See also: https://github.com/mesonbuild/meson/issues/9300\n```\nDoes an issue with the meson build? Please help check.",
      "revId": "6e847a377d15df7e46f8218788eb53207f5879e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "673e8e72_03229e66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-12T11:52:15Z",
      "side": 1,
      "message": "That looks like a warning which isn\u0027t stopping the build.  I see something about a clock-skew in the error.  I retriggered for now.",
      "parentUuid": "5fe83baf_340acbfc",
      "revId": "6e847a377d15df7e46f8218788eb53207f5879e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47fba14e_24e09838",
        "filename": "yaml/xyz/openbmc_project/State/Boot/Progress.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-12T11:53:14Z",
      "side": 1,
      "message": "Don\u0027t we already have the progress code interfaces?",
      "revId": "6e847a377d15df7e46f8218788eb53207f5879e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ca13da4_deb289e7",
        "filename": "yaml/xyz/openbmc_project/State/Boot/Progress.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2022-10-13T01:55:39Z",
      "side": 1,
      "message": "We already support BootProgress which map to Redfish\u0027s ComputerSystem LastState with supporting properties defined in http://redfish.dmtf.org/schemas/DSP2046_2021.1.html#laststate.\nHowever, this can\u0027t support to specify all boot progress from UEFI. So, DSP0268_2021.4 Redfish Schema Supplement specification has Oem and OemLastState (BootProgress v1.13+). To support IPMI Send/Get Boot Progress Code in SBMR 2.0 spec we need to use these properties.\nWe will also need to support Redfish to display OemLastState as example in SBMR spec below:\n{\n  \"BootProgress\": {\n    \"LastState\": \"OEM\",\n    \"OemLastStae\" : \"0x010000000010010000\",\n    \"LastStateTime\": \"2020-03-13T04:14:13+06:00\",  \u003c-- already supported\n  },\n}",
      "parentUuid": "47fba14e_24e09838",
      "revId": "6e847a377d15df7e46f8218788eb53207f5879e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c83c3496_552562c1",
        "filename": "yaml/xyz/openbmc_project/State/Boot/Progress.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-10-13T02:21:03Z",
      "side": 1,
      "message": "I don’t think my question was really answered. Why isn’t this interface sufficient from a dbus perspective?\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/State/Boot/PostCode.interface.yaml#L19",
      "parentUuid": "7ca13da4_deb289e7",
      "revId": "6e847a377d15df7e46f8218788eb53207f5879e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}