{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "df748466_9e119126",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-09-08T08:35:44Z",
      "side": 1,
      "message": "I\u0027ll give this until sometime Monday GMT for additional feedback.",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86c800f0_7100e643",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-09-08T09:26:13Z",
      "side": 1,
      "message": "One other thing that occurs to me is the issue of the image format.  Currently obmc-ikvm (AFAIK) only deals in JPEGs, but that\u0027s largely just a side-effect of some implementation details -- PNG, for example, is in most cases a much more natural format for screenshots (and we might want to support it at some point).\n\nSome possibilities:\n - Add an enum argument to request a specific format (though the only implementation for the foreseeable future will likely just return an error for anything but JPEG)\n - Leave it as is without an argument, but change the name to reflect a specific format, e.g. CaptureJPEG\n - No change at all, leaving it implicit/undefined (up to the caller to inspect the file header, I guess)\n\nThoughts?  I think the first would be the most \"thorough\" and extensible, if a bit more work; the second might be a reasonable compromise.",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c42f1936_85e11d09",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-09-08T09:49:24Z",
      "side": 1,
      "message": "I would prefer \"No change\", the format of the captured screenshot is implementation details, a service could produce jpeg, and another service (in case there is) could produce another format.\nThe interface requires the service to return the picture path, the caller could potentially know the file format from the file\u0027s extension.",
      "parentUuid": "86c800f0_7100e643",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d265f76a_f62b1b6b",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-09-08T19:49:50Z",
      "side": 1,
      "message": "\u003e the format of the captured screenshot is implementation details\n\nHm?  I\u0027d say it\u0027s exactly the opposite of an implementation detail -- it\u0027s the format of the data returned to the caller, and hence very much a part of the interface IMO.\n\n\u003e the caller could potentially know the file format from the file\u0027s extension\n\nPerhaps, but it seems pretty ad-hoc and prone to messiness, because filename extensions are merely a convention, and not even a terribly consistent one at that -- JPEG files, for example, are sometimes named *.jpg and sometimes *.jpeg.",
      "parentUuid": "c42f1936_85e11d09",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "466ac0b7_b1fee655",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-09-14T16:45:23Z",
      "side": 1,
      "message": "For the time being should we just change the \u0027returns\u0027 description to say \"in JPEG format\"?  If someone wants to enhance this to do other types we figure that out when someone wants to implement it and then we adjust the API accordingly.",
      "parentUuid": "d265f76a_f62b1b6b",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aebed8b9_2d00a1fe",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-09-16T03:33:20Z",
      "side": 1,
      "message": "My thinking with leaning toward specifying the format explicitly in either the method name or a parameter was that it would be easier to introduce another format with minimal (or no) changes to existing code.  If the format isn\u0027t explicit anywhere in the code and we later add (say) PNG support then we need to go back and change already-written code to change the method name or add a parameter (or just live with the ugly inconsistency of the PNG operation being `CapturePNG` but the JPEG operation just being `Capture`).  While that might not be a _huge_ amount of work, it would involve multiple repos, and adding four characters to the method name seems like a pretty trivial change to make now so that it\u0027s zero work instead.",
      "parentUuid": "466ac0b7_b1fee655",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae1675c_cdf62dcf",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-09-16T05:06:02Z",
      "side": 1,
      "message": "I do not like the idea of putting the image format into method name.\nWhat if someone wants other image format, say webp, should we add `CaptureWebp` method for such case? I do not think so.\nIt could be better for the user to convert the image into other format by the application, instead of asking the service to provide the needed format.",
      "parentUuid": "aebed8b9_2d00a1fe",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c602d73_22fd0c39",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-09-16T21:44:47Z",
      "side": 1,
      "message": "I guess I just disagree?  Putting format conversion in the client application also isn\u0027t great if the source format provided by the service is already lossily compressed, as in JPEG -- converting that to a PNG doesn\u0027t restore the lost image quality.",
      "parentUuid": "eae1675c_cdf62dcf",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c029299f_41806c46",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-09-16T21:55:09Z",
      "side": 1,
      "message": "\u003e My thinking with leaning toward specifying the format explicitly in either the method name or a parameter was that it would be easier to introduce another format with minimal (or no) changes to existing code.\n\nWe regularly refactor dbus interfaces and add new properties / method parameters / etc.  This is all internal to the BMC, so there should be no issue with this.\n\n\u003e Putting format conversion in the client application also isn\u0027t great if the source format provided by the service is already lossily compressed, as in JPEG -- converting that to a PNG doesn\u0027t restore the lost image quality.\n\nI agree with you, but we can add a new parameter when someone wants to add support for PNG.  We\u0027ll have someone add a new enumeration ( { PNG, JPEG } ) and require that enumeration passed to the Capture method.\n\n@LeiYU / @Xie - Please update the description to be clear that this returns a path of a file in JPEG format for now and let\u0027s move on.",
      "parentUuid": "3c602d73_22fd0c39",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa4143cb_e9e0a823",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-19T21:15:12Z",
      "side": 1,
      "message": "These kinds of \"pass a filesystem path\" APIs aren\u0027t something we really want to propagate going forward.  They have really awkward concerns around permissions and cleanup.  We use them in some cases where the ownership of the file in question is clear, but in this case, given it\u0027s temporary, I don\u0027t think just passing the path works.\n\nI\u0027m assuming the eventual goal is to make this available through a web/ipmi API?  I think to do that we\u0027ll need to figure out the race conditions around ownership of this file.\n\nHas it been discussed just sending the image here as an array of bytes?",
      "range": {
        "startLine": 9,
        "startChar": 18,
        "endLine": 9,
        "endChar": 22
      },
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c854ea30_1c858805",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-09-08T09:26:13Z",
      "side": 1,
      "message": "Looks like there\u0027s a final trailing \u0027\\n\u0027 missing on this file.",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50b82d9d_8452cd27",
        "filename": "yaml/xyz/openbmc_project/Control/KVM/Screenshot.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-19T21:15:12Z",
      "side": 1,
      "message": "Are those necessary here?",
      "parentUuid": "c854ea30_1c858805",
      "revId": "19293c984473cd1e7ff883fe85dc80327bb4fca6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}