{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e8959aa0_e4d2f7ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-06-18T01:31:35Z",
      "side": 1,
      "message": "CMOS clear is currently part of ipmid(maintained as global variable )\nhttps://github.com/openbmc/phosphor-host-ipmid/blob/master/chassishandler.cpp#L1848 \nIs the plan to use that variable to set the property ?",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e03a76ba_3207368f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002117
      },
      "writtenOn": "2025-06-18T02:47:58Z",
      "side": 1,
      "message": "This variable is not used in the current design; the properties are get and set via OEM IPMI commands.",
      "parentUuid": "e8959aa0_e4d2f7ff",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a1c2c08_904a0357",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002117
      },
      "writtenOn": "2025-06-16T07:58:39Z",
      "side": 1,
      "message": "Hi @patrick@stwcx.xyz,\nCould you please help review this Gerrit change?\nThis change adds the necessary interface and property for the OEM meta command get/set boot order.",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efc8ab87_1a1d73d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-06-17T18:51:16Z",
      "side": 1,
      "message": "I need to know more about the intended implementation here in order to make sure we get appropriate level of feedback.\n\nSomeone also previously proposed this: https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/78214\n\nIs this one related?",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62e3d7c0_a7db94d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002117
      },
      "writtenOn": "2025-06-18T01:58:16Z",
      "side": 1,
      "message": "This implementation is unrelated to  https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/78214.\n\nIt\u0027s intended for the OEM meta IPMI get/set boot order command. \nDuring system boot, the BIOS issues the get/set boot order command to retrieve the boot order stored in the BMC, and then applies it to configure the boot options.\n\nHere, \"CMOS\" is a flag indicating whether to clear CMOS, and \"bootSequence\" represents the boot device order, with values such as \"USB_DEV\", \"NET_IPV6\", or \"SATA_HDD\", etc.",
      "parentUuid": "efc8ab87_1a1d73d7",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b82f4fc4_37322cbf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-06-18T04:14:37Z",
      "side": 1,
      "message": "And also, is there any plans from meta to use redfish host interface for boot option, boot order.\nThere is a design MR in review https://gerrit.openbmc.org/c/openbmc/docs/+/79327.\nUsing this bios can GET/POST/PATCH boot order to bmc.",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a3ea587_c358309a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002117
      },
      "writtenOn": "2025-06-23T07:55:37Z",
      "side": 1,
      "message": "@patrick@stwcx.xyz @prithvi24pai@gmail.com\nHi, if there are any remaining issues after the review, please let me know if anything else needs to be updated. Thanks!",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1517041c_95734651",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-06-27T10:16:23Z",
      "side": 1,
      "message": "One more thing to consider should we add all the flags under single interface. Example: yaml/xyz/openbmc_project/Control/Boot/Flags.interface.yaml\nAll the flags coming in future could go to same interface",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98847c3a_4917deb8",
        "filename": "yaml/xyz/openbmc_project/Control/Boot/CMOS.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-06-17T18:51:16Z",
      "side": 1,
      "message": "Who is going to implement this interface?  Is this something that is typically sent to the BIOS and we should put this in bios-settings-manager or is this something for phosphor-state-manager?  I don\u0027t really know and there isn\u0027t any design here.  I\u0027d like to get the right people to give feedback on this.",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fbee6ba_8ecd1604",
        "filename": "yaml/xyz/openbmc_project/Control/Boot/CMOS.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-06-18T01:26:51Z",
      "side": 1,
      "message": "This flag is usually used in `chassis bootparam get 5`. BIOS can directly send this command to GET/SET this param. phosphor-settings-manager can have this. Is there any other thoughts ?",
      "parentUuid": "98847c3a_4917deb8",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e0d5184_d81976dd",
        "filename": "yaml/xyz/openbmc_project/Control/Boot/CMOS.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-06-18T01:31:35Z",
      "side": 1,
      "message": "One more thing to consider should we add all the flags under single interface. Example: `yaml/xyz/openbmc_project/Control/Boot/Flags.interface.yaml`\nAll the flags coming in future could go to same interface",
      "parentUuid": "3fbee6ba_8ecd1604",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5aa945ee_115a7f11",
        "filename": "yaml/xyz/openbmc_project/Control/Boot/Source.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-06-17T18:51:16Z",
      "side": 1,
      "message": "Arbitrary strings are not likely to be acceptable here.  We have the \"Sources\" below as an enumeration.  How is \"Boot Source\" and \"Boot Sequence\" different?",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a90edeb5_2d83e0a9",
        "filename": "yaml/xyz/openbmc_project/Control/Boot/Source.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-06-18T01:26:51Z",
      "side": 1,
      "message": "Currently boot source is implemented as part of phosphor-settings-manager. The boot sequence is obtained from bios run time which is dynamic in nature. And also user has the option to delete the boot option(single option in the sequence). How does settings-manager delete the option ? Should boot option be a separate interface ?",
      "parentUuid": "5aa945ee_115a7f11",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eae2413_803bca07",
        "filename": "yaml/xyz/openbmc_project/Control/Boot/Source.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002117
      },
      "writtenOn": "2025-06-18T02:22:15Z",
      "side": 1,
      "message": "The current implementation uses the OEM-meta IPMI command get/set boot order to set the value of the boot sequence. \nThe current approach replaces boot options with the value \"RESERVED\". \nFor example, the sequence changes from {\"USB_DEV\", \"NET_IPV6\", \"SATA_HDD\", \"SATA_CD\", \"RESERVED\"} to {\"USB_DEV\", \"NET_IPV6\", \"RESERVED\", \"RESERVED\", \"RESERVED\"}.\nDo you have any suggestions?",
      "parentUuid": "a90edeb5_2d83e0a9",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c52c4bb_b31f99dd",
        "filename": "yaml/xyz/openbmc_project/Control/Boot/Source.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-06-18T04:08:42Z",
      "side": 1,
      "message": "At what point are we clearing the `RESERVED` ? \nIs this data reflected as part of redfish/v1/Systems/\u003csystem-id\u003e ?",
      "parentUuid": "8eae2413_803bca07",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4671e40_f9bd3d3e",
        "filename": "yaml/xyz/openbmc_project/Control/Boot/Source.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1002117
      },
      "writtenOn": "2025-06-18T06:08:35Z",
      "side": 1,
      "message": "As of now, \"RESERVED\" entries are not cleared. If an entry in the boot sequence is set to \"RESERVED\", the corresponding byte in the response data will be returned as 0xFF.\n\nCurrently, this is not reflected under redfish/v1/Systems/\u003csystem-id\u003e. These properties are only used by OEM IPMI commands in YV4.",
      "parentUuid": "7c52c4bb_b31f99dd",
      "revId": "870f5322606501fd0f96658ec874c2f9c7219ae5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}