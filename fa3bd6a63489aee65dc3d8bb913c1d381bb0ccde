{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "012f6aff_02630481",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2024-03-13T23:14:12Z",
      "side": 1,
      "message": "It doesn\u0027t feel right to me to continue in the direction of adding more methods to apply query constraints. I think we need a better solution in the long run. I\u0027m not sure what that is. Maybe it\u0027s some kind of graph query language.",
      "revId": "fa3bd6a63489aee65dc3d8bb913c1d381bb0ccde",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68f4d961_2351de1b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-03-14T01:22:05Z",
      "side": 1,
      "message": "I originally thought about this as doing by pattern - e.g. regexp, but for the simplicity and for the typical usage patterns in bmcweb, we have chosen to propose these `byId` (or `byLeaf`).\n\n- What if we propose  like `GetAssociatedSubTreebyByPathPattern()`?\n\n- Or can we have these `byId()` for now and consider the long run solution separately?\n\n- Or perhaps have a mapper function to expose mapper\u0027s `associationMaps\u0027 and `interfaceMap` by a function so that the caller can deal with them?\n\n- Or should we live with the current multi-level mapper calls in bmcweb for now?",
      "parentUuid": "012f6aff_02630481",
      "revId": "fa3bd6a63489aee65dc3d8bb913c1d381bb0ccde",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}