{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10465e20_1338c046",
        "filename": "yaml/xyz/openbmc_project/State/Thermal.events.yaml",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-07T13:20:41Z",
      "side": 1,
      "message": "I think we\u0027ve typically been using \"Normal\".  This event is a pretty long name.",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 49
      },
      "revId": "fad6e035866470553de02d466bcf18ad6d208d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91b4d9c7_36771c31",
        "filename": "yaml/xyz/openbmc_project/State/Thermal.events.yaml",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2025-05-07T22:19:13Z",
      "side": 1,
      "message": "The flow would be using\n1. PROCHOT asserts. we log DeviceOverOperatingTemperature\n2. THERMTRIP asserts. we log DeviceOverOperatingTemperatureFault\n3. THERMTRIP deasserts (CPU powers back on). we resolve DeviceOverOperatingTemperatureFault. But we need to somehow read the GPIO status of PROCHOT and refrain from printing DeviceOperatingNormalTemperature.\n4. PROCHOT deasserts. We resolve  DeviceOverOperatingTemperature and print DeviceOperatingNormalTemperature\n\nIts a bit awkward that we cannot read GPIOs especially if we are doing this from phosphor-gpio-monitor.",
      "parentUuid": "10465e20_1338c046",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 49
      },
      "revId": "fad6e035866470553de02d466bcf18ad6d208d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4224513_76e59d16",
        "filename": "yaml/xyz/openbmc_project/State/Thermal.events.yaml",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1002220
      },
      "writtenOn": "2025-05-07T23:41:25Z",
      "side": 1,
      "message": "When we resolve `DeviceOverOperatingTemperatureFault`, can we go back to `DeviceOverOperatingTemperature` or do we need another event?\n\nwe can have errors: `DeviceOverOperatingTemperature` and  `DeviceOverOperatingTemperatureFault`\nand event: `DeviceOperatingNormalTemperature`",
      "parentUuid": "91b4d9c7_36771c31",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 49
      },
      "revId": "fad6e035866470553de02d466bcf18ad6d208d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9d355e5_d3baae74",
        "filename": "yaml/xyz/openbmc_project/State/Thermal.events.yaml",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-07T13:20:41Z",
      "side": 1,
      "message": "Isn\u0027t \"Fault\" a worse of the non-fault?  I don\u0027t think this would ever be cleared on its own.  Either we would be operating entirely in a normal temperature or we would still have the error-level asserted.",
      "revId": "fad6e035866470553de02d466bcf18ad6d208d77",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}