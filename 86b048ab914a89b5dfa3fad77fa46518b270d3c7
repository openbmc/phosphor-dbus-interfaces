{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c6842241_3d077583",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2025-05-15T16:57:06Z",
      "side": 1,
      "message": "why we need this MaxPasswordLength configurable?\nI think we are good with MAX_PASSWORD_LENGTH meson flag with default value 64",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b87d8bf_062358b0",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001673
      },
      "writtenOn": "2025-05-15T18:10:30Z",
      "side": 1,
      "message": "NIST https://pages.nist.gov/800-63-4/sp800-63b.html guideline says\nVerifiers and CSPs SHOULD permit a maximum password length of at least 64 characters.\n\nThis indicates 64 is the least number for max password length and security policies must be allowed to configure higher number. Therefore I kept the type as size so that higher number can be configured.",
      "parentUuid": "c6842241_3d077583",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13b1e12c_129e5b08",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-15T18:13:24Z",
      "side": 1,
      "message": "@Chandramohan.harkude@gmail.com\n\nYou didn\u0027t answer this:\n\n\u003e why we need this MaxPasswordLength configurable?\n\nCan we just change the meson flag to 255?  Or 1024?  Does PAM have a limit?\n\nI don\u0027t really understand why you\u0027d want to configure a limit below what PAM supports, unless this is driven by what IPMI supports?",
      "parentUuid": "7b87d8bf_062358b0",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dac742a_ad8b87fa",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001673
      },
      "writtenOn": "2025-05-15T18:53:11Z",
      "side": 1,
      "message": "Making MaxPasswordLength configurable allows system admin to enforce stricter password policies\n\nCan’t we just set the meson flag to 255 or 1024 and be done?\n • Yes, you can raise the Meson build-time default (e.g., --Dmax-password-length\u003d1024). That would increase the default upper bound.\n    However:\n•Without configurability, you force all systems to accept that high limit — which may not be desirable for all platforms.\n•You lose flexibility to tighten policies dynamically.\n\nDoes PAM have a limit?\n  •PAM doesn’t explicitly define a max password length across all modules, but Many PAM modules use standard libc functions, which may impose a limit (commonly 512 bytes or more, sometimes unbounded).\n  \nWhy configure a limit below what PAM supports\n  •Security Policy Enforcement : Some organizations prefer password complexity over length and want to restrict overly long passwords",
      "parentUuid": "13b1e12c_129e5b08",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e789d6e3_ffabb984",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-15T19:03:51Z",
      "side": 1,
      "message": "\u003e Security Policy Enforcement : Some organizations prefer password complexity over length and want to restrict overly long passwords\n\nDo you have evidence of this?  Doing so explicitly violates the NIST guidelines you are saying you are trying to improve support for.\n\nThe following statements are present in the linked NIST guidelines:\n\n\u003e Other complexity requirements for passwords SHALL NOT be imposed.\n\n\u003e Verifiers and CSPs SHALL NOT impose other composition rules (e.g., requiring mixtures of different character types) for passwords.\n\n\u003e Users should be encouraged to make their passwords as lengthy as they want, within reason. Since the size of a hashed password is independent of its length, there is no reason to prohibit the use of lengthy passwords (or passphrases) if the user wishes. Extremely long passwords (perhaps megabytes long) could require excessive processing time to hash, so it is reasonable to have some limit.",
      "parentUuid": "0dac742a_ad8b87fa",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44799d68_fa2656d2",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001673
      },
      "writtenOn": "2025-05-15T20:00:08Z",
      "side": 1,
      "message": "As you said as per https://pages.nist.gov/800-63-4/sp800-63b.html#length \nit says it is reasonable to have some limit.\n\nif user/admin wants to change this limit dynamically, we need to make it configurable.\n\nThe guidelines no where explicitly says that max password can\u0027t be configured dyanamically.\n\nRight now I don\u0027t have the use case to support this dyanamic configuration but I want to provide the flexibility to admin/organization.",
      "parentUuid": "e789d6e3_ffabb984",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3e049df_0615ebbe",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-15T21:44:49Z",
      "side": 1,
      "message": "\u003e if user/admin wants to change this limit dynamically, we need to make it configurable.\n\nWhy?  This is not logically connected. We haven’t had it configurable before. Why should we start now?  This seems like low value code to me.\n\nJust because something _could_ be configured doesn’t mean we _have_ allow it to be configured.  We already support 64, which is within the guidelines of NIST. We can extend it with a 1 line change, which is still in the guidelines of NIST. If we allow users to reduce it we both have more code to maintain _and_ we start to violate NISTs guidelines.  This sounds like a lose-lose to me.\n\n\u003e it says it is reasonable to have some limit.\n\n“Reasonable” in the words of the document was “don’t allow it to be so long that hashing speed is noticeable”.  We are talking about 10s of kb at least before this even becomes a concern.  64, 256, 1024; these are all “reasonable” and within the bounds of NIST.",
      "parentUuid": "44799d68_fa2656d2",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "072e243d_c5272c76",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001673
      },
      "writtenOn": "2025-05-16T04:26:07Z",
      "side": 1,
      "message": "Okay will abandonthe MR",
      "parentUuid": "e3e049df_0615ebbe",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72913789_b1165fd0",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-05-16T10:11:52Z",
      "side": 1,
      "message": "Just to be clear, this isn’t a “you may not do this upstream” statement. I’m trying to understand the motivation. We need the motivation recorded so that someone later doesn’t pull it back out “for simplicity”. The motivation isn’t clear nor articulated.",
      "parentUuid": "072e243d_c5272c76",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43b38f07_7f501ad9",
        "filename": "yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001673
      },
      "writtenOn": "2025-05-16T19:42:26Z",
      "side": 1,
      "message": "I got bug in downstream for IPMI account which has limitation of 20 characters while investigating I realized that the Redfish does not have any MaxPasswordLength limitation therefore tried to add the same.",
      "parentUuid": "72913789_b1165fd0",
      "revId": "86b048ab914a89b5dfa3fad77fa46518b270d3c7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}