{
  "comments": [
    {
      "key": {
        "uuid": "517d5aa0_8614545c",
        "filename": "xyz/openbmc_project/Software/Activation.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2020-02-04T05:57:56Z",
      "side": 1,
      "message": "The interface was using `RequestedActivation` to do the \"activate\u0027 operation.\nSo I was expecting the `RedundancyPriority` and `ClearConfig` to be the properties of this interface, instead of the method parameters.\n\nBy adding this method, the interface will have two ways to do the \"activation\", which we should avoid.",
      "revId": "6fb8c4f7fcde7e0148f8199b841527495c275c1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4eda38aa_f1efa23e",
        "filename": "xyz/openbmc_project/Software/Activation.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-02-04T06:13:56Z",
      "side": 1,
      "message": "Yes Lei YU.\nBut this keeps on increasing the complexity and the order of the execution. Hence the correct plan would be to deprecate the RequestedActivation, and go ahead with Activate method (which can accept optional RedundancyPriority \u0026 ClearConfig attribute). \n\nThe problem with old approach is (before RequestedActivation, other properties must be set, and in that case, we need to differentiate the state of the object as the property value during that time, will not be applicable or will convey different meaning, till RequestedActivtion is applied. With method approach, this can also be avoided.",
      "parentUuid": "517d5aa0_8614545c",
      "revId": "6fb8c4f7fcde7e0148f8199b841527495c275c1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efe521e2_6f2724b9",
        "filename": "xyz/openbmc_project/Software/Activation.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000168
      },
      "writtenOn": "2020-02-04T02:51:55Z",
      "side": 1,
      "message": "how is this possible ? are we reserving any value for this ? \n\nNote: In your earlier patchset it was property name with value, so there was a way not to expose the same. As current patch expose this as parameter, this can\u0027t be a optional value / not -specified",
      "range": {
        "startLine": 12,
        "startChar": 36,
        "endLine": 13,
        "endChar": 27
      },
      "revId": "6fb8c4f7fcde7e0148f8199b841527495c275c1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "267cf0f5_3fcdd353",
        "filename": "xyz/openbmc_project/Software/Activation.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000312
      },
      "writtenOn": "2020-02-04T06:15:30Z",
      "side": 1,
      "message": "I presumed, if there are no params are passed the activate happens on the default firmware target i.e with redundancy priority \u00270\u0027. I will change it back to Dict to be consistent and compatible to older approach as well.",
      "parentUuid": "efe521e2_6f2724b9",
      "range": {
        "startLine": 12,
        "startChar": 36,
        "endLine": 13,
        "endChar": 27
      },
      "revId": "6fb8c4f7fcde7e0148f8199b841527495c275c1b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}