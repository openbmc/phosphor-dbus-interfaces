{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1b761766_d39fabbf",
        "filename": "yaml/xyz/openbmc_project/Sensor/Discrete/Operational.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-09-19T14:57:45Z",
      "side": 1,
      "message": "This is not a \"sensor\" but a State.  We already have some of these values modeled there.  Add new interfaces as necessary.",
      "revId": "16975adcca0261677dc5346be2d8dae34835fd67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "593a1361_f40781f0",
        "filename": "yaml/xyz/openbmc_project/Sensor/Discrete/Operational.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001422
      },
      "writtenOn": "2024-09-19T15:13:41Z",
      "side": 1,
      "message": "A unit can have multiple discrete sensors, but it doesn\u0027t make sense to have multiple \"states\" on one unit. A unit can only be in one (discrete) state.\n\nA unit would have discrete sensors for:\n- voltage good\n- clock good\n- not in reset\n- throttled\n- catastropic error\n\nThose discrete sensors can then be used to calculate the one state the unit is in.",
      "parentUuid": "1b761766_d39fabbf",
      "revId": "16975adcca0261677dc5346be2d8dae34835fd67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a67dbada_d6e58906",
        "filename": "yaml/xyz/openbmc_project/Sensor/Discrete/Operational.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-09-19T14:57:45Z",
      "side": 1,
      "message": "Do you have a reference to an external standard / specification for these?  It isn\u0027t immediately obvious that these all belong together.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 35,
        "endChar": 33
      },
      "revId": "16975adcca0261677dc5346be2d8dae34835fd67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a1bf0ae_af81eee4",
        "filename": "yaml/xyz/openbmc_project/Sensor/Discrete/Operational.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1001422
      },
      "writtenOn": "2024-09-19T15:13:41Z",
      "side": 1,
      "message": "This is based on the requirements of different discrete sensors found on the mainboard. It\u0027s not based on any spec.",
      "parentUuid": "a67dbada_d6e58906",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 35,
        "endChar": 33
      },
      "revId": "16975adcca0261677dc5346be2d8dae34835fd67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "448b45bb_ed1cdd3e",
        "filename": "yaml/xyz/openbmc_project/Sensor/Discrete/Physical.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-09-19T14:57:45Z",
      "side": 1,
      "message": "How is this different than our existing Sensor.Value interface?  Why do we need something new?",
      "revId": "16975adcca0261677dc5346be2d8dae34835fd67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a71174f_8c82d7fe",
        "filename": "yaml/xyz/openbmc_project/Sensor/Discrete/Physical.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001422
      },
      "writtenOn": "2024-09-19T15:13:41Z",
      "side": 1,
      "message": "It\u0027s using a discrete state instead of a floating point value.",
      "parentUuid": "448b45bb_ed1cdd3e",
      "revId": "16975adcca0261677dc5346be2d8dae34835fd67",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}