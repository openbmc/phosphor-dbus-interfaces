{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8725849f_375d1013",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-24T16:32:25Z",
      "side": 1,
      "message": "Sensors should be something measurable physically.  This datatype belongs in a non-sensor interface.  We don\u0027t intend match IPMI\u0027s behavior where everything is a sensor.",
      "revId": "ed48a726f38651d4b926c06561e7764f2296ef00",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46421bbb_3d365959",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-03-25T04:07:24Z",
      "side": 1,
      "message": "As my knowledge, there are many sensors which count number of created products. Such as count number of car go thru a gate, number of user in the office. They are physical sensor.\nAbout Ipmi, I think it is difference with D-Bus, we can decide which sensor will be public thru IPMI by adding them to \u003cMACHINE\u003e-ipmi-sensors.yaml.",
      "parentUuid": "8725849f_375d1013",
      "revId": "ed48a726f38651d4b926c06561e7764f2296ef00",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "174092db_d7a7f711",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-25T11:12:39Z",
      "side": 1,
      "message": "\u003e As my knowledge, there are many sensors which count number of created products. Such as count number of car go thru a gate, number of user in the office.\n\n\u003e For objects in the events/errors/counters, Unit must be \"Counts\"\n\nI know there _can_ be things such as physical counters but this isn\u0027t what you implied here.  I don\u0027t think you are implementing a \"count the number of people in a data center\" for the BMC, so that isn\u0027t relevant to this discussion.\n\nThe only way for other programs to understand what a Sensor.Value is about is by interpreting the path.  This is fine for a small set of well-defined physical entities, but it is not fine for a large set of error counters spread across multiple pieces of hardware.\n\nTake for instance a network switch / fabric controller with 16 ports.  At a minimum you\u0027re going to have 2 errors or events per port (one for each direction).  So you\u0027re going to have to have 32 sensors named things like \"switchN_portM_upstream\u0027.  This leads to a bunch of tightly-coupled string processing between the \"sensor\" program and the \"error handling\" program.\n\nInstead what we want to see is a well-defined interface specific to the problem domain, which can then be associated to a physical Inventory object that it is holding data for.  Maybe \"FabricStatistics\" in the example above and properties like `size Ports`, `array[size] UpstreamErrorCount`, etc.\n\nI hope this helps with the thinking we have that you can map to your problem domain.  If you need more assistance with direction, please let me know some more details on what kinds of events/errors/counts you\u0027re trying to model.",
      "parentUuid": "46421bbb_3d365959",
      "revId": "ed48a726f38651d4b926c06561e7764f2296ef00",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06536994_31dc2f9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-03-27T14:36:34Z",
      "side": 1,
      "message": "Currently, I\u0027m working \"Adding sensor monitoring\" in PLDM-stack. As the proposed design https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/47252/15/designs/pldm-stack.md the sensors will be managed by pldmd services. Each sensor PDRs will have on sensor D-Bus interface, the value of sensor will be read by pldmd and update to value in sensor D-Bus property.\nI have problem with the counters, number of errors or events which also reported thru PLDM interface. They should also have D-Bus interface to report the value and the functional status of the device report those info. In my implementation, these counters will be add as sensors with baseUnit as counts.\nWhich D-Bus interface should I add for these counters?",
      "parentUuid": "174092db_d7a7f711",
      "revId": "ed48a726f38651d4b926c06561e7764f2296ef00",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8667c083_b895e5f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000957
      },
      "writtenOn": "2022-03-28T15:04:03Z",
      "side": 1,
      "message": "Hi Thu,\n\nI think the counter sensor you are working on is numeric sensor so it should be correct to implement the value.interface.\n\nRegarding to sensor unit, it would be better to adding one of unit defined in DSP0248 page 133(https://www.dmtf.org/sites/default/files/standards/documents/DSP0248_1.2.1.pdf) instead of just adding \"counts\" unit.\n\nFor example, if the sensor is for counting corrected error, then its numeric PDR should set sensorUnits field to 80(corrected Errors) and the value.interface should also have a corresponding unit for 80(corrected Errors).",
      "parentUuid": "06536994_31dc2f9d",
      "revId": "ed48a726f38651d4b926c06561e7764f2296ef00",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12dea170_a16e809c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2022-03-28T15:12:15Z",
      "side": 1,
      "message": "Hi Gilbert,\n\nUnit type 67 (counts), 79 (errors), (80 corrected errors), 81 (uncorrected errors) are the units for the counts of some things. So I think adding one \"counts\" unit in value interface of sensors is enough.\n\nRegards,\nThu Nguyen.",
      "parentUuid": "8667c083_b895e5f7",
      "revId": "ed48a726f38651d4b926c06561e7764f2296ef00",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63db089a_a92fda64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2023-05-05T03:43:27Z",
      "side": 1,
      "message": "Hi Patrick Williams,\n\nThe Sensor Base Unit in PLDM spec from Gilbert is standards base unit of PLDM interface. The ipmi spec also includes those sensors. Because OpenBMC support PLDM and Ipmi interface, I don\u0027t see any reason to not support those interface.\n\nLet say in the PLDM interface between the MCU and BMC, when BMC want to report number of BERT errors of MCU to BMC it have to use \"Count\" unit in the numeric sensor PDRs, how can we support those kind of sensors in Value interface.",
      "parentUuid": "12dea170_a16e809c",
      "revId": "ed48a726f38651d4b926c06561e7764f2296ef00",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94043620_86638fce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-05-05T18:39:54Z",
      "side": 1,
      "message": "You need to create a separate interface to represent the concept exposed by the generic \"Count\".  I\u0027m not planning on allowing non-unitized sensors.  Those belong in some other object / namespace.",
      "parentUuid": "63db089a_a92fda64",
      "revId": "ed48a726f38651d4b926c06561e7764f2296ef00",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}