{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ed39541f_3031668b",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-08T16:11:35Z",
      "side": 0,
      "message": "It should still be readonly, right?",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f4f7695_0cf17bde",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-11-09T01:08:41Z",
      "side": 0,
      "message": "Yes, It can read and write after removing `const`.\n\n```\n~# busctl introspect xyz.openbmc_project.Settings /xyz/openbmc_project/control/power_supply_attributes\nNAME                                              TYPE      SIGNATURE RESULT/VALUE FLAGS\norg.freedesktop.DBus.Introspectable               interface -         -            -\n.Introspect                                       method    -         s            -\norg.freedesktop.DBus.Peer                         interface -         -            -\n.GetMachineId                                     method    -         s            -\n.Ping                                             method    -         -            -\norg.freedesktop.DBus.Properties                   interface -         -            -\n.Get                                              method    ss        v            -\n.GetAll                                           method    s         a{sv}        -\n.Set                                              method    ssv       -            -\n.PropertiesChanged                                signal    sa{sv}as  -            -\nxyz.openbmc_project.Control.PowerSupplyAttributes interface -         -            -\n.DeratingFactor                                   property  u         90           const\n```\n\n```\n~# busctl set-property xyz.openbmc_project.Settings /xyz/openbmc_project/control/power_supply_attributes xyz.openbmc_project.Control.PowerSupplyAttributes DeratingFactor u 80\nFailed to set property DeratingFactor on interface xyz.openbmc_project.Control.PowerSupplyAttributes: Property \u0027DeratingFactor\u0027 is not writable.\n```",
      "parentUuid": "ed39541f_3031668b",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6399a28_b7b42424",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-09T02:58:04Z",
      "side": 0,
      "message": "My suggestion was that you should change from const -\u003e readonly, not remove const.",
      "parentUuid": "9f4f7695_0cf17bde",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d2af0cb_ef924af4",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-11-09T03:09:20Z",
      "side": 0,
      "message": "Sorry, I am not following why change from const -\u003e readonly?\nBecause for readonly types, the caller still cannot dynamically change the `DeratingFactor` attribute.",
      "parentUuid": "a6399a28_b7b42424",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5ac825b_8515818f",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-09T03:22:49Z",
      "side": 0,
      "message": "Why would a caller change DeratingFactor?  That does not seem like a property that should come from other processes.\n\nWhere is your design proposal?",
      "parentUuid": "4d2af0cb_ef924af4",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0deee6ad_46a5976c",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-11-09T03:32:51Z",
      "side": 0,
      "message": "\u003e Why would a caller change DeratingFactor?  That does not seem like a property that should come from other processes.\n\nhttps://github.com/openbmc/openbmc/blob/master/meta-phosphor/recipes-phosphor/settings/phosphor-settings-defaults/defaults.yaml#L17\n\nThis property is configured in settings and defaults to 90.\n\u003e \n\u003e Where is your design proposal?\n\nIn fact, for our power supply, we need to dynamically calculate a new DeratingFactor based on the actual power consumption(power cap) and total power consumption, and then update it to the phosphor-settings.\n\nThen for the occ process, we will dynamically obtain this value from phosphor-settings and participate in the calculation.",
      "parentUuid": "d5ac825b_8515818f",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "839f4396_d3ea4143",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-09T03:45:50Z",
      "side": 0,
      "message": "I don\u0027t understand why we are proposing to spread something so simple over 3 daemons.  We really should move away from one daemon pushing state into another daemon.  Why can\u0027t the daemon that is creating this interface do the calculation itself based on sensors and/or settings in other dbus interfaces?",
      "parentUuid": "0deee6ad_46a5976c",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b68d8b40_f1d92210",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-11-09T04:44:06Z",
      "side": 0,
      "message": "\u003e I don\u0027t understand why we are proposing to spread something so simple over 3 daemons.  We really should move away from one daemon pushing state into another daemon.  Why can\u0027t the daemon that is creating this interface do the calculation itself based on sensors and/or settings in other dbus interfaces?\n\nTo be honest, I donâ€™t know what the original intention of the early design was?\nBut we have done some refactoring downstream, and I want to see if can we go upstream?",
      "parentUuid": "839f4396_d3ea4143",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28c2fb0c_c45c8f33",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2023-11-13T21:28:49Z",
      "side": 0,
      "message": "The original intention was to make it read-only by using \u0027const\u0027 at the time when the \u0027readonly\u0027 flag did not exist yet: https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/12036.\n\nAdding Matt who\u0027s more knowledgable about this interface.",
      "parentUuid": "b68d8b40_f1d92210",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcc16868_0d86b521",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-11-13T21:51:20Z",
      "side": 0,
      "message": "George is your app that would calculate this value an existing BMC app?",
      "parentUuid": "28c2fb0c_c45c8f33",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c2cbbf_3df675c3",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-11-14T01:19:21Z",
      "side": 0,
      "message": "Yes, because this is not a fixed value.\n\nWe have removed const from this value downstream and dynamically calculated the `DeratingFactor` based on the actual input voltage and set power consumption value, and then updated the `DeratingFactor`\n\nIn fact, we have also made some changes in openpower-occ-control, removing the default configuration in meson.options (https://github.com/openbmc/openpower-occ-control/blob/master/meson.options#L29-L35), and using the DeratingFactor in the PowerSupplyAttributes interface synchronously.",
      "parentUuid": "bcc16868_0d86b521",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67f911f6_e67d420e",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-14T15:28:04Z",
      "side": 0,
      "message": "You\u0027re still not being very clear.  The flags here are from a dbus perspective and not from the perspective of your application implementing the dbus interface.\n\nconst - This property cannot change and therefore will never emit signals.\nreadonly - This property cannot be changed by dbus *clients*, but can change by the server (and thus will emit signals).\n\nI can understand the application implementing PowerSupplyAttributes do calculations to dynamically adjust its own DeratingFactor.  This would make it a `readonly` property.  I am not understanding why an external application (ie. dbus client) would calculate the DeratingFactor and push it into the PowerSupplyAttributes application, only for it to then be pulled back out by openpower-occ-control.",
      "parentUuid": "21c2cbbf_3df675c3",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6f17d99_4b2fd898",
        "filename": "yaml/xyz/openbmc_project/Control/PowerSupplyAttributes.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-11-14T16:12:56Z",
      "side": 0,
      "message": "yea, in this case may as well just host it in occ-control if it\u0027s going to calculate it.",
      "parentUuid": "67f911f6_e67d420e",
      "revId": "7daf2d7d5a702a08e601c9841e41e9a254e90cdf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}