{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d3e0b74_bf7cefb0",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-02-02T15:08:59Z",
      "side": 1,
      "message": "Units are not listed here.\nI believe the standard for time based properties should have a type of uint64 and be in units of milliseconds.",
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd9f6710_98defbaf",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-02T17:48:18Z",
      "side": 1,
      "message": "üëç .  See EpochTime interface for the canonical way we represent time.",
      "parentUuid": "4d3e0b74_bf7cefb0",
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b9111ab_024319ee",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-02-03T04:25:03Z",
      "side": 1,
      "message": "I updated the description to mention units of CorrectionTime.",
      "parentUuid": "cd9f6710_98defbaf",
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db455a2a_63724adc",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-02T17:48:18Z",
      "side": 1,
      "message": "Don\u0027t use uint16 on this either.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 63,
        "endChar": 18
      },
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67104e7a_6f707c11",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-02-03T04:25:03Z",
      "side": 1,
      "message": "In the DCMI specification, the unit of SamplingPeriod is second and the number of bytes to describe SamplingPeriod is 2. Therefore, I think the type of this property should be unit16",
      "parentUuid": "db455a2a_63724adc",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 63,
        "endChar": 18
      },
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d875728_34f37b31",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-02T17:48:18Z",
      "side": 1,
      "message": "What are these??",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 140,
        "endChar": 39
      },
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "954dc567_9bde2bca",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-02T17:51:50Z",
      "side": 1,
      "message": "I see this in the DCMI spec:\n\n\u003e 02h ‚Äì 10h OEM defined actions\n\nThis is unacceptable in a dbus interface.",
      "parentUuid": "8d875728_34f37b31",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 140,
        "endChar": 39
      },
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "304c6d15_193672b4",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2023-02-03T04:25:03Z",
      "side": 1,
      "message": "In the ipmitool, it is supporting to configuration exception action is OEM_02/03../0F/10. Therefore, the Dbus-interface should include those options. The application which implements this interface can call a service to handle OEM actions, users can override this service to implement their exception action.",
      "parentUuid": "954dc567_9bde2bca",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 140,
        "endChar": 39
      },
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36582bb6_7a47039f",
        "filename": "yaml/xyz/openbmc_project/Control/Power/Cap.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-03T15:08:04Z",
      "side": 1,
      "message": "We need to find another solution.  I\u0027m not accepting undocumented \"OEM\" properties that just mirror some IPMI specification.  If we did this everywhere we\u0027d end up with dbus being the _worst_ of all interfaces because it would take all the bad stuff from every \"standard\" in the world.\n\nIf you have an explicit need for some specific OEM behaviors here, please document them with real readable property descriptions and names.\n\nMaking ipmitool work out of the box is not high on my list of concerns.  We can always reject when someone tries to set OEMxx on the IPMI response.",
      "parentUuid": "304c6d15_193672b4",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 140,
        "endChar": 39
      },
      "revId": "77b4452b0ff1e22d1ebb0651c9d43f7807145513",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}