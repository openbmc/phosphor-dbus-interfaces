{
  "comments": [
    {
      "key": {
        "uuid": "21be7467_c5912a08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:55:45Z",
      "side": 1,
      "message": "I guess there was a comment here about subsystems being an enumeration but there are too many to count.\n\nWhat does \"save decoding effort at the far end\" mean?\n\nIf we\u0027re going to have a free-form string, we generally leave remarks that it should not be used for any programmatic interpretation.  Is that acceptable in this case?  What we don\u0027t want is arbitrary code trying to parse these strings with constants spread across the code-base.  If you want constants, that is what enumerations are for.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 58
      },
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b1077ae_94638fe7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-07-28T19:46:22Z",
      "side": 1,
      "message": "There is already a map of the end values we want to use here in the PEL daemon: https://github.com/openbmc/phosphor-logging/blob/master/extensions/openpower-pels/pel_values.cpp#L31\n\nSo if we were to use an enum, we\u0027d basically have to duplicate that in bmcweb, or maybe use a 70 case switch statement to convert the enum back to the string, just to get back to the same result.",
      "parentUuid": "21be7467_c5912a08",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 58
      },
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3b93bb4_6f45837e",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 4,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:53:57Z",
      "side": 1,
      "message": "Property name should be \u0027Subsystem\u0027 to follow conventions.",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37e27423_83277ec9",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:53:57Z",
      "side": 1,
      "message": "Should we create an enumeration of these?  We generally do not prefer having free-form strings.",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5574a8d7_207fc383",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-07-28T19:32:01Z",
      "side": 1,
      "message": "+1 for having enumerations. That way it\u0027s defined which values are supported.",
      "parentUuid": "37e27423_83277ec9",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}