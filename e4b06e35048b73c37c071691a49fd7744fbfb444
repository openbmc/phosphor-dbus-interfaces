{
  "comments": [
    {
      "key": {
        "uuid": "96fe6272_9bc09b3f",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-03T11:13:04Z",
      "side": 1,
      "message": "I don\u0027t think this is named well then.  Is \"Speed\" what you\u0027re looking for?\nOr \"TrainedGen[eration]\"?  \"PCIeType\" would imply to me the maximum speed or design type of the card, not the current speed in use, because often times different generations have a different mechanical edge design.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 15,
        "endChar": 61
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dfc9cec_0d5d6ae3",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-09-06T07:32:52Z",
      "side": 1,
      "message": "I\u0027m so sorry i didn\u0027t make myself clear. I think \"negotiated link speed\" is what i want to mean here. In PCIe Device, we can obtain negotiated link speed from \"Current Link Speed\"(CLS)\" field in link status register(LNKSTS). I confuse with the field name. In my opinion, the information between CLS and PCIe type is the same. Please correct me if there is any mistake. \n\nThe description of PCIeType from Redfish PCIeDevice schemas:\nPCIeType:\n\"This property shall contain the negotiated PCIe interface version in use by this device.\"\n\nThe description of CLS:\n\"This field indicates the negotiated link speed of the given PCIe* link.\"\n\nThe description of LNKSTS:\n\"The PCIe* link status register provides information on the status of the PCIe* link\nsuch as negotiated width, training, and so on.\"",
      "parentUuid": "96fe6272_9bc09b3f",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 15,
        "endChar": 61
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a516f06_a22bd963",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-06T07:33:19Z",
      "side": 1,
      "message": "Hm... Once it supposed to be `TrainedGen` (i.e. actually used here), shouldn\u0027t it go to `xyz.openbmc_project.State.Decorator.xxx` instead?",
      "parentUuid": "96fe6272_9bc09b3f",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 15,
        "endChar": 61
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cb19b4c_b41d2df5",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-09-06T21:07:40Z",
      "side": 1,
      "message": "Note the actual negotiated speed can vary due to device policy eg for power savings (along with device width).",
      "parentUuid": "9a516f06_a22bd963",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 15,
        "endChar": 61
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f135c8e7_9e099116",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-07T15:28:13Z",
      "side": 1,
      "message": "@Spencer - I think the primary issue here is with the name.  I understand Redfish has that name but it is a pretty poor description of what is being modeled.  I\u0027d like to see something more appropriate even though it doesn\u0027t align with what Redfish chose.",
      "parentUuid": "3cb19b4c_b41d2df5",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 15,
        "endChar": 61
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0773b58a_22371d28",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-09-07T17:46:11Z",
      "side": 1,
      "message": "Actually, I want to know is this actually expected to be the speed in use, the trained speed, or the speed supported?  My point is the former can be quite dynamic on some cards.\n\nNote that the upstream port and downstream port can limit the speed; and somtimes the upstream can be limited because the backplane or other interconnect doesn\u0027t support what the silicon supports.",
      "parentUuid": "f135c8e7_9e099116",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 15,
        "endChar": 61
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2500def_0d5250cd",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-09-09T02:01:36Z",
      "side": 1,
      "message": "@Patrick - Thank you, I understand the problem here. I think \"TrainedGen\" looks good for me?\n\n@Milton - Thanks for your explanation. In my opinion, \"trained speed\" is more nearly to the implementation here. \"speed supported\" may handle by \"MaxPcieType\" in Redfish schama, although the name may be not great.\nFor now, I simply implement the property by getting value from link status register via peci-pcie. I am not sure does others handle the problem you mention. I will do more research about it.",
      "parentUuid": "0773b58a_22371d28",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 15,
        "endChar": 61
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29abba70_44054798",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-09T02:18:47Z",
      "side": 1,
      "message": "\u003e @Patrick - Thank you, I understand the problem here. I think \"TrainedGen\" looks good for me?\n\nProbably want to spell out \"TrainedGeneration\"\n\nOther alternatives (but I don\u0027t have a strong opinion here):\n\"GenerationInUse\"\nwhich could be a nice counter to GenerationSupported when we add it in the future.\n\nAgreed, redfish picked a mediocre name here, but they also have different namespace scoping rules than we have on dbus, so they have to explicitly put \"PCIe\" in the name, which explains some of this.\n\n\n\u003e Actually, I want to know is this actually expected to be the speed in use, the trained speed, or the speed supported?\n\nIf this is following Redfish it\u0027s for the trained version.  From the spec:\n\n\"The version of the PCIe specification in use by this device\"",
      "parentUuid": "d2500def_0d5250cd",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 15,
        "endChar": 61
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc365a1b_479a2e4f",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-06T07:33:19Z",
      "side": 1,
      "message": "Not related to this particular commit but I don\u0027t like this interface from beginning. \nI would suggest to refactor this `FunctionXXX` into separate interface like `xyz.openbmc_project.Inventory.Item.PCIeFunction` and make each function as subnode of `PCIeDevice` like this:\n```\n└─/xyz\n  └─/xyz/openbmc_project\n    └─/xyz/openbmc_project/PCIe\n      └─/xyz/openbmc_project/PCIe/S0B5D0\n        ├─/xyz/openbmc_project/PCIe/S0B5D0/func0\n        ├─/xyz/openbmc_project/PCIe/S0B5D0/func1\n        └─/xyz/openbmc_project/PCIe/S0B5D0/func2\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "e4b06e35048b73c37c071691a49fd7744fbfb444",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}