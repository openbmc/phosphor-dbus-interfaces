{
  "comments": [
    {
      "key": {
        "uuid": "efbbce5b_dd230c99",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-01T21:55:43Z",
      "side": 1,
      "message": "No.... it\u0027s not.  We currently use well known dbus path names to support multiple certificates.  I\u0027m not really sure why having a fixed interface for a pointer to a bundle is any better than the existing well known name approach.  Can you contrast this new interface with the existing mechanisms that exist already?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "9f88c4e522461be229e2bbb5a4f41e80dec7bcfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69ff663a_4df1dc16",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-12-01T22:49:29Z",
      "side": 1,
      "message": "Thanks for your comment. \n\nI mean the \"certificate dbus object\" is for a single certificate. We need an \"dbus object\" for \"a list of root certificates\".\n\nAnd also in current implementation, we only allow a single root certificate. \nhttps://github.com/openbmc/phosphor-certificate-manager/blob/master/certs_manager.cpp#L156.",
      "parentUuid": "efbbce5b_dd230c99",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "9f88c4e522461be229e2bbb5a4f41e80dec7bcfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b154192f_e0dcef35",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-01T23:24:08Z",
      "side": 1,
      "message": "Sure, but could we not just extend the naming convention?  right now the path is \"authority\" could we not just do \"authority2\" \"authority3\" ect?  That seems like a much lower lift than trying to define a whole new interface for it, and considering that these are read from the file system, we\u0027d still have to come up with a naming convention outside of dbus anyway.",
      "parentUuid": "69ff663a_4df1dc16",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "9f88c4e522461be229e2bbb5a4f41e80dec7bcfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4548ec6d_b6640808",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-01T20:46:03Z",
      "side": 1,
      "message": "Who is \"We\"?  Do we have a design document confirming this direction?",
      "range": {
        "startLine": 9,
        "startChar": 62,
        "endLine": 10,
        "endChar": 13
      },
      "revId": "9f88c4e522461be229e2bbb5a4f41e80dec7bcfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5664caae_aede6723",
        "filename": "yaml/xyz/openbmc_project/Certs/TrustBundle.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-12-01T20:46:03Z",
      "side": 1,
      "message": "I don\u0027t really understand enough of what is being proposed here.\n\nWhat is the relationship between Replace, Install, Certificate, and TrustBundle?\n\nShould this path be read-only?  The interface says \"provide... management features\" but it only provides a single property.  I\u0027m not understanding how this property is used to manage the \"Trust Bundle\".",
      "revId": "9f88c4e522461be229e2bbb5a4f41e80dec7bcfa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}