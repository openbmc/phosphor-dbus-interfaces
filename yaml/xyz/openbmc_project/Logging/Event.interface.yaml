#TODO This interface and the logging entry interface
#     is having common properties,Ideally there should be
#     one common interface and the specific properties
#     for logging should go in (Logging/Entry).
#     https://github.com/openbmc/openbmc/issues/2923
description: >
    Implement to provide event entry attributes.
    This interface should be instantiated for the phosphor::events namespace.
    This interface is a collection of objects, therefore it is required to
    implement org.freedesktop.DBus.ObjectManager on the events namespace root.
    Optionally, implement xyz.openbmc_project.Delete to allow the deletion of
    individual entries.
    The event D-Bus object path would look like
    <PhosphorDbusRoot>/events/<type>/<id>
    Here "type" is the type of event, Could be network/system state event etc.
    Type would be given by the application configuration file which would
    be implementing this interface.
    Here "id" is positive integer starts from 1 and it gets incremented by 1
    with any newly created object.
properties:
    - name: Timestamp
      type: uint64
      description: >
          Event creation timestamp in milliseconds since 1970.
    - name: Message
      type: string
      description: >
          The message description of the event entry.
    - name: AdditionalData
      type: array[string]
      description: >
          Additional information in the form of metadata field strings VAR=val
    - name: Severity
      type: enum[self.SeverityLevel]
      default: Unknown
      description: >
          The severity of the event.

enumerations:
    - name: SeverityLevel
      description: >
          Possiable severity levels for the event.
      values:
        - name: Unknown
          description: >
              The event severity is unknown.
        - name: Ok
          description: >
              The event severity is normal and attention is not required.
        - name: Critical
          description: >
              The event severity is critical and requires immediate attention.
        - name: Warning
          description: >
              The event severity is warning and requires attention.

associations:
    - name: event_indicator
      description: >
          The object that implements this event interface can implement the
          event_indicator association to represent the status of the pointed
          object through this association link so the pointed object can use
          "reverse_name" to get more details about the event and indicate
          the status and vice versa.
      reverse_name: event_log
    - name: error_log
      description: >
          The object that implements this event interface can implement the
          error_log association to point the error log object that can be
          used to get more details about the event.
      reverse_name: event_log
      required_endpoint_interfaces:
          xyz.openbmc_project.Logging.Entry
    - name: event_originator
      description: >
          The object that implements this event interface can implement the
          event_originator association to point the object that originated
          this event.
      reverse_name: event_log
