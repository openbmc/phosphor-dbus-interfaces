{
  "comments": [
    {
      "key": {
        "uuid": "862dbe7e_f38c3cc5",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-08T12:01:14Z",
      "side": 1,
      "message": "I think we support \u0027set\u0027.",
      "range": {
        "startLine": 11,
        "startChar": 12,
        "endLine": 11,
        "endChar": 17
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d7b571b_e2d8baa2",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-10T06:34:39Z",
      "side": 1,
      "message": "Hm? What is \"set\"? I didn\u0027t found it in PDI repo.",
      "parentUuid": "862dbe7e_f38c3cc5",
      "range": {
        "startLine": 11,
        "startChar": 12,
        "endLine": 11,
        "endChar": 17
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c9e84b7_8b2bc7a0",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-10T11:38:10Z",
      "side": 1,
      "message": "https://github.com/openbmc/sdbusplus/blob/master/docs/interface.md#containers",
      "parentUuid": "4d7b571b_e2d8baa2",
      "range": {
        "startLine": 11,
        "startChar": 12,
        "endLine": 11,
        "endChar": 17
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8998b1e_4722d616",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-03T20:16:00Z",
      "side": 1,
      "message": "Why is this an array?  Are there drives that support multiples of these?",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 56
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8843ef5_3579a302",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-04T08:58:04Z",
      "side": 1,
      "message": "That was Patrick\u0027s suggestion, see above (he had SATA+SAS case in mind).\nIn our case it can be only one of them. BTW, here is how we use it:\nhttps://github.com/YADRO-KNS/obmc-yadro-hardware/blob/master/src/storage/inventory.cpp",
      "parentUuid": "b8998b1e_4722d616",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 56
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdab125e_2a7893ee",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-09T22:28:18Z",
      "side": 1,
      "message": "I would\u0027ve expected SAS would just be the enum for sata+sas?  Making this an array makes it a lot harder to build interfaces, as most interfaces tend to treat this as a single enum.  Otherwise, clients need to then read in the array and priority sort it to determine which things you care about, or you have to make assumptions, like only reading the first one.  I\u0027d much prefer this be a single propertly.",
      "parentUuid": "f8843ef5_3579a302",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 56
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66348e98_c1a50ca1",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-10T06:34:39Z",
      "side": 1,
      "message": "No so big deal, actually, but I prefer single enum too.\n@Patrick?",
      "parentUuid": "fdab125e_2a7893ee",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 56
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77b0c134_2c93dd2f",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-10T11:38:10Z",
      "side": 1,
      "message": "\u003e Otherwise, clients need to then read in the array and priority sort it to determine which things you care about, or you have to make assumptions, like only reading the first one.\n\nThis is exactly why we support std::set though.  I\u0027m surprised there aren\u0027t any already defined.\n\nBetween adding an Unknown enum and using a set, I\u0027d tend to prefer a set.  It is more accurate (SAS+SATA or SATA+NVMe) and I don\u0027t see it as significantly more complex.\n\n(SATA+NVMe is also a common mode for M.2 card).",
      "parentUuid": "66348e98_c1a50ca1",
      "range": {
        "startLine": 13,
        "startChar": 10,
        "endLine": 13,
        "endChar": 56
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c76eb104_5e0558cb",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-03T20:16:00Z",
      "side": 1,
      "message": "Do we want to have an explicit enumeration for \"Unknown\" such that we can make it very clear the behavior when this interface can\u0027t be implemented, or we don\u0027t have the data in the VPD.",
      "range": {
        "startLine": 21,
        "startChar": 12,
        "endLine": 21,
        "endChar": 26
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3a5c7b8_889648ac",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-04T08:58:04Z",
      "side": 1,
      "message": "Good point! I have comment in commit message: \"Leave the list empty if supported interfaces unknown.\", forgot to add it to parameter description. Will fix.",
      "parentUuid": "c76eb104_5e0558cb",
      "range": {
        "startLine": 21,
        "startChar": 12,
        "endLine": 21,
        "endChar": 26
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cabd63e9_812e945e",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-03T20:16:00Z",
      "side": 1,
      "message": "A USB drive kind of feels like it doesn\u0027t really fit in this abstraction, as it\u0027s not an \"internal drive\" but more of a storage device.  I would expect that something like a flash drive would have its own inventory type, but maybe not?  Is there a use case for this?  Maybe it\u0027s worth omitting until we have a better use case?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "104dbf96_9d27ffbe",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-04T08:58:04Z",
      "side": 1,
      "message": "No, I have no usecases for USB right now, just thought it might be useful later.\nI don\u0027t mind to remove it.\nPatrick, what\u0027s your opinion here?",
      "parentUuid": "cabd63e9_812e945e",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9030ebeb_99d0b7d5",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-08T12:01:14Z",
      "side": 1,
      "message": "Is \"USB\" even a drive interface?  Isn\u0027t it \"SATA over USB\" or \"SCSI over USB\"?",
      "parentUuid": "104dbf96_9d27ffbe",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3c6766b_0efa9e65",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-09T22:24:58Z",
      "side": 1,
      "message": "IMO lets just remove it in the context of this patchset.  We\u0027ll deal with it when we have a use case.",
      "parentUuid": "9030ebeb_99d0b7d5",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7c73ae7_bfa6b007",
        "filename": "yaml/xyz/openbmc_project/Inventory/Item/Drive.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-10T06:34:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f3c6766b_0efa9e65",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "aa52871e1c06a2de352e7217fc371ac12c4fc4ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}