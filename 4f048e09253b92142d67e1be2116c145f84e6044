{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1f7a934b_bd19b5f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2023-02-15T05:20:35Z",
      "side": 1,
      "message": "I had responded to the commit request you to please review.",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b0eac1a_2aa50d6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2023-02-15T05:47:23Z",
      "side": 1,
      "message": "I had responded to the comment, please check if valid",
      "parentUuid": "1f7a934b_bd19b5f4",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "659448e0_49a44f21",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-09T14:32:03Z",
      "side": 1,
      "message": "do we need to add this as a common error here, saying another operation is already in progress?\nyaml/xyz/openbmc_project/Common.errors.yaml",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3369ff3_35b28186",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-09T18:04:51Z",
      "side": 1,
      "message": "Isn\u0027t that what Common.Unavailable is for?\n\nI\u0027d rather use Common errors as much as possible.\n\nI see \"Unavailable\" is already returned.  When is Unavailable going to be used now vs the proposed AlreadyInProgress?  And... is that a useful differentiation?  Can we enumerate why?",
      "parentUuid": "659448e0_49a44f21",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0833760_2498aadd",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-02-10T04:49:04Z",
      "side": 1,
      "message": "Currently NotAllowed is returned when another dump is in progress, I think unavailable is more suitable",
      "parentUuid": "c3369ff3_35b28186",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f80c1ce9_ac2b7971",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2023-02-10T05:18:27Z",
      "side": 1,
      "message": "Patrick,\nThis is the reference link we discussed the comments earlier https://gerrit.openbmc.org/c/openbmc/phosphor-debug-collector/+/51219.\n\nAs mentioned in the reveiw link Devender is trying to stop user initiated BMC dump\u0027s incase one dump collection is in progress. Considering the flash/performance , multiple dump request can slow down the BMC. Basically for any new user requests, incase any dump is in progress , dump manager is not going to collect same data again. Instead saing Notallowed or un available errors it will be good to provide some meaningfull error to user sayng another same type of dump collection is in rprogress and check that dump instead of requesting new. This is the background on this chnage request.",
      "parentUuid": "c0833760_2498aadd",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f493c54b_04618dc1",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-10T16:07:52Z",
      "side": 1,
      "message": "\u003e Instead saing Notallowed or un available errors it will be good to provide some meaningfull error\n\nWhat code is going to get the error result and is it actually useful to split out the conditions?  More granular errors can be useful but they can also be more cases to have to worry about without any benefit.\n\nI\u0027m not convinced that moving from a common error to a non-common error is better for anyone, so I\u0027d like to understand the utility in this case.",
      "parentUuid": "f80c1ce9_ac2b7971",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aeef8d1_d0767053",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2023-02-13T10:39:32Z",
      "side": 1,
      "message": "There was a stress test where in users were issuing create bmc dump request using (redfish)openbmc-gui that is causing too many dump genertions happening in parallel and system going down.\n\nAs phosphor-dump-manager uses fork to invoke dreport(generates dump) it is not blocking the caller thread.\n\nPlanned to return \"AlreadyInProgress\" error to the caller (redfish) if a dump request is received while one is already in progress.",
      "parentUuid": "f493c54b_04618dc1",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ace7eae_2db05cfd",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2023-02-16T05:33:04Z",
      "side": 1,
      "message": "Based on the request looks like this is some thing similiar to  \"429 Too Many Requests\" https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429.\nAm also ok to use \"unavailable\" incase planing to use existing one.",
      "parentUuid": "0aeef8d1_d0767053",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45511fdf_4eef40f8",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-03-02T15:24:35Z",
      "side": 1,
      "message": "@Jayanth / @Devender - What is the net here?  Are we expecting a new patch set?",
      "parentUuid": "2ace7eae_2db05cfd",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45dc550d_029783f8",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.errors.yaml",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2023-03-02T16:15:11Z",
      "side": 1,
      "message": "Prefered one:  adding support for \"TooManyRequests\" in common error yaml.",
      "parentUuid": "45511fdf_4eef40f8",
      "revId": "4f048e09253b92142d67e1be2116c145f84e6044",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}