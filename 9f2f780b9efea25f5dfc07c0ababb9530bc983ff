{
  "comments": [
    {
      "key": {
        "uuid": "9adffdf1_b8e15d9c",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2018-02-19T10:52:28Z",
      "side": 1,
      "message": "It might help to put some \"user\" context for this feature:\n\n    - What are the security concerns with the current code update ?\n    - What is being proposed ? - such as signing the firmare image.\n    - What are the security implications ? e.g.\n             - Only firmware signed by IBM can be used ?\n             - Firmware downgrade support ?\n             - 3rd party firmware support ?\n             - How do we mitigate if the signing keys are compromised ?\n    - What is the proposed change in the MNFG process ?\n    - What is the proposed change in the build process ?\n    - What is the proposed change in the Dev process ?\n\t    - Test builds - Do they have to be signed too ?\n    - Does the REST API remain the same for the proposed secure firmware upgrade ?\n    - Can the signature verification be disabled ? Probably through another REST API ?\n    - Can the stored public key(s) in the system be modified through a REST API ? e.g. In order to boot 3rd part firmware.",
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd018cdc_ff099e00",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2019-10-16T11:37:27Z",
      "side": 1,
      "message": "typo: should be \"helps to validate\" I suppose",
      "range": {
        "startLine": 168,
        "startChar": 59,
        "endLine": 168,
        "endChar": 77
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9adffdf1_b24adeaa",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 176,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "Cant this be combined with\n\nOnce the firmware image files are successfully built then they are signed and packaged.",
      "range": {
        "startLine": 174,
        "startChar": 28,
        "endLine": 176,
        "endChar": 18
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_35cfb8b2",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 176,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2018-02-16T16:09:10Z",
      "side": 1,
      "message": "Might be useful for the reader to add SHA-256 as an example of digest.",
      "range": {
        "startLine": 176,
        "startChar": 45,
        "endLine": 176,
        "endChar": 63
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "137e7990_aeccc399",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 177,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2019-10-16T11:37:27Z",
      "side": 1,
      "message": "I\u0027d suggest to reference specific digital signature schemes/standards we want to support, that would make both signing and verification sections simpler and unambiguous.",
      "range": {
        "startLine": 177,
        "startChar": 33,
        "endLine": 177,
        "endChar": 71
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64f0d377_24934d85",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2019-10-16T11:37:27Z",
      "side": 1,
      "message": "There\u0027s no such thing as a public key of a hash function. Is \"public part of the signing key\" meant here? Or maybe there\u0027s just a comma missing and that was \"hash function, public key and type of the key\"?\n\nSignature scheme/algoritm reference should IMHO be another thing to add here, because those three alone don\u0027t define the scheme in some cases (e.g. RSA with PKCS formatting vs. RSA with PSS one).",
      "range": {
        "startLine": 179,
        "startChar": 49,
        "endLine": 179,
        "endChar": 73
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b955ed10_4932226a",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2019-12-20T16:18:27Z",
      "side": 1,
      "message": "I agree with Alexander: we don\u0027t need to explain how signing works.  Instead we should explain which scheme we are using.  How about:\n\nThe following bitbake class picks up the private signing key, signing algorithm (including digest algorithm such as SHA256), creates signatures over selected parts of the image, and adds them to the TAR file it creates:\nhttps://github.com/openbmc/openbmc/blob/master/meta-phosphor/classes/image_types_phosphor.bbclass\n\nThe following bitbake recipe adds the public signing key to the image, for use when validating a firmware image:\nhttps://github.com/openbmc/openbmc/blob/master/meta-phosphor/recipes-phosphor/flash/phosphor-image-signing.bb",
      "parentUuid": "64f0d377_24934d85",
      "range": {
        "startLine": 179,
        "startChar": 49,
        "endLine": 179,
        "endChar": 73
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9adffdf1_db5449cc",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2018-02-28T17:12:09Z",
      "side": 1,
      "message": "The phosphor-bmc-code-mgmt implements several software D-Bus interfaces. Why didn\u0027t we go the route of writing D-Bus interface(s) to describe image verification?",
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dee38aa_c07406ab",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2018-05-04T14:55:12Z",
      "side": 1,
      "message": "We can probably something about field mode.",
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_125aca83",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "Do we extract the manifest file or the image tar file ? \n\nIs extract the correct term here for manifest ?",
      "range": {
        "startLine": 192,
        "startChar": 3,
        "endLine": 192,
        "endChar": 10
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bf5ecab_6921730c",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2019-10-16T11:37:27Z",
      "side": 1,
      "message": "I\u0027d rather suggest to replace this with \"using the digital signature scheme that was used for signing\" or somesuch - as specific steps and even the use of specific hash functions may be dependent on the scheme.",
      "range": {
        "startLine": 193,
        "startChar": 8,
        "endLine": 194,
        "endChar": 16
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9adffdf1_325fce74",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "key",
      "range": {
        "startLine": 196,
        "startChar": 12,
        "endLine": 196,
        "endChar": 15
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_d253e26a",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "Where is this saved ? or the code logic takes care of it or need info where it is saved ?",
      "range": {
        "startLine": 197,
        "startChar": 23,
        "endLine": 197,
        "endChar": 28
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abb030d6_d32381f9",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2019-10-16T11:37:27Z",
      "side": 1,
      "message": "Do you mean here that the Manifest will be signed by a different key and will in turn contain another public key, from a keypair that was was used to sign the binaries themselves? If yes, I\u0027d suggest to make this more explicit in the description. If not, please clarify.",
      "range": {
        "startLine": 198,
        "startChar": 7,
        "endLine": 198,
        "endChar": 78
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de5ed1d4_46a61ed9",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1000443
      },
      "writtenOn": "2019-10-16T11:37:27Z",
      "side": 1,
      "message": "typo: should be \"continue\"",
      "range": {
        "startLine": 202,
        "startChar": 31,
        "endLine": 202,
        "endChar": 40
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9adffdf1_d5c3cc88",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2018-02-16T16:09:10Z",
      "side": 1,
      "message": "\"Witherspoon\" can be replaced with \u003cSystem\u003e to make the doc generic.",
      "range": {
        "startLine": 207,
        "startChar": 40,
        "endLine": 207,
        "endChar": 51
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_f2506660",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "signing? wont that be the correct word here",
      "range": {
        "startLine": 211,
        "startChar": 54,
        "endLine": 211,
        "endChar": 63
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_924d5ac7",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "base or production firmware",
      "range": {
        "startLine": 212,
        "startChar": 59,
        "endLine": 212,
        "endChar": 64
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_72655644",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "Who should republish this ?",
      "range": {
        "startLine": 222,
        "startChar": 21,
        "endLine": 222,
        "endChar": 25
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_f2694626",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 224,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "unsigned",
      "range": {
        "startLine": 224,
        "startChar": 13,
        "endLine": 224,
        "endChar": 22
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_9276ba05",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "This sentence I m not really able to catch it. reword may be ?",
      "range": {
        "startLine": 224,
        "startChar": 2,
        "endLine": 225,
        "endChar": 74
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_b273be14",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "downgrade",
      "range": {
        "startLine": 226,
        "startChar": 8,
        "endLine": 226,
        "endChar": 18
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_52605235",
        "filename": "xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 228,
      "author": {
        "id": 1000018
      },
      "writtenOn": "2018-02-16T11:52:57Z",
      "side": 1,
      "message": "known",
      "range": {
        "startLine": 228,
        "startChar": 15,
        "endLine": 228,
        "endChar": 20
      },
      "revId": "9f2f780b9efea25f5dfc07c0ababb9530bc983ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}