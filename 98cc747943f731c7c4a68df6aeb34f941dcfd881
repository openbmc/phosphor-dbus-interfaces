{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "65da3288_b1eab384",
        "filename": "yaml/xyz/openbmc_project/User/MFABypass.interface.yaml",
        "patchSetId": 22
      },
      "lineNbr": 6,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-02T18:20:06Z",
      "side": 1,
      "message": "Couldn\u0027t this just be a simple enum now?\n\nMFAIgnored\nMFAEnforced\n\nWould be the enumerations",
      "revId": "98cc747943f731c7c4a68df6aeb34f941dcfd881",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab41ad7c_861312c9",
        "filename": "yaml/xyz/openbmc_project/User/MFABypass.interface.yaml",
        "patchSetId": 22
      },
      "lineNbr": 6,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-09-02T18:29:50Z",
      "side": 1,
      "message": "I think its good to re-use the same enumeration which is also satisfies redfish enumerations",
      "parentUuid": "65da3288_b1eab384",
      "revId": "98cc747943f731c7c4a68df6aeb34f941dcfd881",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4188ae6_f8ac6e0f",
        "filename": "yaml/xyz/openbmc_project/User/MFABypass.interface.yaml",
        "patchSetId": 22
      },
      "lineNbr": 6,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-02T21:26:45Z",
      "side": 1,
      "message": "My issue with this interface is you\u0027re now duplicating information.\n\nWhat happens if the system mode is changed from msft authentication to google?  Do all users that had msft authentication bypass automatically get added a google authenticator bypass?\n\nWhat if we add a new protocol type?  Do users get ported forward and bypass the new type?\n\nThere are a lot of questions that need answered when doing it this way (that aren\u0027t currently answered in the interface description).\n\nHaving a simple \"auth is bypassed\" or \"auth isn\u0027t bypassed\" mode meets the same requirements for redfish.  I\u0027d also note that if this MUST match Redfish\n\nMFAIgnored would be equivalent to the Redfish \"All\" setting.\nMFAEnforced would be equivalent to whatever modes are enabled.\n\n\nI understand that Redfish made this more complex, because they probably have to support lots of auth mechanisms in parallel.  In openbmc, we don\u0027t have to support them in parallel, or if we do, lets treat that as a separate track of work.",
      "parentUuid": "ab41ad7c_861312c9",
      "revId": "98cc747943f731c7c4a68df6aeb34f941dcfd881",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1facc2c_9c28d0d6",
        "filename": "yaml/xyz/openbmc_project/User/MFABypass.interface.yaml",
        "patchSetId": 22
      },
      "lineNbr": 6,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-09-03T04:43:23Z",
      "side": 1,
      "message": "I am not sure if the implementation is that simple of we map Every thing to MFAIgnored and MFAEnforced. Each MF option may have different implementation for by pass. It may be just deleting the .google_authenticator file for google case and  different for Microsoft etc. It all depends on what does each pam module expects for MFA. The problem is not just with parallel support. Even if we don\u0027t have multiple MFA active in parallel, there is a possibility of each organisation enable different kind of MFA. Implementation of pam module athentication and bypass may differ drastically. So in my opinion it is better to follow redfish schema and implementation can report error back to the client if it choses unsupported MFA options.",
      "parentUuid": "a4188ae6_f8ac6e0f",
      "revId": "98cc747943f731c7c4a68df6aeb34f941dcfd881",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe79fd1_619332d3",
        "filename": "yaml/xyz/openbmc_project/User/MFABypass.interface.yaml",
        "patchSetId": 22
      },
      "lineNbr": 6,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-04T16:11:21Z",
      "side": 1,
      "message": "Everything you\u0027re describing is an internal detail to the service that implements this.  My point is that as much as we can, we should avoid allowing internal details into the dbus API.\n\nFWIW, if you really want to cover the whole range of behavior in the description about how each of those works, feel free to update this patchset, but it doesn\u0027t seem worth it to me.  Just support one OTP at a time, make the bypass use its own enum that\u0027s bypass/not bypass, and make the rest of the behavior handled in the interface.",
      "parentUuid": "c1facc2c_9c28d0d6",
      "revId": "98cc747943f731c7c4a68df6aeb34f941dcfd881",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}