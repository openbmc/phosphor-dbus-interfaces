{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1e8fe05d_6a50d8ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-02T12:47:06Z",
      "side": 1,
      "message": "Which repositories are you expecting to implement this interface?  I\u0027d like to get one of the maintainers of those repos to weigh in since this is outside my domain expertise.",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03e2d64a_d804e48f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-08-03T02:26:17Z",
      "side": 1,
      "message": "This is implemented in https://gerrit.openbmc.org/c/openbmc/obmc-ikvm/+/56007\n\nIt looks like eajames@linux.ibm.com is not in gerrit, and Jae have two emails in gerrit now...",
      "parentUuid": "1e8fe05d_6a50d8ea",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "209f47af_98ddc2b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-29T21:46:19Z",
      "side": 1,
      "message": "Zev / Lei / Xie, is there any additional discussion here?  What do we want to do with this commit.",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2d23142_7e699be6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-08-30T03:51:18Z",
      "side": 1,
      "message": "I would like to merge this if we get more +1s.\n\nThe implementation is in review at https://gerrit.openbmc.org/c/openbmc/obmc-ikvm/+/56006/1 and @XieNing will send feedback to the comments.",
      "parentUuid": "209f47af_98ddc2b4",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e7cd46c_c4404938",
        "filename": "gen/xyz/openbmc_project/KVM/meson.build",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-03T19:25:02Z",
      "side": 1,
      "message": "\"Screenshot\" is in practice one word, so I\u0027d suggest not capitalizing the second \"s\" (here and elsewhere).",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "795f3ad8_4f612357",
        "filename": "gen/xyz/openbmc_project/KVM/meson.build",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-03T21:39:07Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "9e7cd46c_c4404938",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da9226b1_cab621d1",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-02T12:47:06Z",
      "side": 1,
      "message": "Please move this under Control/KVM.  I\u0027d prefer not to make new top-level directories.",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad22bbd4_da4bb3c2",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-03T21:39:07Z",
      "side": 1,
      "message": "Hopefully the author noticed this is still unresolved...",
      "parentUuid": "da9226b1_cab621d1",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae960b8_14d00328",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-03T19:25:02Z",
      "side": 1,
      "message": "I\u0027d suggest \"Capture\" as the name for this, as a slightly clearer verb describing exactly what it does.",
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2100407c_4546589d",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-03T19:25:02Z",
      "side": 1,
      "message": "As I commented on the obmc-ikvm patch, I think it would be cleaner to return a file handle for a tempfile containing the screenshot instead of a path.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54a8f9fa_f9e2fb7e",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-03T21:39:07Z",
      "side": 1,
      "message": "How does the screenshot get deleted?  Or is it already deleted but just an open fp passed around?\n\nWhatever we\u0027re doing, please be sure to document this behavior here in the interface.",
      "parentUuid": "2100407c_4546589d",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "433c2fc8_07caf9a0",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-03T22:01:45Z",
      "side": 1,
      "message": "On the other patch I suggested using O_TMPFILE; if the implementation uses that it would get automatically released once the last open file descriptor referring to it is closed (not so much \"already deleted\" as \"never had a name to start with\").",
      "parentUuid": "54a8f9fa_f9e2fb7e",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb661da7_569726bf",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-08-04T01:56:48Z",
      "side": 1,
      "message": "In practice, we are using a shell script to call the service\u0027s method, and copy the screenshot file to somewhere else as needed.\nBy returning a fp, it could be difficult in such usage.\n\nThat\u0027s why it returns a file name path.\nAnd in implementation (in obmc-ikvm), it\u0027s using a same file path, so that if user is doing a lot of screenshots, it will create only one file instead of creating too many files.",
      "parentUuid": "433c2fc8_07caf9a0",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7277e3d_57f561de",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-04T02:15:51Z",
      "side": 1,
      "message": "I see...yeah, I suppose returning a file descriptor would require a somewhat more sophisticated client program.\n\nIn that case though, how about instead we have the path passed as a parameter from the client instead of the server determining it and returning it?  (i.e. client says \"please write a screenshot to /tmp/foobar.jpg\", server then opens that path and writes it.)  That way the question of whether we\u0027re overwriting an old screenshot or creating a new one becomes the client\u0027s decision and the server doesn\u0027t have to worry about it.",
      "parentUuid": "eb661da7_569726bf",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94ec2006_f8fa436b",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-04T02:19:11Z",
      "side": 1,
      "message": "(And if we go that route I\u0027d also suggest renaming the method to something like `CaptureToPath`, in case we later want to add a fancier version that does the file-descriptor business or something.)",
      "parentUuid": "a7277e3d_57f561de",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "894c5522_9136d480",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-08-04T03:48:08Z",
      "side": 1,
      "message": "\u003e In that case though, how about instead we have the path passed as a parameter from the client instead of the server determining it and returning it? \n\nThis is our internal\u0027s first implementation, but we realize that it\u0027s a security issue, what if the user says capture to /etc/xxx or /usr/bin/xxx?\nThat\u0027s why we change it to let the service to capture and save to a known path, and return to the client.",
      "parentUuid": "94ec2006_f8fa436b",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "312b4ddc_6af92528",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000733
      },
      "writtenOn": "2022-08-04T04:06:49Z",
      "side": 1,
      "message": "In a hypothetical scenario where OpenBMC services were running under different UIDs, yes, that could be a problem, but in that case wouldn\u0027t the client be unable to access the service\u0027s dbus interface anyway?  Currently as far as I know all OpenBMC dbus communication is between processes that are all running as root, so a client could just as easily directly overwrite a sensitive file by itself instead of going through obmc-ikvm.\n\nIf we\u0027re considering usage that would have separate UIDs sharing the system bus, I think there would be a lot of other existing things that would need to be restructured to make that not trivially exploitable (e.g. xyz.openbmc_project.User.Manager, for one simple example).",
      "parentUuid": "894c5522_9136d480",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "724e57c0_b2128d80",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-04T21:03:15Z",
      "side": 1,
      "message": "Generally we let the service control where it writes to, and not be directed by outside.  This also ensures a lot less issues with garbage collection.\n\nIdeally this object would actually be more like a ScreenshotManager, which returns you a dbus-path to the freshly created Screenshot object.  xyz.openbmc_project.Common.FilePath and xyz.openbmc-project.Object.Delete would be implemented on the returned dbus object.",
      "parentUuid": "312b4ddc_6af92528",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bc81fc4_60e4fa8f",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-08-05T02:49:58Z",
      "side": 1,
      "message": "\u003e Ideally this object would actually be more like a ScreenshotManager, which returns you a dbus-path to the freshly created Screenshot object.  xyz.openbmc_project.Common.FilePath and xyz.openbmc-project.Object.Delete would be implemented on the returned dbus object.\n\nRight, ideally it should. But this adds unnecessary complication to obmc-ikvm to manage the DBus objects.\nThis repo obmc-ikvm was intented to serve as KVM vncserver and there were no DBus interfaces at all.\nWe just want to add a simple DBus method to do the screenshot, and return a file that the client could access.\n\nIt is possible to implement a standalone service to manage the screen shot files and let it implement the interfaces. However, the process that does the actual screenshot has to be obmc-ikvm in OpenBMC scenario, that provides the most efficient behavior. We tried to use vncsnapshot as the screenshot client, it has various issues that we could not fix.\n\nEventually, we reach the implementation of current design, that let obmc-ikvm provide a simple method and return a filename.",
      "parentUuid": "724e57c0_b2128d80",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1c719ea_b948b374",
        "filename": "yaml/xyz/openbmc_project/KVM/ScreenShot.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-05T21:27:20Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "1bc81fc4_60e4fa8f",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 44
      },
      "revId": "eb9ff1506d6ab8b372d8493c29744d3a0c12e1b9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}