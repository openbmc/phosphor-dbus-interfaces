{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ea5745b8_6f9a8689",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-12T00:09:09Z",
      "side": 1,
      "message": "Hi Patrick, I\u0027ve uploaded a newer version of patchset, where I addressed all your comments. Could you please take a look? I\u0027ve verified it by testing on a dbus daemon using the dbus interfaces defined here, especially the associations.",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32648a8c_0a325638",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-18T16:57:28Z",
      "side": 1,
      "message": "@patrick@stwcx.xyz Hi Patrick, could you help review this updated version? Thanks!",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f274918_99b956b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T18:54:07Z",
      "side": 1,
      "message": "Could you help take a look and give feedback on the new proposal of where should all integrity measurement interfaces go? Thanks!",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65496125_4f35c78b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T21:21:35Z",
      "side": 1,
      "message": "Proposing creating a directory Attestation in DBus and put all integrity/identity/measurement related interfaces under it. See details in newly added comment.",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dca74c6_abb6643d",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-18T19:07:13Z",
      "side": 1,
      "message": "You\u0027ve called this an Inventory.Decorator, but it isn\u0027t obvious to me which inventory object(s) you expect this to be a decorator for.  You\u0027ve listed associations, but it kind of seems like his would be on one of the two items you\u0027ve listed potential associations to?",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf760b2d_cc47d493",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T18:54:07Z",
      "side": 1,
      "message": "Initially,I thought \"Integrity\" info seems to be a decorator of an Item. However, it is not like the other decorator info that are static info collected from hardware items.\n\nI did a exhaustive search under /xyz/openbmc_project/ and found no good place for these integrity attestation related interfaces. For example:\n\ntop candidates considered:\nState : it\u0027s for power state management of BMC, HOST, CHASSIS for phosphor-state-manager\nInventory: it is for static inventory information of items\n\ndbus management:\nAssociation \nObject\nTime\nUser\nCommon\nCollection\n\n\nsubsystem management:\nMemory\nNetwork \nMemory\nLed\nChassis \nChannel\nBIOSConfig\nSensor\nSmbios\nCerts\nSoftware\nHardwareIsolation: information of isolated hardware\n\nspecific protocol:\nPLDM\nMCTP\nIpmi \n\nOther:\nPFR: platform firmware resiliency\nCondition: Host firmware condition\nTelemetry\nDump\n\n\nGiven Integrity measurement is a piece of important security information that is orthogonal to other categories defined under /xyz/openbmc_project/. Would it make sense to create a \"Integrity\" directory under /xyz/openbmc_project/ to provide integrity measurement related interfaces and put ComponentIntegrity, IdentityAuthentication, MeasurementSet interface under it. We will have something like below:\n\nyaml/xyz/openbmc_project/Integrity/ComponentIntegrity.interface.yaml\nyaml/xyz/openbmc_project/Integrity/IdentityAuthentication.interface.yaml\nyaml/xyz/openbmc_project/Integrity/MeasurementSet.interface.yaml\n\nWhat do you think?",
      "parentUuid": "3dca74c6_abb6643d",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5184b054_96d7c0d7",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T21:21:35Z",
      "side": 1,
      "message": "I am thinking about a better name to group these integrity/identity/measurement related interfaces, like Attestation. We can put those interfaces related to attestation management here. For example, attest the component integrity, component identity, or firmware/hardware configuration from secure measurement. \n\nyaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml\nyaml/xyz/openbmc_project/Attestation/IdentityAuthentication.interface.yaml\nyaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml\n\nIn the future, if we have other security protocols that does attestation and need to expose attestation status/results over dbus, they can use existing interfaces or add new interfaces under Attestation/.",
      "parentUuid": "cf760b2d_cc47d493",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6b68790_9f23037b",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-18T19:07:13Z",
      "side": 1,
      "message": "I suspect this should be readonly also?  Do you really want another daemon to be able to write this property?\n\nThere might be some confusion between:\n  * normal\n  * readonly\n  * const\n  \nconst won\u0027t send signals because the implementation is not allowed to change the value once the object is constructed.  readonly means that a dbus-client cannot write to the value.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 18
      },
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46e27bb2_44c8bc8b",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T18:54:07Z",
      "side": 1,
      "message": "Make sense, Will do. No client should be allowed to update it.",
      "parentUuid": "d6b68790_9f23037b",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 32,
        "endChar": 18
      },
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ab8f8e7_685bb2c7",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-18T19:07:13Z",
      "side": 1,
      "message": "Please also add these to the other end for documentation.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 60,
        "endChar": 46
      },
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c24de24_89497b6b",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/ComponentIntegrity.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T18:54:07Z",
      "side": 1,
      "message": "Will do",
      "parentUuid": "2ab8f8e7_685bb2c7",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 60,
        "endChar": 46
      },
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e9a4b3c_8762f4cd",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-18T19:07:13Z",
      "side": 1,
      "message": "This isn\u0027t an Inventory.Decorator.  Inventory shouldn\u0027t have state changes like this.  It isn\u0027t obvious to me where you expect this to live in dbus.",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cceb9279_a1cffbd6",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T18:54:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5e9a4b3c_8762f4cd",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "455ccf3f_5ae75d40",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-18T19:07:13Z",
      "side": 1,
      "message": "Do you want 18 and 27 to be the same?\n\nPlease document the reverse link in the Certs.Certificate.",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b74e6e51_909deae8",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T18:54:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "455ccf3f_5ae75d40",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5660c4be_57fab3a3",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-18T19:07:13Z",
      "side": 1,
      "message": "Do you need \u0027Unknown\u0027?\n\nThe default for ResponderVerificationStatus is going to end up being Failed, unless you set a default on line 8.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 36,
        "endChar": 24
      },
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b83fa40e_b0b63a6c",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/IdentityAuthentication.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T18:54:07Z",
      "side": 1,
      "message": "Make sense, let me add an unknown status here, which will give more info about the attestation status in D-Bus.\n\nTo be noted, this is security authentication, an \"Unknown\" status is almost equal to \"FAILED\" to the authenticator as the authenticator can not trust it. The Redfish spec only have Success and Failed defined, so both the \"Unknow\" and \"Failed\" will be merged and reported as \"Failed\" to the authenticator.",
      "parentUuid": "5660c4be_57fab3a3",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 36,
        "endChar": 24
      },
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "debad9ba_64ca7fff",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/MeasurementSet.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-18T19:07:13Z",
      "side": 1,
      "message": "I don\u0027t think this belongs in Inventory.  Inventory should be for static data.",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff48dae7_21bac1bb",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/MeasurementSet.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-19T18:54:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "debad9ba_64ca7fff",
      "revId": "7afa0cf7cc6712bc6286fb8b853ae272b3cef022",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}