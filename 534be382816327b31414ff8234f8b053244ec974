{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e8c63541_35b61a90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-02-14T15:02:45Z",
      "side": 1,
      "message": "Hi Reviewers, Any comments/votes ?",
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6567e8dd_2710fecf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-16T22:45:58Z",
      "side": 1,
      "message": "I\u0027m expecting phosphor-network OWNERS to be the primary reviewers on this.",
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95503da7_936aca46",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-16T22:47:59Z",
      "side": 1,
      "message": "Is the intention that this property is read-only?  We should probably add appropriate flags in that case.",
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3067e51_4113c7eb",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-02-17T12:07:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95503da7_936aca46",
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0a8231c_e5f7118f",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2022-02-07T05:03:56Z",
      "side": 1,
      "message": "Since there is another property introduced to show the static ntp servers, should this property show only the dhcp sent ntp servers?",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31180883_463c5d7a",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-02-07T07:01:56Z",
      "side": 1,
      "message": "This is intended to list all the active ntp servers (static + dhcp). Similar to the Nameservers.",
      "parentUuid": "e0a8231c_e5f7118f",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "678e6961_5b68aec1",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-02-17T12:07:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31180883_463c5d7a",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6c386d6_6fe95fb5",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-16T22:47:59Z",
      "side": 1,
      "message": "Under what conditions do we get NotAllowed?  I suspect read-only is what we want to do here and then we don\u0027t need any explicit errors in the YAML.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 56
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c7b598e_95cb6767",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-02-17T12:07:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b6c386d6_6fe95fb5",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 56
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "364e896b_bc5874aa",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-16T22:47:59Z",
      "side": 1,
      "message": "What kind of argument detection are we going to have here?",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb09964b_1bac0c24",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-02-17T12:07:59Z",
      "side": 1,
      "message": "This property should be an array of string. The string should be validated for the IP address format. If they are not IP addresses, we will be sending InvalidArgument",
      "parentUuid": "364e896b_bc5874aa",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ad1e4c4_e1e235ef",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-17T14:10:26Z",
      "side": 1,
      "message": "What is \"IP address format\"?  IPv4, IPv6, hostname, all of the above?  Hostnames are pretty typical, so I\u0027m not sure how you\u0027re going to validate except maybe screening against specific characters like underscores?\n\nPlease document the expectations here.",
      "parentUuid": "fb09964b_1bac0c24",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6e3687_fb20ac6d",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-02-18T04:19:10Z",
      "side": 1,
      "message": "The validation would be similar to what we have today at phosphor-networkd for the IP addresses - isValidIP API. This internally does inet_pton call. This should validate all kinds of IP addresses. \nhttps://man7.org/linux/man-pages/man3/inet_pton.3.html",
      "parentUuid": "4ad1e4c4_e1e235ef",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "128dcbb2_ebac95a1",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2022-03-08T10:16:55Z",
      "side": 1,
      "message": "NTP servers can and usually are hostnames in many instances. We can\u0027t really assume all that much about their format.",
      "parentUuid": "4d6e3687_fb20ac6d",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e0efa47_8fce2224",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-03-08T11:04:25Z",
      "side": 1,
      "message": "Yeah. But i think still the validation can be done on a resolved hostname. I tried to follow the similar validations like the StaticNameServers in this interface",
      "parentUuid": "128dcbb2_ebac95a1",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d1c4e5c_6b48be59",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-09T20:06:41Z",
      "side": 1,
      "message": "\u003e But i think still the validation can be done on a resolved hostname. I tried to follow the similar validations like the StaticNameServers in this interface.\n\nWhat do you mean by this?  I could interpret it in two ways:\n\n1. You are expecting the hostname provided to currently resolve.\n2. You are expecting the hostname could be resolved and to do this you\u0027re checking against a set of well-known TLDs.\n3. You\u0027re looking for a specfic character set of allowable characters in the field. \n\nI don\u0027t think any of this approaches is a good idea.\n\nApproach 1: When a machine arrives in a DC it can be placed in an isolated subnet in which no domain names resolve, until configuration is done by some automated management software.  Requiring names resolve prevents me from successfully configuring my system before isolating it.\n\nApproach 2: This assumes that only globally registered TLDs are acceptable for use as hostnames, but many networks use non-standard TLDs purposefully to avoid collisions (or public DNS registration) and to shorten hostnames for internal usage.  mDNS uses `.local` by default and I have my home network configured to `.lan`.\n\nApproach 3: Typically humans interact with UTF-8.  I could enter \"🚀.com\" into my brower and while this isn\u0027t valid directly there is a set of RFCs around \"punycode\" that will automatically translate this into \"xn--158h.com\".  Even though underscores are not acceptable characters for hostnames, there is a whole set of underscore-prefixed DNS queries that are standard practice for aliasing and non-standard data.  It is perfectly acceptable to resolve \"_aaa0.ntp.facebook.com\" by DNS where \"_aaa0\" is some internal code for a data center ID and the query returns all the NTP servers in that data center.  (See https://en.wikipedia.org/wiki/Hostname)",
      "parentUuid": "6e0efa47_8fce2224",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83bda585_73e6db9f",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-03-28T07:33:45Z",
      "side": 1,
      "message": "As i mentioned, i just had plans to put the same validations which are already there for the StaticNameServers. If you think this can cause confusions, please suggest if i need to remove this error type",
      "parentUuid": "3d1c4e5c_6b48be59",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acf64f08_ac8fe48d",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-04-07T09:44:45Z",
      "side": 1,
      "message": "The validations applied to the StaticNameservers are isValidIP for the IPv4 -or- IPv6. The same has been done for the StaticNTPServers as well (its up for review at phosphor-networkd repo) so expecting a IP address string for this property",
      "parentUuid": "83bda585_73e6db9f",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "317e000d_585a6d7d",
        "filename": "yaml/xyz/openbmc_project/Network/EthernetInterface.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-07T18:31:39Z",
      "side": 1,
      "message": "Unlike Nameserver(DNS server), NTP server can be a hostname, and it\u0027s common to use hostnames like pool.ntp.org. Restricting the value to be an IP address is not a good idea.\n\nI believe it\u0027s okay to remove the check just like NTPServer. systemd-timesyncd will ignore these invalid values",
      "parentUuid": "acf64f08_ac8fe48d",
      "range": {
        "startLine": 65,
        "startChar": 11,
        "endLine": 65,
        "endChar": 59
      },
      "revId": "534be382816327b31414ff8234f8b053244ec974",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}