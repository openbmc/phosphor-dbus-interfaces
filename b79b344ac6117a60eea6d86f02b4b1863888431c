{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6d98ca49_06841e8e",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-19T13:02:58Z",
      "side": 1,
      "message": "How is this different from https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Decorator/LocationCode.interface.yaml? Can both co-exist?",
      "range": {
        "startLine": 2,
        "startChar": 14,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a17b41c_469314c5",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-19T13:03:13Z",
      "side": 1,
      "message": "There\u0027s also https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Decorator/Slot.interface.yaml",
      "parentUuid": "6d98ca49_06841e8e",
      "range": {
        "startLine": 2,
        "startChar": 14,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da208b3f_8997510d",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-08-19T13:57:23Z",
      "side": 1,
      "message": "IBM has a very specific use for location code already, and it\u0027s different than this.\n\nIf we have a freestanding chassis that is cabled to another chassis, does it have a slot or position?  It feels more like a \u0027position\u0027, though the existing slot interface would still work and if this is deemed too similar that\u0027s fine.",
      "parentUuid": "5a17b41c_469314c5",
      "range": {
        "startLine": 2,
        "startChar": 14,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f8b1cf8_e1bf2c91",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-04T09:45:47Z",
      "side": 1,
      "message": "If we are going to make this interface, can we add to the description how it is different from the `Decorator.Slot` interface.\n\nYou have your use-case in mind but others in the future will have to make a decision which one of these to use, and it should be clear from the `description` field of the interfaces.\n\nFor `LocationCode`, i understand that\u0027s different since it\u0027s a string and does not allow for straightforward ordering.\n\n\u003e If we have a freestanding chassis that is cabled to another chassis, does it have a slot or position?\n\nIn this example, which `Position` do you assign to each one? Is there a `main` chassis which manages the other one? Does it then get Position `0`.\n\n\u003e though the existing slot interface would still work and if this is deemed too similar that\u0027s fine.\n\nI would prefer if you could use the existing interface, if at all possible ðŸ˜Š",
      "parentUuid": "da208b3f_8997510d",
      "range": {
        "startLine": 2,
        "startChar": 14,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d87dace_02346801",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-09-04T22:15:12Z",
      "side": 1,
      "message": "\u003e If we are going to make this interface, can we add to the description how it is different from the Decorator.Slot interface.\n\nWill do.  When I created the Slot interface a few years ago, it was to distinguish PCIe slots.\n\n\u003e In this example, which Position do you assign to each one? Is there a main chassis which manages the other one? Does it then get Position 0.\n\n\nI already have:\n\"when it\u0027s necessary to distinguish it from other inventory items of the same type.\"\n\nI would say it\u0027s implied that a super chassis is not the same type as a sub chassis, though I will try to think of a way to enhance what I have.\n\n\u003e I would prefer if you could use the existing interface, if at all possible\n\nIt\u0027s one of those things, do we want to be stuck with a term just because it was first.  I go back and forth.",
      "parentUuid": "5f8b1cf8_e1bf2c91",
      "range": {
        "startLine": 2,
        "startChar": 14,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44677b4f_d592518c",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-09-04T22:41:29Z",
      "side": 1,
      "message": "\u003e \"when it\u0027s necessary to distinguish it from other inventory items of the same type.\"\n\nThe Slot interface has description\n`Implement to provide a slot number for an inventory item.`\n\nLet\u0027s say i have an inventory item,\nhow would i choose one or both of those interfaces to put on it?\n\nI\u0027m all for having this interface if it\u0027s meaningfully different and we know when to use which one.\n\nSomething else i want to understand here, can we have multiple inventory items with same inventory dbus interface and  same `SlotNumber`?\n\nAnd can we have multiple inventory items present with same inventory dbus interface and same `Position`?\n\n\u003e If we have a freestanding chassis that is cabled to another chassis, does it have a slot or position? It feels more like a \u0027position\u0027, though the existing slot interface would still work and if this is deemed too similar that\u0027s fine.\n\nI believe i have similar use case for supporting multi-host systems.\n\nWhat do you think of this description\n\n```\nHolds the position of an inventory item\nwhen there are multiple instances of an inventory item with the same \nxyz.openbmc_project.Inventory.Decorator.Slot::SlotNumber\nsuch as in multi-host, blade server, or multi-chassis systems.\n\nIn such cases,\nthe xyz.openbmc_project.Inventory.Decorator::Position\nproperty will be same as \n`xyz.openbmc_project.Inventory.Decorator.ManagedHost::HostIndex\nproperty, if managed host interface is present.\n\nIn case of having only one instance of an inventory item with a given \nxyz.openbmc_project.Inventory.Decorator::Position, \n\nxyz.openbmc_project.Inventory.Decorator.Position\ndoes not imply existence of \nxyz.openbmc_project.Inventory.Decorator.Slot\n```\n\nThat would allow me to have some kind of workaround for multi-host hardware inventories in redfish while the associations are still being worked on.\n\nSorry for the text dump ðŸ˜Š",
      "parentUuid": "9d87dace_02346801",
      "range": {
        "startLine": 2,
        "startChar": 14,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3bb2967_8ccf4352",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-08-19T13:02:58Z",
      "side": 1,
      "message": "Is this 0-based? Or implementation defined?",
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba06c924_d385d416",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-08-19T13:57:23Z",
      "side": 1,
      "message": "I would say implementation defined.  let me know if you think that needs  to go into the YAML.",
      "parentUuid": "a3bb2967_8ccf4352",
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "008e3633_5154ea01",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-08-22T06:14:29Z",
      "side": 1,
      "message": "To deal with the situation where position could not be determined due to some unknown reason, is it fine if we move away from type \"size\" to accommodate value like \"-1\" denoting that the value is invalid?",
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8f6abf3_66afc999",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2025-08-29T11:04:28Z",
      "side": 1,
      "message": "yes, we need a value like \"-1\" denoting that value is not determined.",
      "parentUuid": "008e3633_5154ea01",
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fe456af_22fdc887",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-09-03T19:47:48Z",
      "side": 1,
      "message": "No, we don\u0027t necessarily need -1.  Use `intmax`.  You can even set that as the `default: intmax` in the YAML if you prefer.",
      "parentUuid": "f8f6abf3_66afc999",
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "585db22c_593589b7",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-09-03T22:08:01Z",
      "side": 1,
      "message": "Good idea, I\u0027ll add that as the default.",
      "parentUuid": "8fe456af_22fdc887",
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03f0ab59_ff27458a",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Position.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 6,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2025-09-03T22:11:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "585db22c_593589b7",
      "revId": "b79b344ac6117a60eea6d86f02b4b1863888431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}