{
  "comments": [
    {
      "key": {
        "uuid": "21be7467_c5912a08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:55:45Z",
      "side": 1,
      "message": "I guess there was a comment here about subsystems being an enumeration but there are too many to count.\n\nWhat does \"save decoding effort at the far end\" mean?\n\nIf we\u0027re going to have a free-form string, we generally leave remarks that it should not be used for any programmatic interpretation.  Is that acceptable in this case?  What we don\u0027t want is arbitrary code trying to parse these strings with constants spread across the code-base.  If you want constants, that is what enumerations are for.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 58
      },
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b1077ae_94638fe7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-07-28T19:46:22Z",
      "side": 1,
      "message": "There is already a map of the end values we want to use here in the PEL daemon: https://github.com/openbmc/phosphor-logging/blob/master/extensions/openpower-pels/pel_values.cpp#L31\n\nSo if we were to use an enum, we\u0027d basically have to duplicate that in bmcweb, or maybe use a 70 case switch statement to convert the enum back to the string, just to get back to the same result.",
      "parentUuid": "21be7467_c5912a08",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 58
      },
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3b93bb4_6f45837e",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 4,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:53:57Z",
      "side": 1,
      "message": "Property name should be \u0027Subsystem\u0027 to follow conventions.",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fe376c0_be013980",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 4,
      "author": {
        "id": 1001063
      },
      "writtenOn": "2021-07-28T19:51:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3b93bb4_6f45837e",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37e27423_83277ec9",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T02:53:57Z",
      "side": 1,
      "message": "Should we create an enumeration of these?  We generally do not prefer having free-form strings.",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5574a8d7_207fc383",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-07-28T19:32:01Z",
      "side": 1,
      "message": "+1 for having enumerations. That way it\u0027s defined which values are supported.",
      "parentUuid": "37e27423_83277ec9",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc206cd9_2d7a48d8",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1001063
      },
      "writtenOn": "2021-07-28T19:51:36Z",
      "side": 1,
      "message": "We wanted to set enumerations to start with, but we have 70+ values in the PEL spec and we need to have translations both in pel code(extensions) and the redfish API. So we wanted to avoid the encode-decode effort. Also, we will end up maintaining this enum if it gets more value in the future.",
      "parentUuid": "5574a8d7_207fc383",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01372b3f_d57055f4",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-07-28T20:26:38Z",
      "side": 1,
      "message": "\u003e but we have 70+ values in the PEL spec and we need to have translations both in pel code(extensions) and the redfish API.\n\nCan we get more details on what the intended use of these strings is?  It isn\u0027t coming out to me.\n\nI see Matt pointed to a big table in the PEL code.  This table could instead have been a map from hardware enum to sdbusplus enum.  There is code in sdbusplus to convert from C-enum to string and back again, so this table isn\u0027t really necessary.\n\nWhat do you mean by \"translations...in...the redfish API\"?  Is the Redfish API the only user of this string?  In general, don\u0027t you need some kind of message registry for strings in Redfish?  sdbusplus-enums can be converted to a message registry string, in my opinion, but I don\u0027t know how you intend to keep a message registry with arbitrary strings.\n\nBy \"translations\" did you simply mean between C-enum and strings or did you mean human language translation?",
      "parentUuid": "dc206cd9_2d7a48d8",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36ea8cf7_3a719ec8",
        "filename": "yaml/org/open_power/Logging/PEL/Entry.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 5,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-07-28T20:42:04Z",
      "side": 1,
      "message": "We may get to a \u0027real\u0027 message registry (currently the OpenBMC dbus puts together it\u0027s log entry response from dbus properties and doesn\u0027t use a JSON registry) someday, but if we do, it would just use place holders to fill in this value from the property anyway, like \"error in subsystem %1\u0027.\n\nI guess if we had to, we could live with bmcweb chopping off the \"org.open_power.Logging.PEL.Entry.Subsystem.\" from the full enum name and use that.  That would mean the customer would see ThisSubystem instead of \"This Subsystem\" but I suppose that doesn\u0027t matter that much.\n\nIt\u0027s just more maintenance for us, because every field of that table in the PEL code is still needed as is today, so we\u0027ll have to add these enums to that, and to here.",
      "parentUuid": "01372b3f_d57055f4",
      "revId": "4d757700858724679f790b96e9b502021864345a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}