{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8987c7be_1309b677",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-07-18T19:32:16Z",
      "side": 1,
      "message": "Why is it called \u0027MainLogRef\u0027?  That seems like an unusual name.",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e9855c6_d347f6e8",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-07-19T04:31:58Z",
      "side": 1,
      "message": "How about MainLogId? Updated the description to say that \"Main\" is in contrast to \"Supplemental\".",
      "parentUuid": "8987c7be_1309b677",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d0b0ff8_68338b45",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-02T20:59:32Z",
      "side": 1,
      "message": "Can it be PrimaryID and SecondaryID?  Is \"Main\" and \"Supplemental\" coming from some standard elsewhere we are trying to follow?  Will Secondary/Supplemental IDs be a list?",
      "parentUuid": "6e9855c6_d347f6e8",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a9befc2_37ee9230",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-08-02T21:47:00Z",
      "side": 1,
      "message": "\"Primary\"/\"Secondary\" are fine with me; we are not bound to a particular standard. Are you okay with \"PrimaryLogId\" and \"SecondaryLogId\" to be a little more descriptive of what the Id is for?\n\nYes I\u0027m thinking Secondary IDs would be a list. Maybe a list of pairs of type and ID. (I think we should wait to add it in a future separate code review because we don\u0027t have the details of the use case all figured out yet.)",
      "parentUuid": "7d0b0ff8_68338b45",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a75ed0bf_8373ae83",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-03T21:46:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9a9befc2_37ee9230",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b59354a_8f318145",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-07-18T19:32:16Z",
      "side": 1,
      "message": "Are you intending that these are only used by humans or is there suppose to be some utility of it internal to the BMC?  General for arbitrary strings we include some verbiage about it not being programmatically interrogated.",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "546522f5_90a3bb69",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-07-19T04:31:58Z",
      "side": 1,
      "message": "Please see my previous comment at https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/53018/comments/82cb3b7e_d15d717f about the bmcweb use case I have in mind.",
      "parentUuid": "6b59354a_8f318145",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "504eb5ba_a7b952d5",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-08-02T21:47:00Z",
      "side": 1,
      "message": "The link is meant to point to the comment thread at Patchset 4, line 9 of yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml:\n\n\"I changed directions a bit in patchset 6 (please see the new MainLogRef description). What I\u0027m now trying to do for the two initial types of fault data is to supply the reference as the log ID string needed by the dbus client (bmcweb) to construct the redfish URI to the log. The ID isn\u0027t always in the dbus object path, and I\u0027m trying to add it as a property here to avoid extra dbus calls to look up the ID.\"",
      "parentUuid": "546522f5_90a3bb69",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6dbb08e1_87169b8e",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-08-03T00:09:29Z",
      "side": 1,
      "message": "Updated description as we discussed over discord.",
      "parentUuid": "504eb5ba_a7b952d5",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d33a5260_585d9f82",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-07-18T19:32:16Z",
      "side": 1,
      "message": "Can we re-render this to not be a table and have huge line wrapping?  Maybe these belong nearby the enums?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 21,
        "endChar": 89
      },
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc5baf4e_62b3d6ee",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 21,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-07-19T04:31:58Z",
      "side": 1,
      "message": "Removed table.",
      "parentUuid": "d33a5260_585d9f82",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 21,
        "endChar": 89
      },
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b091a0f_77c9e96d",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-07-18T19:32:16Z",
      "side": 1,
      "message": "Is \"crashdump\" standard terminology or is it relevant to only a certain processor manufacturer?",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5336b0dd_9521c6cc",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-18T23:40:03Z",
      "side": 1,
      "message": "It\u0027s pretty standard:  Here\u0027s an instance of the kernel using it for \"kernel crash dump\"\n\nhttps://ubuntu.com/server/docs/kernel-crash-dump",
      "parentUuid": "8b091a0f_77c9e96d",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdff493c_23f883db",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-02T20:59:32Z",
      "side": 1,
      "message": "I guess I have concern about disambiguation then.  Are we talking about kdumps or are we talking about a collection of processor data?",
      "parentUuid": "5336b0dd_9521c6cc",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5abd836_f3aac7f8",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-08-02T21:47:00Z",
      "side": 1,
      "message": "We\u0027re talking about a collection of processor data (chipset dump).\"Crashdump\" seems to be becoming the standard term these days. From what I\u0027ve heard, collecting kernel dumps isn\u0027t as common nowadays because of PII and security concerns. But if we end up needing to differentiate them, I think we could consider \"kernel dump\" and \"chipset dump\" to be subtypes of \"crashdump\".",
      "parentUuid": "cdff493c_23f883db",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "868c74c9_311bcacc",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-03T21:46:19Z",
      "side": 1,
      "message": "Aren\u0027t they two totally different things though?  It seems like they would warrant their own type?  My current unsettledness with it is that I believe you are talking about what Intel has traditionally called \u0027crashdump\u0027.  I\u0027m not positive if AMD uses that same terminology and have more doubts about IBM and ARM-based platforms using that terminology, so it sort of becomes architecture-specific.  We tend to avoid architecture-specific enumerations in xyz.openbmc_project and instead place them in, for example, com.intel.",
      "parentUuid": "b5abd836_f3aac7f8",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b551c1e8_f076fb5d",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-08-03T22:07:33Z",
      "side": 1,
      "message": "Yes kernel dump and chipset dump (e.g. Intel Crashdump) are totally different things that happen to use the same \"Crashdump\" term. The term \"Crashdump\" seems to be gaining traction in the industry for describing a chipset dump at crash, for example AMD uses the term as well, but I don\u0027t know about IBM and ARM. To address the concerns about ambiguity and being too architecture-specific, what do you think of \"ChipsetCrashdump\" or \"ChipsetDump\" as the property name?",
      "parentUuid": "868c74c9_311bcacc",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c3be9af_6a19896f",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-04T20:59:35Z",
      "side": 1,
      "message": "@AndrewG, @AndrewJ, @Jayanth - Can one of you give color on this from IBM\u0027s perspective?\n\n@Thang, @Thu - Can one of you give insight into ARM/Ampere?",
      "parentUuid": "b551c1e8_f076fb5d",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8e2e4e3_6c430a87",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-08-05T13:55:18Z",
      "side": 1,
      "message": "We just tend to call it a Hardware dump (https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/com/ibm/Dump/Entry/Hardware.interface.yaml). I tend to associated \"crash dump\" with a kdump (but I don\u0027t do much in the x86/amd space).",
      "parentUuid": "4c3be9af_6a19896f",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bd0fcd7_4800140e",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-08-17T15:32:33Z",
      "side": 1,
      "message": "Based on this doc it seems like Arm calls it \"crash dump\" or \"scan dump\".  \"scan dump\" is certainly a term I remember it being called at IBM.  Intel, from my observations, uses \"crash dump\".\n\nhttps://documentation-service.arm.com/static/5fb7e810ca04df4095c1d658?token\u003d\n\nUnless we can point to a documented term in a standard (like Redfish), I\u0027d prefer we use something more generic named but still obvious what it is.  \"Crashdump\" seems ambiguous.  At a minimum we should document in the description what we\u0027re talking about so we don\u0027t lead anyone astray.",
      "parentUuid": "d8e2e4e3_6c430a87",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e23d928_a59a4c49",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-08-19T01:39:51Z",
      "side": 1,
      "message": "Updated property name and description.",
      "parentUuid": "2bd0fcd7_4800140e",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba87dc88_10aae4ce",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2022-08-23T07:21:08Z",
      "side": 1,
      "message": "I am sorry for slow response. We still not have consistent definition for crashdump and still in discussion",
      "parentUuid": "1e23d928_a59a4c49",
      "revId": "59e258d792c2f5479ae356bb15b1966180bd8194",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}