{
  "comments": [
    {
      "key": {
        "uuid": "0cc5caed_a2269d7d",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-28T21:53:09Z",
      "side": 1,
      "message": "Shouldn\u0027t these be scoped to the connection type?\n\nMany of these are not really appropriate for Inventory.\n\nWe generally don\u0027t just wholesale copy Redfish definitions if they don\u0027t make sense.",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad92649e_8fa815ac",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-08-30T07:12:50Z",
      "side": 1,
      "message": "\u003e Shouldn\u0027t these be scoped to the connection type?\n\u003e Many of these are not really appropriate for Inventory.\n\nWhat do you mean. I don\u0027t mind to put this somewhere else or name it different.\nOr we can just remove entries, not related in Inventory.",
      "parentUuid": "0cc5caed_a2269d7d",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c512bb2_54a386ff",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-01T11:46:54Z",
      "side": 1,
      "message": "The Redfish property here is a total garbage bag of everything known to man.  It has hardware protocols, software protocols, and everything in between.  It doesn\u0027t even have any obvious reason to me why some things are included and others aren\u0027t, except maybe just that someone added one and not another (like why i2c but not smbus; why TCP but not IP, UCMP, or SCTP).  I don\u0027t think that is particularly useful for us and it is actually error prone.\n\n\nI\u0027d rather we take the pieces that are closer a particular hardware inventory item and put them as a specific enumeration there.  This is probably also not a useful example for us, but AHCI and UHCI could be in an inventory object related to a USB controller.  Maybe SAS, SATA, NVMe, and FC belong in the Storage object?",
      "parentUuid": "ad92649e_8fa815ac",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "224f6627_e4445996",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-02T09:12:34Z",
      "side": 1,
      "message": "\u003e Maybe SAS, SATA, NVMe, and FC belong in the Storage object?\n\nI still prefer to keep this as decorator that can be used by not only Storage items. Let\u0027s say, keep just the following protocols: PCIe, AHCI, UHCI, SAS, SATA, USB, NVMe, FC",
      "parentUuid": "2c512bb2_54a386ff",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb697189_a29354f1",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-02T10:10:53Z",
      "side": 1,
      "message": "\u003e I still prefer to keep this as decorator...\n\nCan you elaborate why?\n\nMaybe you misunderstood me.  I\u0027m not suggesting there should be just 1 enumeration.  I would like the enumerations scoped to the purpose.  I gave example of Storage as an example.\n\nHaving a catch-all of enumerations is 1) difficult for people to find and 2) error prone of picking the wrong enumeration for the intended inventory item.  Keeping it scoped to the inventory item (inventory item type) ensures you\u0027re far more likely to use the right one and you find it when you\u0027re making that inventory item.",
      "parentUuid": "224f6627_e4445996",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2073d3c5_50df88a2",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-02T10:38:00Z",
      "side": 1,
      "message": "Then why do we have this Decorator concept at all?\nI thought, it good way to not duplicate same things in different interfaces. Like one might want to specify protocol (SATA/SAS/NVMe) not only for Item.Drive but also for Item.StorageController to show what type of Drives could be connected there.",
      "parentUuid": "fb697189_a29354f1",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3e8d8cf_9eef9dc2",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-02T10:55:57Z",
      "side": 1,
      "message": "Decorators are useful when you want to expose the same properties across multiple interface types.  And if you want to have a \"StorageProtocol\" (though I\u0027m not sure I like the name) interface, you can do that.\n\nEnumerations can already be shared across interfaces, so you don\u0027t need a Decorator for that.  If you want Item.StorageController to have a protocols supported array property and an Protocols enumeration, you can then use that enumeration in Item.Drive as well.  Where you\u0027d want a Decorator is if you wanted to shared the ProtocolsSupported property between both of them.  But, again, the Decorator should be scoped better and not a catch-all like this.\n\nAs you see in my example, having a single property \"Protocol\" probably isn\u0027t even useful.  Many drives and controllers support both SAS and SATA in a single drive (see the SFF-8482 connector).",
      "parentUuid": "2073d3c5_50df88a2",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "643763db_a16e58cf",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-02T11:09:33Z",
      "side": 1,
      "message": "Ok, I got your point. Then I will move this to Item.Drive.\n\n\u003e Many drives and controllers support both SAS and SATA in a single drive (see the SFF-8482 connector).\n\nDo you think, we should support a way to specify this from begging? In my usecase I don\u0027t think I will ever set \"SATA+SAS\" since we can get only actually used protocol from BIOS.",
      "parentUuid": "b3e8d8cf_9eef9dc2",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10ab6c5b_43c46530",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-09-02T12:02:53Z",
      "side": 1,
      "message": "\u003e Do you think, we should support a way to specify this from begging?\n\nI think it depends on what you\u0027re trying to model.  If you\u0027re modelling \"current mode\" then a single is fine, if you\u0027re trying to model \"supported modes\" then you need a list.\n\nSince it is a minimal impact to return a list of 1 element, I\u0027d go ahead and make the property that now to avoid any refactoring down the line.",
      "parentUuid": "643763db_a16e58cf",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "605cb2df_b150c49d",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Connection.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-09-02T12:37:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "10ab6c5b_43c46530",
      "revId": "c90d801f218a3735c42919abc9210a31d31e5452",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}