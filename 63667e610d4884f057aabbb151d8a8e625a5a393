{
  "comments": [
    {
      "key": {
        "uuid": "191a3ca7_c7a0d56a",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-11-10T11:24:59Z",
      "side": 1,
      "message": "I assume this attempts to unmount too?",
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3647b4ef_2409eb3b",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 36,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-11-10T17:56:46Z",
      "side": 1,
      "message": "Yes, I updated the description to say that.",
      "parentUuid": "191a3ca7_c7a0d56a",
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "925e0ea3_bac4d17e",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-11-10T11:24:59Z",
      "side": 1,
      "message": "nit: missing newline in between properties.",
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1be5edf_b47fe86f",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-11-10T17:56:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "925e0ea3_bac4d17e",
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d8c5123_ebad6552",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-11-10T11:24:59Z",
      "side": 1,
      "message": "You should get back an error in coordination with the method, why would you want this if you can\u0027t know the exact order of transactions before you?",
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e447e35_4f830856",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-11-10T17:56:46Z",
      "side": 1,
      "message": "Since some of the D-Bus methods might take a while, namely format and erase, I was thinking they might need to be asynchronous, to avoid exceeding the D-Bus timeout. So, after calling the Format method, for example, the caller would need to query the status, to see whether it finished or hit an error, or whether it\u0027s still running.\n\nDo you think it makes sense to do it this way? Making the D-Bus methods synchronous would certainly be simpler, as long as D-Bus timeouts aren\u0027t an issue.",
      "parentUuid": "9d8c5123_ebad6552",
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40a919fe_8ebaf61f",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-11-10T20:39:38Z",
      "side": 1,
      "message": "The concern is good, but we should allow that level of asynchronicity to happen at the DBus call level. As long as the daemon is responding to pings, the requests shouldn\u0027t time out and you can increase per-call timeouts as desired for these operations.",
      "parentUuid": "3e447e35_4f830856",
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a63d3248_fe8d8c8a",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 86,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-11-11T00:01:28Z",
      "side": 1,
      "message": "Alright, it seems like this status enum shouldn\u0027t be necessary. I removed it.",
      "parentUuid": "40a919fe_8ebaf61f",
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56350235_e0064262",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 128,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2021-11-09T20:04:29Z",
      "side": 1,
      "message": "I wonder if these should be in the design doc as well?",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ac18d5d_59aec919",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 128,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2021-11-09T23:56:39Z",
      "side": 1,
      "message": "I didn\u0027t think these values needed to be in the design doc, since some of this is specific to Google. One thing that came up during the design doc review is that different organizations have their own ideas of what a secure erase actually entails. So, we wanted to allow other people to add their own erase operations, if they want. And if someone does choose to add another erase type, a new entry would be added to this enum.\n\nIf people think the design doc needs more documentation regarding the erase, let me know.",
      "parentUuid": "56350235_e0064262",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f112ef1_dba1d1ed",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 128,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-11-10T11:24:59Z",
      "side": 1,
      "message": "I wonder if someone has a better suggestion for defining these values in a per-oem way with a provided simple secure erase procedure in a single step.",
      "parentUuid": "6ac18d5d_59aec919",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fd8761a_1b73e59b",
        "filename": "yaml/xyz/openbmc_project/eStoraged.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 128,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-11-10T18:47:28Z",
      "side": 1,
      "message": "That is good question, and I understand how that could be useful for others.\n\nOur disk erase service manages the erase state. So this service expects to be able to do any of the 8 steps above, and get a result.",
      "parentUuid": "2f112ef1_dba1d1ed",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "63667e610d4884f057aabbb151d8a8e625a5a393",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}