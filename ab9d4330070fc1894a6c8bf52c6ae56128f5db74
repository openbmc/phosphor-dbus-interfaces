{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f469df26_fdb90383",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-27T12:40:12Z",
      "side": 1,
      "message": "How is this different from the dump type?  Isn\u0027t the \"fault log type\" simply an artifact of the hardware from which we are collecting the dump?",
      "revId": "ab9d4330070fc1894a6c8bf52c6ae56128f5db74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9157ae92_94fd261d",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-02-27T15:05:59Z",
      "side": 1,
      "message": "This is sub type of Dump under FaultLog type dump.\nLooking further we can re-use DumpType parameter , by extending dump/faultlog/CreateInterface.yaml. I will update this commit with this.",
      "parentUuid": "f469df26_fdb90383",
      "revId": "ab9d4330070fc1894a6c8bf52c6ae56128f5db74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3a63d10_a0301611",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-27T15:13:44Z",
      "side": 1,
      "message": "I\u0027m slightly lost as to how this is used. In what cases would a user want to pick a crashdump vs CPER?  Isn\u0027t this dictated by the machine design?",
      "parentUuid": "9157ae92_94fd261d",
      "revId": "ab9d4330070fc1894a6c8bf52c6ae56128f5db74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4524cac5_89090e39",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-02-27T16:43:05Z",
      "side": 1,
      "message": "In this commit am just following the existing types. See https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/53018/7..13/yaml/xyz/openbmc_project/Dump/Entry/FaultLog.interface.yaml#b33 for more details related to this.\nAMD packages Host Fault/Non-Fatal error Dumps in CPER format.  and planning to use Faultlog-\u003e CPER type. \n\nDump/Entry/FaultLog -\u003eAdditionalTypeName  is used to suppport Crashdump in custom format. (OEM).",
      "parentUuid": "d3a63d10_a0301611",
      "revId": "ab9d4330070fc1894a6c8bf52c6ae56128f5db74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5dded23_7b595bd5",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-27T16:50:31Z",
      "side": 1,
      "message": "I don\u0027t think I gained more insight from your response.\n\nWhy do we need this to be selected at a dbus-interface level?  Who is going to make the decision (a human or what piece of code)?  Why isn\u0027t this automatic based on the type of failure and/or the hardware design?\n\nIs there any case where a single BMC needs to support both CPER and \"crashdump\"?  Why?  If so, where does the decision as to which collection type is done happen?",
      "parentUuid": "4524cac5_89090e39",
      "revId": "ab9d4330070fc1894a6c8bf52c6ae56128f5db74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e84f4e8_b77fcbf8",
        "filename": "yaml/xyz/openbmc_project/Dump/Create.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2024-02-28T07:20:25Z",
      "side": 1,
      "message": "Adding @Claire Initial author of this interface. to provide background on Patrick\u0027 question.\n\nPatrick,  AMD design approach is mentioned here https://gerrit.openbmc.org/c/openbmc/docs/+/68440/12/designs/oem/amd/amd-bmc-ras.md#103. High level in the AMD design BMC RAS application packages data in CPER format.  My understanding( not an expert ) Clarie\u0027s initial design proposal to support CPER format Host failing data ( Type CPER) or RAW or OEM Crashdump format with the help of additional types.",
      "parentUuid": "c5dded23_7b595bd5",
      "revId": "ab9d4330070fc1894a6c8bf52c6ae56128f5db74",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}