{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "32f93ce0_e94e0aab",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-12T15:25:52Z",
      "side": 1,
      "message": "Can you check the random double spaces?",
      "range": {
        "startLine": 44,
        "startChar": 20,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77435387_6cc884f7",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-07-12T16:40:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32f93ce0_e94e0aab",
      "range": {
        "startLine": 44,
        "startChar": 20,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04116313_215b3c02",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-12T15:25:52Z",
      "side": 1,
      "message": "This paragraph is better than it was.\n\n\u003e The passphrase required by the host\n\n\"On some implementations,\"",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 47,
        "endChar": 68
      },
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcf06924_5c0e882a",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-07-12T16:40:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04116313_215b3c02",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 47,
        "endChar": 68
      },
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f93b4cba_a3d00b0c",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-12T15:25:52Z",
      "side": 1,
      "message": "What still isn\u0027t clear to me is:\n\n- Does the dump initiation start with the passphrase given by the BMC, or does the host give the passphrase?\n\n- If the dump is already collected (isn\u0027t that what an entry is?), why do we still need the passphrase around?",
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3163a19e_9dabe0c7",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-07-12T16:40:30Z",
      "side": 1,
      "message": "This dump collection starts only if the BMC gives a valid passphrase, and updated the documentation with the details.",
      "parentUuid": "f93b4cba_a3d00b0c",
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ea05fbe_a0b24d51",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-18T16:52:40Z",
      "side": 1,
      "message": "We might call this something like \"UserChallenge\".  Hopefully Joseph can weigh in.",
      "parentUuid": "3163a19e_9dabe0c7",
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01b75c5c_9b0a2454",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-07-18T18:14:10Z",
      "side": 1,
      "message": "Changing to use UserChallenge",
      "parentUuid": "6ea05fbe_a0b24d51",
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f7948a9_8ea3d515",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2023-07-18T19:15:39Z",
      "side": 1,
      "message": "The access and authority model is like this:\n1. The privileged BMC user is provided with the UserChallenge token.\n2. This BMC user provides this UserChallenge token along with the dump request.\n3. The BMC does not interpret the UserChallenge token but simply passes it to the host along with the dump request.\n4. The host validates the dump request and UserChallenge token and either performs the requested dump or declines.\n\nNote: How the BMC user and the host coordinate the UserChallenge is beyond the scope of this change.  (IBMâ€™s use case is explained here https://gerrit.openbmc.org/c/openbmc/docs/+/45201/2/designs/oem/ibm/acf-authentication.md with an extension to the design where the ACF and its password are passed to the host so it can validate independently from the BMC.  With this design, the UserChallenge token is effectively the ACF file\u0027s password.)\n\nI am not aware of any other authority models which control access to initiate host dumps.",
      "parentUuid": "01b75c5c_9b0a2454",
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6e44f1d_8aabec17",
        "filename": "yaml/xyz/openbmc_project/Dump/Entry/System.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1000084
      },
      "writtenOn": "2023-07-19T16:36:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0f7948a9_8ea3d515",
      "revId": "e9ac2cec1df15ea5a868846f33a3d4c01fdd3d35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}