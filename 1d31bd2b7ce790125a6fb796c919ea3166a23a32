{
  "comments": [
    {
      "key": {
        "uuid": "911cb639_592dda57",
        "filename": "xyz/openbmc_project/Sensor/Threshold/Critical.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-28T21:06:13Z",
      "side": 1,
      "message": "What if we did something like this instead?  The below greatly simplifies the content of the signal itself that needs sent, and has far fewer ways that a producer of this signal can mess it up.  IMO, it\u0027s also much more obvious, and lets consumers add matches on exactly what they want, rather than having to match on a generic threshold asserted then filter within the application.\n\nsignals:\n    - name: CriticalHighThresholdAsserted\n      description: \u003e\n          One of the alarm properties changed.\n      properties:\n         - name: SensorValue\n           type: double\n           description: \u003e\n               The sensor value that triggered the alarm change.\n    - name: CriticalHighThresholdDeAsserted\n      description: \u003e\n          One of the alarm properties changed.\n      properties:\n         - name: SensorValue\n           type: double\n           description: \u003e\n               The sensor value that triggered the alarm change.\n    - name: CriticalLowThresholdasserted\n      description: \u003e\n          One of the alarm properties changed.\n      properties:\n         - name: SensorValue\n           type: double\n           description: \u003e\n               The sensor value that triggered the alarm change.\n    - name: CriticalLowThresholdDeasserted\n      description: \u003e\n          One of the alarm properties changed.\n      properties:\n         - name: SensorValue\n           type: double\n           description: \u003e\n               The sensor value that triggered the alarm change.",
      "revId": "1d31bd2b7ce790125a6fb796c919ea3166a23a32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "557c716e_276b09b8",
        "filename": "xyz/openbmc_project/Sensor/Threshold/Critical.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-01-28T21:30:32Z",
      "side": 1,
      "message": "I need to care about 5 thresholds (the new 3 just from virtual-sensor), so that would give me 20 signal handlers as opposed to 1, but I\u0027m OK with it if that\u0027s what can merge.\n\nIt would be nice if someone would agree to make the corresponding change in phoshor-sel-logger (since I can\u0027t do the work) to change to using 8 matches for warning/critical so that dbus-sensors can change so I can get signals from it, which I will need to do (though that isn\u0027t quite as urgent).",
      "parentUuid": "911cb639_592dda57",
      "revId": "1d31bd2b7ce790125a6fb796c919ea3166a23a32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e234ae5b_7c2f19c9",
        "filename": "xyz/openbmc_project/Sensor/Threshold/Critical.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-28T21:33:55Z",
      "side": 1,
      "message": "At a minimum in the old way you\u0027d need 1 per interface, right?  5 to 20 isn\u0027t great.\n\nIf we rename them to take the type name out of the signal, does it help?\n\nso, HighThresholdAsserted instead of CriticalHighThresholdAsserted, ect.\n\nI forget if match expressions let you match on multiple interfaces at once, but if it does the above would at least cut down on the duplication a little.",
      "parentUuid": "557c716e_276b09b8",
      "revId": "1d31bd2b7ce790125a6fb796c919ea3166a23a32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b541a4b8_afe217f9",
        "filename": "xyz/openbmc_project/Sensor/Threshold/Critical.interface.yaml",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2021-01-28T21:41:32Z",
      "side": 1,
      "message": "You just need to match on the signal name, like member\u003d\u0027ThresholdAsserted\u0027, so it\u0027s just 1 match.\n\nIf we reduced them to HighThresholdAsserted, HighThresholdDeasserted, LowThresholdAsserted, and LowThresholdDeasserted that would be 4 total matches, which isn\u0027t bad at all.",
      "parentUuid": "e234ae5b_7c2f19c9",
      "revId": "1d31bd2b7ce790125a6fb796c919ea3166a23a32",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}