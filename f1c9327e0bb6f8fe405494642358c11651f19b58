{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c7ddd39d_67c10c5e",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-16T14:40:53Z",
      "side": 1,
      "message": "Why would it be \"NotAllowed\"?",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46c6266e_a7a2b48c",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-16T15:56:33Z",
      "side": 1,
      "message": "When MFA disable and user tries to execute this method, then NotAllowed error will be used.",
      "parentUuid": "c7ddd39d_67c10c5e",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d630e0e6_59555f81",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-16T16:25:47Z",
      "side": 1,
      "message": "Why?  Shouldn\u0027t you be able to create a secret key before you enable the MFA?  Otherwise you can get yourself into a state where you enabled MFA but haven\u0027t set the secret key, right?",
      "parentUuid": "46c6266e_a7a2b48c",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ec80171_160970f3",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2024-08-19T10:28:42Z",
      "side": 1,
      "message": "SecretKey at the user\u0027s home directory will indicate the PAM module to look for TOTP to authenticate. So unless MFA is enabled for the system, CreateSecretKey is not relevant. \nWhen MFA is enabled and secret key is not set, the login attempt will get a response (a redfish message registry) saying the MFA is enabled and secret key is not set for this user. This will take the user through the registration process which starts with CreateSecretKey.",
      "parentUuid": "d630e0e6_59555f81",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a3c3f7_1fdb7a01",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-19T10:31:16Z",
      "side": 1,
      "message": "yeah User is not allowed to create secret key before enabling MFA\nUser allowed to create secret key after MFA enabled.\nDuring redfish session create with MFA enabled user and no secret key setup then redfish session gets created with ConfigureSelf authority(limited config privilege) and user will be asked to generate secret by using GenerateSecretKeyRequired message registry similar to passwordChangeRequired configuration.",
      "parentUuid": "d630e0e6_59555f81",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "689d2248_54010ecf",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-28T13:02:09Z",
      "side": 1,
      "message": "\u003e yeah User is not allowed to create secret key before enabling MFA\n\u003e User allowed to create secret key after MFA enabled.\n\nBut why?  Does this impose some security vulnerability?  I\u0027m not understanding why you can\u0027t create a key first.  I could enable, create a key, and then disable and the key is still there, right?",
      "parentUuid": "c8a3c3f7_1fdb7a01",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c8e11bf_0c536b29",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-30T15:05:09Z",
      "side": 1,
      "message": "I dont see any use-case to support secret key before enabling MFA and if user randomly generate secret key and later when enable MFA and then user will be locked out.\n\nimplementation may check mfa enabled and secret key setup then user will be allowed to generate secret key.\n\nI have captured generate secret flow with mfa in this design doc\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/73054/13/designs/google-authenticator-mfa.md#227",
      "parentUuid": "689d2248_54010ecf",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82170ee8_fdcf5b03",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-30T15:08:20Z",
      "side": 1,
      "message": "correction: implementation may check mfa enabled and secret key is not setup then user will be allowed to generate secret key.",
      "parentUuid": "2c8e11bf_0c536b29",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a38785a7_2f14f3cd",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-30T15:23:38Z",
      "side": 1,
      "message": "Are you going to clear the secret key when MFA is disabled?  It doesn\u0027t really seem any different.\n\nI understand the flow as documented.  That flow doesn\u0027t seem to preclude someone from separately setting up a secret key, at least not at a DBus level, so I\u0027m trying to understand why we\u0027re going out of our way to write _more_ code.  it just doesn\u0027t make sense to me.\n\nI\u0027m not convinced we should be enforcing a particular Redfish policy with a DBus implementation.  My view is you\u0027re trying to replicate Redfish policy, property names, etc. directly into DBus.",
      "parentUuid": "82170ee8_fdcf5b03",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdc6cc15_d8e24fce",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 17,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-30T15:42:15Z",
      "side": 1,
      "message": "ok, since we are going to implement redfish spec, i am trying to make sure D-bus interface have all necessary properties and errors..\n\nanyways i removed this NotAllowed error, will discuss more during implementations and add it back if its required.",
      "parentUuid": "a38785a7_2f14f3cd",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bb2243b_0aa70596",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-16T14:40:53Z",
      "side": 1,
      "message": "What are the conditions where this method would be unavailable??",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ac1cfc4_a2d0de3b",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-16T15:56:33Z",
      "side": 1,
      "message": "D-bus implementation invokes google-authenticator to create secret key,\nif this google-authenticator binary is not available as part of build then CreateSecretKey method returns Unavailable error",
      "parentUuid": "8bb2243b_0aa70596",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "265b0cbf_21982b20",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-16T16:25:47Z",
      "side": 1,
      "message": "Why would the interface exist if all the required elements to support it are not installed?  Don\u0027t push this back onto the dbus client; there is no reason they would care and you\u0027re making extra code for them.",
      "parentUuid": "8ac1cfc4_a2d0de3b",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98e97b28_43cffc69",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2024-08-19T10:28:42Z",
      "side": 1,
      "message": "+1\nIf the secret key generation fails for any reason, it can return just a internal failure.",
      "parentUuid": "265b0cbf_21982b20",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "613c7364_1a223284",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 18,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-19T10:31:16Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "265b0cbf_21982b20",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3f9ad6e_d10994ea",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-16T14:40:53Z",
      "side": 1,
      "message": "Please don\u0027t add new InternalFailure.",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b6dd1bd_728e26cb",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-16T15:56:33Z",
      "side": 1,
      "message": "when there is a unexpected firmware error, which error needs to be returned?",
      "parentUuid": "c3f9ad6e_d10994ea",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b924ea24_45545649",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-19T11:27:40Z",
      "side": 1,
      "message": "Hi sunitha \nas per this discussion, InternalFailure removed",
      "parentUuid": "6b6dd1bd_728e26cb",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db617749_56e0c23e",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2024-08-19T15:41:49Z",
      "side": 1,
      "message": "OK. Any reason for not sending out InternalFailure Patrick?",
      "parentUuid": "b924ea24_45545649",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a226425f_ba271cce",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-28T13:02:09Z",
      "side": 1,
      "message": "The reason for not using InternalFailure is that your client can\u0027t do anything about it.  They\u0027ve called a dbus interface, you gave them that, and then what?\n\nIf your process is in a bad state, I\u0027d rather you crash so we can collect a coredump and debug the bad state and at least then systemd will restart your process.  Just telling your dbus client \"something went wrong\" makes everyone confused and gives us no data.",
      "parentUuid": "db617749_56e0c23e",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15b6c6f8_9f083ea0",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 19,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-28T15:35:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a226425f_ba271cce",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3898a3d1_44800adf",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-08-16T14:40:53Z",
      "side": 1,
      "message": "Please don\u0027t add new InternalFailures.",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf851813_5898ed0b",
        "filename": "yaml/xyz/openbmc_project/User/GoogleAuthenticator.interface.yaml",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-08-16T15:56:33Z",
      "side": 1,
      "message": "done",
      "parentUuid": "3898a3d1_44800adf",
      "revId": "f1c9327e0bb6f8fe405494642358c11651f19b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}