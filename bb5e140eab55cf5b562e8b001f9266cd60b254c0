{
  "comments": [
    {
      "key": {
        "uuid": "6dc46a5b_dff57bd2",
        "filename": "xyz/openbmc_project/Software/Activation.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 8,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-02-11T18:56:32Z",
      "side": 1,
      "message": "I must have missed the follow on discussion ~Feb 4th to change this to a dict.  Dicts are bad because they cannot be statically confirmed (ie. at compile time).  Do we really want to start passing parameters as dictionaries in interfaces?  Are there other examples of doing that and has it worked well?\n\nIt seems like we\u0027re trying to pass them as \u0027dict\u0027 because they are optional?  The typical way to create optional items is to create a new interface that is optionally added to the same object.  We could add a new interface with a property \"DesiredRedundancyPriority\" that must be set before the Activation property.  Implementations can then either not implement this interface or implement it with the desired default (0?).",
      "revId": "bb5e140eab55cf5b562e8b001f9266cd60b254c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}