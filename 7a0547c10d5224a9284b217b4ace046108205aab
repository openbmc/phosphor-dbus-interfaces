{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9e1fcb64_707864fe",
        "filename": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-03-15T16:20:48Z",
      "side": 1,
      "message": "If this is implementation defined, then why can\u0027t this be the name of the last segment of the object path? Do you really need a property for this?\n\nWhy can\u0027t you use something existing like extended version?\n\nI\u0027m trying to document some of these patterns as an update to the requirements.md doc on this repo (have pushed a patch; it\u0027s not merged/reviewed yet) that one should be aware of.",
      "revId": "7a0547c10d5224a9284b217b4ace046108205aab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02c08926_f72b37bb",
        "filename": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-03-15T16:39:44Z",
      "side": 1,
      "message": "SMBIOS strings might contain characters that are invalid in D-Bus object paths (like spaces, special characters). Having a separate property allows preserving the original identifier exactly as it appears in SMBIOS without needing to sanitize it for path compatibility.",
      "parentUuid": "9e1fcb64_707864fe",
      "revId": "7a0547c10d5224a9284b217b4ace046108205aab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3831eefa_50bb21d7",
        "filename": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-03-15T18:21:31Z",
      "side": 1,
      "message": "You answered only the firat question.",
      "parentUuid": "02c08926_f72b37bb",
      "revId": "7a0547c10d5224a9284b217b4ace046108205aab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41634efc_ba19284b",
        "filename": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-03-15T18:21:55Z",
      "side": 1,
      "message": "*first",
      "parentUuid": "3831eefa_50bb21d7",
      "revId": "7a0547c10d5224a9284b217b4ace046108205aab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76e6be00_4336e87b",
        "filename": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-03-16T05:56:52Z",
      "side": 1,
      "message": "Thanks for suggesting about the ExtendedVersion Interface.\nI did try with ExtendedVersion interface. Things worked at the backend. I need to do some testing at the bmcweb side to see if firmwareInventory is populated right. \nI will do more testing and try leveraging ExtendedVersion Interface if that seems appropriate.",
      "parentUuid": "41634efc_ba19284b",
      "revId": "7a0547c10d5224a9284b217b4ace046108205aab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc313eda_e4777bc8",
        "filename": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1002307
      },
      "writtenOn": "2025-03-16T06:13:27Z",
      "side": 1,
      "message": "I was reviewing the Redfish SoftwareInventory schema(https://redfish.dmtf.org/schemas/v1/SoftwareInventory.v1_10_2.json) which includes a SoftwareId property(https://github.com/openbmc/bmcweb/blob/d033fd17ae806365d12bb12bee7663c71e3f3512/redfish-core/schema/dmtf/json-schema/SoftwareInventory.v1_10_2.json#L343).\nI\u0027m considering whether it would be beneficial to map ExtendedVersion with SoftwareId. However, I\u0027m concerned that it might be challenging at the BMCWeb level to determine which ExtendedVersion from the backend should be classified as a SoftwareId and which should not.\n\nCould you please share your thoughts on this approach?",
      "parentUuid": "76e6be00_4336e87b",
      "revId": "7a0547c10d5224a9284b217b4ace046108205aab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c13d695_d7187676",
        "filename": "yaml/xyz/openbmc_project/Software/Version.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-03-18T16:32:19Z",
      "side": 1,
      "message": "We could also propose this an optional additional interface. For eg Software.Label: additional ID (beyond what the D-Bus object last segment can do) string.",
      "parentUuid": "bc313eda_e4777bc8",
      "revId": "7a0547c10d5224a9284b217b4ace046108205aab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}