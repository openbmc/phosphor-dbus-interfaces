{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "20e3ae8a_f3cc142a",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-09-10T06:28:12Z",
      "side": 1,
      "message": "Using the existing xyz/openbmc_project/Software/Version.interface.yaml interface from the OpenBMC project is a good approach if it meets our needs. I think, this interface is designed to provide version information for software components in a standardized way, which can simplify integration and maintenance.\n\nor any specific reason for having own property in this interface itself?",
      "range": {
        "startLine": 15,
        "startChar": 12,
        "endLine": 15,
        "endChar": 21
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fef98e7d_ec02d506",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-09-10T14:42:30Z",
      "side": 1,
      "message": "Having different interfaces for these just makes everything harder, including having to deal with properties that are brought along that we don\u0027t care about, such as in this case the Purpose property. \n\nEven worse though is the BMCState property, because the original interface for that has other properties that don\u0027t make any sense in this situation, and also there are probably people that assume when they ask the mapper for a BMC state interface that they get one that actual controls this BMC\u0027s state.\n\n Also now the RBMC manager has to go find and watch all off the different interfaces instead of just one.",
      "parentUuid": "20e3ae8a_f3cc142a",
      "range": {
        "startLine": 15,
        "startChar": 12,
        "endLine": 15,
        "endChar": 21
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1601072_8aad65e4",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-09-10T06:28:12Z",
      "side": 1,
      "message": "Does the sibling need to have an active role? Couldnâ€™t the other BMC be active while the sibling remains passive?",
      "range": {
        "startLine": 37,
        "startChar": 10,
        "endLine": 37,
        "endChar": 44
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d170f2e_aec1c6e8",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-09-10T14:42:30Z",
      "side": 1,
      "message": "What I tried to say here is that if the sibling is passive, then this property may not be useful because the BMC reading the sibling is active and knows if it has redundancy enabled or not.\n\ndoes that address your concern?",
      "parentUuid": "b1601072_8aad65e4",
      "range": {
        "startLine": 37,
        "startChar": 10,
        "endLine": 37,
        "endChar": 44
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cee9df55_77ca21f2",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-09-10T06:28:12Z",
      "side": 1,
      "message": "During the CU, the BMC will be unavailable, so synchronization will not occur. This situation is similar to a BMC reboot, where synchronization is paused. Therefore, the same logic should apply to the FailoverPaused case, correct?",
      "range": {
        "startLine": 47,
        "startChar": 18,
        "endLine": 47,
        "endChar": 50
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48e7bebc_d6fe040d",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-09-10T14:42:30Z",
      "side": 1,
      "message": "The only time the BMC isn\u0027t available is during the reboot that is kicked off after the new flash is written.  While the flash is being updated the BMC is still available, and is what I was referring to here.\n\nAnother time we said we don\u0027t want to do a failover is during a boot for example, or while collecting a HW dump.\n\nI\u0027m not sure if I answered your question?",
      "parentUuid": "cee9df55_77ca21f2",
      "range": {
        "startLine": 47,
        "startChar": 18,
        "endLine": 47,
        "endChar": 50
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78ffe3ea_b912641a",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2024-09-10T06:28:12Z",
      "side": 1,
      "message": "CommunicationOk?",
      "range": {
        "startLine": 66,
        "startChar": 12,
        "endLine": 66,
        "endChar": 19
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b2adb22_674a8e85",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-09-10T14:42:30Z",
      "side": 1,
      "message": "sure, will fix.",
      "parentUuid": "78ffe3ea_b912641a",
      "range": {
        "startLine": 66,
        "startChar": 12,
        "endLine": 66,
        "endChar": 19
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2993b7d6_e6d5d475",
        "filename": "yaml/xyz/openbmc_project/State/BMC/Redundancy/Sibling.interface.yaml",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2024-09-10T15:17:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b2adb22_674a8e85",
      "range": {
        "startLine": 66,
        "startChar": 12,
        "endLine": 66,
        "endChar": 19
      },
      "revId": "af8ece42296f306fa0100c48f742138698e19dc4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}