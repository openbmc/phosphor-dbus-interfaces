{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a843e7cd_b7e209f1",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-20T16:16:37Z",
      "side": 1,
      "message": "Please do not add new InternalFailure",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15e4aa70_1a1b02ae",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-11-26T09:57:48Z",
      "side": 1,
      "message": "Could you please explain what do you mean by new InternalFailure? From what I see processing of all attributes can throw this exception. Work with PasswordExpiration can do the same for when ,f.e. chage call fails.",
      "parentUuid": "a843e7cd_b7e209f1",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b0fee6_7c4d301e",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-11-26T12:17:39Z",
      "side": 1,
      "message": "As present moment InternalFailure is used if either execution of \"/usr/bin/chage\" fails or getspnam_r() call fails. Should I use another exceptions for these fails or even create new onec?",
      "parentUuid": "15e4aa70_1a1b02ae",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab2ab5bd_51409a25",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-26T15:58:32Z",
      "side": 1,
      "message": "We have been trying to eliminate all InternalFailure results.  Some are still left in place because the code hasn\u0027t been fixed.\n\nWhat is the caller going to do about those situations?  If there is nothing your caller can do except hope for better results in the future, then we\u0027re better off crashing the daemon than silently telling them \"sorry, this didn\u0027t work and I don\u0027t know why\".  At least with a crash we get debug data.",
      "parentUuid": "70b0fee6_7c4d301e",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbbfd1a2_b7961e88",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-11-27T15:39:49Z",
      "side": 1,
      "message": "Actually, it is no silent, because there is an error in the logs. Though I\u0027m new to openbmc so I do not know where it is better to crash or not in situation like this. Thank you for the explanation.",
      "parentUuid": "ab2ab5bd_51409a25",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5641a3bc_9394b54c",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 69,
      "author": {
        "id": 1000182
      },
      "writtenOn": "2025-09-08T23:30:56Z",
      "side": 1,
      "message": "InternalFailure was removed from attribute.",
      "parentUuid": "bbbfd1a2_b7961e88",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "544e1d5b_ae65a11f",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-20T16:16:37Z",
      "side": 1,
      "message": "In what cases can you get \"InvalidArgument\"?",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fd160c4_c58bd497",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-11-26T09:57:48Z",
      "side": 1,
      "message": "I thought it was not correct to set user password expiration time to the time point before the time point of the last password change. So, I\u0027ve added appropriate check  into https://gerrit.openbmc.org/c/openbmc/phosphor-user-manager/+/75237. From my point of view such configuration would not make any sense.\nMoreover, right now functionality is implemented via chage usage utility, in such situation maximum password age would be negative and chage treated negative maximum days between password changes as never expired password. It seems like a flaw for me, what do you think?",
      "parentUuid": "544e1d5b_ae65a11f",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c91b8b76_000b236a",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-26T15:58:32Z",
      "side": 1,
      "message": "I have heard of systems explicitly setting password expire time to a point in the pass to force a password change.  I don\u0027t think we should go out of our way to protect the callers from this situation.",
      "parentUuid": "4fd160c4_c58bd497",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4185593_c3fc0cd9",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1002219
      },
      "writtenOn": "2024-11-27T15:39:49Z",
      "side": 1,
      "message": "I do realize that an administrator would want to out-date a password in order to make user change password.\nProblem here is the implementation in https://gerrit.openbmc.org/c/openbmc/phosphor-user-manager/+/75237 which uses \u0027chage\u0027 system tool for a user password management. \u0027Chage\u0027 does not operates on time, instead in operates on last password change date and password age (maximum number of days between password changes). So when password expiration is set actually it is converted in number of days in which next password change must happen and set via \u0027chage\u0027 tool.\nWhile it is ok to set password expiration to set time point in the past there is a caveat. If some tries to set password expiration time to happen before last password change date, then this will lead to negative number of days between password changes, which in turn lead to password never to expire.\nHence, password will become unexpirying. Just an example:\n\nchage -l tmp1\nLast password change\t\t\t\t\t: Nov 27, 2024\nPassword expires\t\t\t\t\t: never\nPassword inactive\t\t\t\t\t: never\nAccount expires\t\t\t\t\t\t: never\nMinimum number of days between password change\t\t: 0\nMaximum number of days between password change\t\t: -1\nNumber of days of warning before password expires\t: 7\n\nSo I\u0027ve implemented a check here to avoid such a situation https://gerrit.openbmc.org/plugins/gitiles/openbmc/phosphor-user-manager/+/refs/changes/37/75237/5/user_mgr.cpp#1703.",
      "parentUuid": "c91b8b76_000b236a",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cd6f08c_b0267f27",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1000182
      },
      "writtenOn": "2025-09-08T23:30:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e4185593_c3fc0cd9",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70338405_96fbb448",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-20T16:16:37Z",
      "side": 1,
      "message": "How is this possible?  We have a dbus object for the user.",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec13f916_26e81c93",
        "filename": "yaml/xyz/openbmc_project/User/Attributes.interface.yaml",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1000182
      },
      "writtenOn": "2025-09-08T23:30:56Z",
      "side": 1,
      "message": "UserNameDoesNotExist was removed from attribute, commentary is no longer related.",
      "parentUuid": "70338405_96fbb448",
      "revId": "d865733846bbd63a67cff8ca5bf7c0e8f9d5d661",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}