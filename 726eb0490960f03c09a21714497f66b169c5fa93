{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fa2f9bdc_72523a2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-02T23:37:29Z",
      "side": 1,
      "message": "Seems reasonable to me. Maps to Redfish\u0027s CableStatus. \nhttp://redfish.dmtf.org/schemas/v1/Cable.v1_2_2.json#/definitions/CableStatus",
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93330704_a0eddb32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-06T15:21:06Z",
      "side": 1,
      "message": "I\u0027m partially confused by the utility of this interface vs what I see in Redfish.  Based on the words here, do we actually need a new interface?\n\n```\n            \"enumLongDescriptions\": {\n                \"Degraded\": \"This value shall indicate the cable is degraded.  The State property in Status shall contain the value `Enabled` and the Health property in Status shall contain the value `Warning`.\",\n                \"Disabled\": \"This value shall indicate the cable is disabled.  The State property in Status shall contain the value `Disabled`.\",\n                \"Failed\": \"This value shall indicate the cable has failed.  The State property in Status shall contain the value `Enabled` and the Health property in Status shall contain the value `Critical`.\",\n                \"Normal\": \"This value shall indicate the cable is operating normally.  The State property in Status shall contain the value `Enabled` and the Health property in Status shall contain the value `OK`.\",\n                \"SetByService\": \"This value shall indicate the status for the cable is not defined by the user.  If implemented, the service shall determine the value of the State and Health properties in Status.\",\n                \"Testing\": \"This value shall indicate the cable is under test.  The State property in Status shall contain the value `InTest`.\"\n            },\n```\n\nThe words in `SetByService` imply to me that the values in this property are intended to be set by external users and not represent the \"health\" status of the cable.  The health of the cable seems to be drawn from State/Health properties just like every other object.\n\nUnder what conditions would we want to expose this property using this dbus property?  What service is doing it?  How does it know the cable state?  Why is that different than State/Health?  What happens if the user tries to set one of these (externally via Redfish)?\n\nDo we need a full design on this?",
      "parentUuid": "fa2f9bdc_72523a2c",
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59470100_9ef78647",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-31T21:19:06Z",
      "side": 1,
      "message": "Taking a step back...\n\nWe want to be able to show the \"status\" of our cable, starting with the cables to this I/O expansion drawer.\n\nSpecifically for this I/O expansion drawer cable (in \"()\" is what we thought the Redfish mapping was using this \"CableStatus\"):\n\nRunning (Normal) -\u003e PCI-E traffic is currently active across the cable.\nInactive (Failed) -\u003e The Cable card it is attached to is powered on, but no traffic is running (the link train failed, the drawer it is connected to failed, or the read from the hardware failed). \nPoweredOff (Disabled) -\u003e The cable card the cable is attached to is powered off. \nUnknown (null) -\u003e We do not know the status. \n\n\n\u003e I\u0027m partially confused by the utility of this interface vs what I see in Redfish. \n\n\u003e The words in SetByService imply to me that the values in this property are intended to be set by external users and not represent the \"health\" status of the cable. \n\n\nThis is readwrite, so I guess Redfish intends for clients to set it.\n  \n                \"CableStatus\": {\n                    \"$ref\": \"#/definitions/CableStatus\",\n                    \"description\": \"The user-reported status of this resource.\",\n                    \"longDescription\": \"This property shall contain the user-reported status of this resource.\",\n                    \"readonly\": false\n                },\n\nI read that SetByService a few times, maybe if we used this property, that would be the value we would use since we don\u0027t allow users to set \"CableStatus\" and it is indeed coming from the service.\n\nCan we just use State/Health..?\nLooking at https://www.dmtf.org/sites/default/files/standards/documents/DSP0268_2024.1.html does a mapping like this work?\n\n\n    Running \u003d\u003e Enabled/Ok\n    PoweredOff \u003d\u003e Disabled/Ok\n    Inactive \u003d\u003e StandbyOffline/Critical\n    Unknown \u003d\u003e Quiesced/Critical\n\n\u003e Do we need a full design on this?\n \nMaybe we just need some way to mark the cable as \"Disabled\"/\"StandbyOffline\"/\"Quiesced\" and then we don\u0027t need this new CableStatus interface at all?\n\nOk/Critical is mapped to OperationalStatus today, but bmcweb doesn\u0027t have support for Redfish States Disabled, StandbyOffline, Quisced for inventory. \n\nThere is support today for some of those for Power States. \nhttps://github.com/openbmc/bmcweb/blob/20fa6a2c6cea77a4b411634dfca67eef6c8f430f/redfish-core/lib/systems.hpp#L567\nhttps://github.com/openbmc/bmcweb/blob/20fa6a2c6cea77a4b411634dfca67eef6c8f430f/redfish-core/lib/chassis.hpp#L131",
      "parentUuid": "93330704_a0eddb32",
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c4b3629_bbd5f838",
        "filename": "yaml/xyz/openbmc_project/State/Decorator/CableState.interface.yaml",
        "patchSetId": 10
      },
      "lineNbr": 2,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-05-06T07:06:51Z",
      "side": 1,
      "message": "state of the cable is only for active cables, I think we need more information above Active cable vs passive cable.",
      "range": {
        "startLine": 2,
        "startChar": 4,
        "endLine": 2,
        "endChar": 64
      },
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e0c58ad2_626fda5e",
        "filename": "yaml/xyz/openbmc_project/State/Decorator/CableState.interface.yaml",
        "patchSetId": 10
      },
      "lineNbr": 2,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2024-05-06T08:57:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7c4b3629_bbd5f838",
      "range": {
        "startLine": 2,
        "startChar": 4,
        "endLine": 2,
        "endChar": 64
      },
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "403f36ff_e43dee2a",
        "filename": "yaml/xyz/openbmc_project/State/Decorator/CableState.interface.yaml",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-02T23:37:29Z",
      "side": 1,
      "message": "The Functional Property should be false in this case.. But idk if you want to tie them together.",
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1cdbd643_f9c81519",
        "filename": "yaml/xyz/openbmc_project/State/Decorator/CableState.interface.yaml",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2024-05-06T08:57:25Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "403f36ff_e43dee2a",
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6027ea50_af4d0059",
        "filename": "yaml/xyz/openbmc_project/State/Decorator/CableState.interface.yaml",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-05-06T07:06:51Z",
      "side": 1,
      "message": "better to document what is the different between failed and disable here ?",
      "range": {
        "startLine": 19,
        "startChar": 10,
        "endLine": 24,
        "endChar": 34
      },
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f7e2e65_6ff64569",
        "filename": "yaml/xyz/openbmc_project/State/Decorator/CableState.interface.yaml",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1000938
      },
      "writtenOn": "2024-05-06T08:57:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6027ea50_af4d0059",
      "range": {
        "startLine": 19,
        "startChar": 10,
        "endLine": 24,
        "endChar": 34
      },
      "revId": "726eb0490960f03c09a21714497f66b169c5fa93",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}