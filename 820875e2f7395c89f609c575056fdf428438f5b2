{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "04e0c8e4_7766efb8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T19:22:56Z",
      "side": 1,
      "message": "Is this something you want the bmcweb change to go first for?",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 35
      },
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f16161d0_9864f364",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T19:35:39Z",
      "side": 1,
      "message": "I don\u0027t have a bmcweb change ready yet, but lets not wait.   Worst case you see \"UNAVAILABLE\" show up in an API for a moment until we (I) fix it.",
      "parentUuid": "04e0c8e4_7766efb8",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 35
      },
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "284fe86a_33411640",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T19:35:39Z",
      "side": 1,
      "message": "FWIW, I typed this up quickly.  I\u0027m wondering if \"NOT_SUPPORTED\" might be a better tombstone value.  UNAVAILBLE might imply temporarily unavailable and get accidentally used.\n\nStill thinking about it.  will ping discord for more input.",
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0822c321_c81cadbe",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T19:22:56Z",
      "side": 1,
      "message": "I assume we should just apply this to everything in Inventory?  Should we put it in a README.md under yaml/xyz/openbmc_project/Inventory?",
      "range": {
        "startLine": 2,
        "startChar": 57,
        "endLine": 4,
        "endChar": 34
      },
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f7f50af_bd4c489b",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T19:35:39Z",
      "side": 1,
      "message": "That\u0027s probably a better idea than whats here.",
      "parentUuid": "0822c321_c81cadbe",
      "range": {
        "startLine": 2,
        "startChar": 57,
        "endLine": 4,
        "endChar": 34
      },
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82e6eaef_80f4db0e",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-03T19:22:56Z",
      "side": 1,
      "message": "Interestingly in some cases we already have \"default\" values like this empty string here.  I guess we should probably change all the default values to UNAVAILABLE for every single string?",
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f81ef8b0_7b8eb6d7",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T19:35:39Z",
      "side": 1,
      "message": "That\u0027s probably a good idea.",
      "parentUuid": "82e6eaef_80f4db0e",
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f9facaf_1c906ee3",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000522
      },
      "writtenOn": "2025-10-06T14:56:32Z",
      "side": 1,
      "message": "Should the default be left as empty string, so that from the code end a property read can be simply checked for empty() to detect if the value is available or not instead of going for a string comparison with \"UNAVAILABLE\", also it will not affect any existing code if there is a check for empty string to detect unavailability of value. And explicit handling in code can be done to check for property value \"UNPOPULATED\"?",
      "parentUuid": "f81ef8b0_7b8eb6d7",
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b34aab18_a7fd8249",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-06T20:20:14Z",
      "side": 1,
      "message": "\u003e if there is a check for empty string to detect unavailability of value\n\nFrom what I\u0027ve seen it\u0027s the opposite, empty string seems to be for \"Allowed but unpopulated\".\n\nAt an interface level, we need to break someone, I\u0027d rather break the case where the alternative is just not being supported at all (ie, nobody can ever use it) rather than try to change the default on the case that people use and expect to work.",
      "parentUuid": "0f9facaf_1c906ee3",
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa86e366_0f9b0a5c",
        "filename": "yaml/xyz/openbmc_project/Inventory/Decorator/Asset.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-07T01:07:19Z",
      "side": 1,
      "message": "I\u0027m having trouble understanding the differentiation between \"unpopulated\" and \"unavailable\" in this case.  It seems like we either get the EEPROM or we don\u0027t; if we don\u0027t have it, the whole device is going to not show up.  An \"unpopulated\" field is one where the EEPROM is empty (or doesn\u0027t provide that information).\n\nIs there some additional case of \"unavailable\" that I\u0027m missing?",
      "parentUuid": "b34aab18_a7fd8249",
      "revId": "820875e2f7395c89f609c575056fdf428438f5b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}