description: >
  Mandatory interface for each instance of the MCTP Daemon to expose
  the base MCTP daemon and medium type interfaces.

methods:
    - name: SendMctpMessagePayload
      description: >
        Sends message over MCTP interface
      parameters:
        - name: DstEid
          type: byte
          description: >
            Destination Endpoint ID. The logical address used to route MCTP
            messages to a specific MCTP endpoint.
        - name: MsgTag
          type: byte
          description: >
            Message tag. Field that, along with the Source Endpoint IDs and the
            Tag Owner (TO) field, identifies a unique message at the MCTP
            transport level.
        - name: TagOwner
          type: boolean
          description: >
            Tag Owner bit identifies whether the message tag was originated by
            the endpoint that is the source of the message or by the endpoint
            that is the destination of the message.
        - name: Payload
          type: array[byte]
          description: Payload of message.
      returns:
        - name: Status
          type: byte
          description: 0 - if success
      errors:
        - xyz.openbmc_project.Common.Error.Timeout
        - xyz.openbmc_project.Common.Error.InvalidArgument
        - xyz.openbmc_project.Common.Error.InternalFailure

    - name: SendMctpMessageFileDescriptor
      description: >
        Sends message over MCTP interface
      parameters:
        - name: DstEid
          type: byte
          description: >
            Destination Endpoint ID. The logical address used to route MCTP
            messages to a specific MCTP endpoint.
        - name: MsgTag
          type: byte
          description: >
            Message tag. Field that, along with the Source Endpoint IDs and the
            Tag Owner (TO) field, identifies a unique message at the MCTP
            transport level.
        - name: TagOwner
          type: boolean
          description: >
            Tag Owner bit identifies whether the message tag was originated by
            the endpoint that is the source of the message or by the endpoint
            that is the destination of the message.
        - name: FileDescriptor
          type: unixfd
          description: File descriptor of message.
      returns:
        - name: Status
          type: byte
          description: 0 - if success
      errors:
        - xyz.openbmc_project.Common.Error.Timeout
        - xyz.openbmc_project.Common.Error.InvalidArgument
        - xyz.openbmc_project.Common.Error.InternalFailure

signals:
    - name: MessageReceivedSignal
      description: >
        Signal indicating upper layers about arrival of a MCTP message.
      properties:
        - name: MessageType
          type: enum[self.MessageTypes]
          description: >
            Defines the values for the Message Type field for different message
            types transported through MCTP.
        - name: SourceEid
          type: byte
          description: >
            Source Endpoint ID. The logical address used to route MCTP messages
            to a specific MCTP endpoint.
        - name: MsgTag
          type: byte
          description: >
            Message tag. Field that, along with the Source Endpoint IDs and the
            Tag Owner (TO) field, identifies a unique message at the MCTP
            transport level.
        - name: TagOwner
          type: boolean
          description: >
            Tag Owner bit identifies whether the message tag was originated by
            the endpoint that is the source of the message or by the endpoint
            that is the destination of the message.
        - name: Payload
          type: array[byte]
          description: Payload of message.

properties:
    - name: Eid
      type: byte
      description: >
        Endpoint ID. The logical address used to route MCTP messages to a
        specific MCTP endpoint.

    - name: NetworkId
      type: uint16
      descritpion: >
        MCTP network ID a unique identifier to distinguish each independent
        MCTP network within a platform.

    - name: BindingID
      type: enum[self.BindingTypes]

    - name: BindingMediumID
      type: enum[self.MctpPhysicalMediumIdentifiers]

    - name: StaticEid
      type: boolean
      description: Support for statically/dynamicly allocated IDs

    - name: Uuid
      type: array[byte]
      description: Guid - 16bytes

    - name: BindingMode
      type: enum[self.BindingModeTypes]
      description: Bus Owner / Endpoint / Bridge

    - name: BaseLineTranssmisionUnit
      type: byte
      description: Baseline Transmission Unit size.

enumerations:
  - name: BindingTypes
    description: >
      All other values than described are reserved.
    values:
      - name: MctpOverSmbus
      - name: MctpOverPcieVdm
      - name: MCTPOverUsb
        description: Reserved for MCTP over USB
      - name: MctpOverKcs
      - name: MctpOverSerial
      - name: VendorDefined

  - name: MctpPhysicalMediumIdentifiers
    description: >
      Identifies MCTP physical medium identifiers. see DSP0239.
    values:
        - name: Smbus
          descritpion: SMBus 2.0 100 kHz compatible
        - name: SmbusI2c
          descritpion: SMBus 2.0 + I2C 100 kHz compatible
        - name: I2cCompatible
          description: I2C 100 kHz compatible (Standard-mode)
        - name: Smbus3OrI2c400khzCompatible
          description: SMBus 3.0 or I2C 400 kHz compatible (Fast-mode)
        - name: Smbus3OrI2c1MhzCompatible
          description: SMBus 3.0 or I2C 1 MHz compatible (Fast-mode Plus)
        - name: I2c3Mhz4Compatible
          description: I2C 3.4 MHz compatible (High-speed mode)
        - name: Pcie11
          description: PCIe revision 1.1 compatible
        - name: Pcie2
          description: PCIe revision 2.0 compatible
        - name: Pcie21
          description: PCIe revision 2.1 compatible
        - name: Pcie3
          description: PCIe revision 3.0 compatible
        - name: Pcie4
          description: PCIe revision 4.0 compatible
        - name: Pcie5
          description: PCIe revision 4.0 compatible
        - name:  PciCompatible
          description: >
            PCI compatible (PCI 1.0,2.0,2.1,2.2,2.3,3.0,PCI-X 1.0, PCI-X 2.0)
        - name: Usb11Compatible
          description: USB 1.1 compatible
        - name: Usb20Compatible
          description: USB 2.0 compatible
        - name: Usb30Compatible
          description: USB 3.0 compatible
        - name: NcSiOverRbt
          description: >
            NC-SI over RBT (A physical interface based on RMII as defined in
            DSP0222)
        - name: KcsLegacy
          description: KCS1 / Legacy (Fixed Address Decoding)
        - name: KcsPci
          description: KCS1 / PCI (Base Class 0xC0 Subclass 0x01)
        - name: SerialHostLegacy
          description: Serial Host2 / Legacy (Fixed Address Decoding)
        - name: SerialHostPci
          description: Serial Host2 / PCI (Base Class 0x07 Subclass 0x00)
        - name: AsynchronousSerial
          description: Asynchronous Serial (Between MCs and IMDs)
        - name: I3cSDR
          description: I3C 12.5 MHz compatible (SDR)
        - name: I3cHDRDDR
          description: I3C 25 MHz compatible (HDR-DDR)

  - name: BindingModeTypes
    values:
        - name: Endpoint
          description: >
            An MCTP communication terminus. An MCTP endpoint is a terminus or
            origin of MCTP packets or messages. That is, the combined
            functionality within a physical device that communicates using the
            MCTP transport protocol and handles MCTP control commands. This
            includes MCTP-capable management controllers and managed devices.
            Also referred to in this document as "endpoint".
        - name: BusOwner
          description: >
            the party responsible for managing address assignments (can be
            logical or physical addresses) on a bus (for example, in MCTP, the
            bus owner is the party responsible for managing EID assignments for
            a given bus). A bus owner may also have additional media-specific
            responsibilities, such as assignment of physical addresses.
        - name: Bridge
          description: >
            an MCTP endpoint that can route MCTP messages not destined for
            itself that it receives on one interconnect onto another without
            interpreting them. The ingress and egress media at the bridge may
            be either homogeneous or heterogeneous. Also referred to in this
            document as a "bridge".

  - name: MessageTypes
    values:
        - name: MCTPControl
        - name: PLDM
        - name: NCSI
        - name: Ethernet
        - name: NVMeMgmtMsg
        - name: SPDM
        - name: VDPCI
        - name: VDIANA
