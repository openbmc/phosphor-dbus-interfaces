{
  "comments": [
    {
      "key": {
        "uuid": "15bb22e7_2072c1b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-23T11:28:41Z",
      "side": 1,
      "message": "Can you elaborate why?  If an empty string is acceptable, why do we need it?\n\nWe need to document what the expectations are for users to fill in.  As a developer of a network application I\u0027d have no idea what you expect for \"Context\".",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "6d0fec0f881dc882b844332e66cd16ff716efc96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd42ffc0_dab26ed2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2021-06-24T01:41:23Z",
      "side": 1,
      "message": "Hi Patrick， \nThanks for your review.\n\nThe description of \"Context\" property in redfish is like this：\nThis property shall contain a client-supplied context that remains with the connection through the connection\u0027s lifetime.\n\nUsing redfish to create and get SNMP clients is what I am doing.\nWhen we use redfish to create an SNMP client, if there is a \"Context\" property in the redfish request data, we need to store it. So I want to add a \"Context\" property to the Client interface.\n\nWhen we use redfish to get the SNMP client, we must have the \"Context\" property. If there is no “Context”, redfish validator will fail.\n\n\n\u003e Can you elaborate why?  If an empty string is acceptable, why do we need it?\nThe test result just shows that I added a \"Context\" property, I will modify the commit message. When there is \"Context\" in the redfish request, this string will be filled. For example:\nI use redfish to create an SNMP client:\ncurl -k -H \"X-Auth-Token: $token\" -X POST   https://${bmc}/redfish/v1/EventService/Subscriptions   -d \u0027{\"Destination\": \"snmp://192.168.31.91:162\", \"SubscriptionType\": \"SNMPTrap\", \"Protocol\": \"SNMPv2c\",\"Context\": \"testContext\"}\u0027\n\nThen I can use busctl to see the SNMP client：\nbusctl introspect xyz.openbmc_project.Network.SNMP /xyz/openbmc_project/network/snmp/manager/5  xyz.openbmc_project.Network.Client\nNAME                               TYPE      SIGNATURE RESULT/VALUE    FLAGS\n.Address                           property  s         \"192.168.31.91\" emits-change writable\n.Context                           property  s         \"testContext\"   emits-change writable\n.Port                              property  q         162             emits-change writable\n\n\n\n\u003e We need to document what the expectations are for users to fill in.  As a developer of a network application I\u0027d have no idea what you expect for \"Context\".\nI expect to fill in the \"Context\" string in the redfish create SNMP client request. I\u0027ll modify the description.",
      "parentUuid": "15bb22e7_2072c1b8",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "6d0fec0f881dc882b844332e66cd16ff716efc96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fe9f5b5_b26c3c71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-24T02:13:00Z",
      "side": 1,
      "message": "\u003e I expect to fill in the \"Context\" string in the redfish create SNMP client request. I\u0027ll modify the description.\n\nThank you.  We certainly need more information in this commit.\n\nIn general, my opinion is that we should not be pushing Redfish-specific requirements into other applications.  If SNMP doesn\u0027t already have a concept of a \"Context\" itself, the fact that we\u0027re manipulating SNMP via Redfish shouldn\u0027t push additional requirements down into that application.  Why can\u0027t Redfish hold the context id itself?  Couldn\u0027t the context be the SNMP path (rather than 5)?  Should SNMP have another name for this to map it back to the originator (ie. some kind of client-handle)?\n\nI think we need maintainers from both SNMP subsystem and Redfish (bmcweb) to also weigh in here.",
      "parentUuid": "cd42ffc0_dab26ed2",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "6d0fec0f881dc882b844332e66cd16ff716efc96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c8a9b4a_8683aade",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2021-06-24T02:40:46Z",
      "side": 1,
      "message": "\u003e Why can\u0027t Redfish hold the context id itself? \nWe have some discussions about this：https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/38599/23/redfish-core/lib/event_service.hpp#55\n\n\n\u003e I think we need maintainers from both SNMP subsystem and Redfish (bmcweb) to also weigh in here.\nYes, I\u0027ll invite them to review",
      "parentUuid": "8fe9f5b5_b26c3c71",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "6d0fec0f881dc882b844332e66cd16ff716efc96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b09abcd_e1916e50",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-24T03:07:01Z",
      "side": 1,
      "message": "In that review Ed said:\n\n\u003eThe two options I see are:\n\u003e 1. The SNMP interface needs to change to accept some kind of user defined \"name\" for this connection that we can get back out.\n\u003e 2. bmcweb needs to store some persistent state that can track the name to subscription;  That needs to handle all the cases where the subscription is deleted outside of redfish, so the former would be preferred.\n\n#2 is what I would prefer.  Again, I don\u0027t think every little aspect of Redfish should be pushed down into every application.  If there is some reason for SNMP to hold this for other purposes then it is reasonable but if it is just some handle for Redfish-only, I don\u0027t see a good reason to push this down on everyone.\n\nSignals can be used to trigger a clean up any persistent state.",
      "parentUuid": "2c8a9b4a_8683aade",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "6d0fec0f881dc882b844332e66cd16ff716efc96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc32c86f_55f68112",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-24T17:22:04Z",
      "side": 1,
      "message": "#2 is certainly possible;  My concern is twofold.\n\nFirst, to maintain a cache that\u0027s syncronized to dbus and handles all the races requires an inordinate amount of code that\u0027s not the easiest to write.  We do it in other places (like Roles) and its been very error prone.\nSecond, if any other protocols (IPMI/PLDM) create an SNMP connection, Redfish will need to \"invent\" some context, probably just empty string, but having the ability to say \"created from IPMI\" would be much better for the user.\n\nSecond, if we ever need to be able to set this from IPMI or PLDM in a command, we\u0027ll have to move it to SNMP anyway.\n\nThe above is why my preference is #1, but I don\u0027t have a strong opinion here.  I suspect the person writing the code is going to have a strong opinion.\n\n\nIn terms of this patchset, I wonder if we could use one of the decorators that already exists (Unique identifier maybe?) to make this optionally available to clients without having to update this interface in a backwards incompatible way.",
      "parentUuid": "2b09abcd_e1916e50",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "6d0fec0f881dc882b844332e66cd16ff716efc96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20f228dc_63875783",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-06-25T03:11:45Z",
      "side": 1,
      "message": "Ed, I am not sure why we are trying to support the context for the SNMP.\nI understand that Event Destination schema has the optional property called \"Context\", but why we are supporting that.\n\nHow it is going to be used in the SNMP trap? Till now backend is not using it.\n\nFor me, we should not implement the context wrt to SNMP.If the need arise later, we can support.",
      "parentUuid": "cc32c86f_55f68112",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "6d0fec0f881dc882b844332e66cd16ff716efc96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9602b43_f66c842d",
        "filename": "yaml/xyz/openbmc_project/Network/Client.interface.yaml",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-23T11:28:41Z",
      "side": 1,
      "message": "It is not obvious to me what this means.  What is a \"Context\" here?  We need to document expected / acceptable values.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 23,
        "endChar": 62
      },
      "revId": "6d0fec0f881dc882b844332e66cd16ff716efc96",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}