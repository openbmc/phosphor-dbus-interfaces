{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4b2e9b81_b9125926",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-26T23:47:47Z",
      "side": 1,
      "message": "Hi Patrick, could you help take a look at this updated version? Thanks!",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "507a07b1_f7c5a89d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-08-15T23:59:01Z",
      "side": 1,
      "message": "Hi Patric, could you help review this updated version? Thank you!",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85d92afd_cce6b7ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-08-30T14:47:52Z",
      "side": 1,
      "message": "Adding Nan Zhou, Nancy Yuen and William Kennington to help with the review, thanks!",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75a22f72_a315249e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-09-25T22:47:09Z",
      "side": 1,
      "message": "@patrick@stwcx.xyz, Hi Patrick, thanks a lot for your constructive feedback! I have fixed the comments accordingly. Now I also get it reviewed with Nan who has rich experience in openbmc and get a +1. Could you help review it again and +2 it if it looks good to you? Thanks!",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "146925a1_75ab1578",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-09-03T13:57:20Z",
      "side": 1,
      "message": "Not typically how I see dates here. \nDoes uint64 work?\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/4f6fbeab36c23cce3816f0f6de4c92b9b87774b7/yaml/xyz/openbmc_project/State/BMC.interface.yaml#L19",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "273f8681_7aa68b03",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-09-05T08:38:19Z",
      "side": 1,
      "message": "Prefer string here: this LastUpdated date here is for human readers. If we store it as string here, it will avoid transforming it again from uint64 to string.",
      "parentUuid": "146925a1_75ab1578",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb55abd5_a2dda102",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-11-14T09:09:13Z",
      "side": 1,
      "message": "bmcweb could convert the timestamp to human readable strings, but on dbus, uint64 epoch timestamp looks more suitable here, which is also consistent with other interfaces (e.g. dump entry)",
      "parentUuid": "273f8681_7aa68b03",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "090d4f98_6d82e1b0",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-11-14T17:49:20Z",
      "side": 1,
      "message": "If uint64 epoch for timestamp is the d-bus convention, I\u0027m happy to follow it.",
      "parentUuid": "bb55abd5_a2dda102",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb2c3066_8e9d17c5",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-11-14T17:49:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "090d4f98_6d82e1b0",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4201ab64_c97eebc5",
        "filename": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-11-14T09:09:13Z",
      "side": 1,
      "message": "Should this be `array[byte]`?",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "484e110c_249e4f96",
        "filename": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-11-14T17:49:20Z",
      "side": 1,
      "message": "`size` here represents the \"size\" of the measurementindices array. `byte` will put a limit on the number of possible measurement blocks(limit to 256). Even though the current SPDM spec does have a limit of 256 max blocks, I\u0027m not sure if we want to have a hard limit here given the spec may change to accept more blocks.",
      "parentUuid": "4201ab64_c97eebc5",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5b846bc_20ec5187",
        "filename": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-11-14T09:09:13Z",
      "side": 1,
      "message": "Possibly refer this as Certificate object path, so it is more clear",
      "range": {
        "startLine": 35,
        "startChar": 16,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fe6599c_5e8329f4",
        "filename": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-11-14T17:49:20Z",
      "side": 1,
      "message": "make sense, will change the description",
      "parentUuid": "d5b846bc_20ec5187",
      "range": {
        "startLine": 35,
        "startChar": 16,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f892df57_5bcd3485",
        "filename": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2023-11-14T09:09:13Z",
      "side": 1,
      "message": "Could throw other errors, e.g. internal failure, or some other errors?",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e8e13dd_bcadb9b0",
        "filename": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-11-14T17:49:20Z",
      "side": 1,
      "message": "Good point, will add it.",
      "parentUuid": "f892df57_5bcd3485",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d8f0819_2b382eed",
        "filename": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2023-07-27T04:46:32Z",
      "side": 1,
      "message": "Currently certificates supports X.509 public certificate in PEM format. PEM wiki -\nhttps://en.wikipedia.org/wiki/Privacy-Enhanced_Mail . Is this certificate also comes under the same format?",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9913d5cd_a0d836a9",
        "filename": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 1001816
      },
      "writtenOn": "2023-07-27T16:34:08Z",
      "side": 1,
      "message": "Yes. If the original device certificate is not in PEM format, the d-bus daemon should convert it to PEM format and create a certificate dbus certificate object for it.",
      "parentUuid": "6d8f0819_2b382eed",
      "revId": "6cb7066e342eb2b70b675353c44a570eaeb310db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}