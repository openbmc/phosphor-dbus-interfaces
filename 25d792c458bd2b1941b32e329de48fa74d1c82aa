{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "48bfb9ec_419ed27a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-10-27T06:28:51Z",
      "side": 1,
      "message": "Since the patch has been pending for a while, just a friendly ping as a reminder for review.",
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c767a550_a214f1e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2025-10-27T06:41:34Z",
      "side": 1,
      "message": "I can\u0027t give +2 because I don\u0027t have that permission in this repository, so somebody else will have to give +2",
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3f470f4_02860712",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-10-27T06:40:52Z",
      "side": 1,
      "message": "Does the sensor name match to (par of) a D-Bus sensor object?",
      "range": {
        "startLine": 13,
        "startChar": 17,
        "endLine": 13,
        "endChar": 23
      },
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a590321_138d8ccd",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-10-28T12:44:09Z",
      "side": 1,
      "message": "For example, in the case of a PLDM sensor, if the object in the PLDM tree is `/xyz/openbmc_project/sensors/temperature/SENTINEL_DOME_SLOT_5_DIMM_A0_TEMP_C`, \nthen it should display the sensor name as `SENTINEL_DOME_SLOT_5_DIMM_A0_TEMP_C`.\nOn our platform, in conjunction with [Gerrit 82447] for `phosphor-pid-control`, the demo would look like this:\n```\nroot@bmc:~# busctl get-property xyz.openbmc_project.State.FanCtrl \n/xyz/openbmc_project/settings/fanctrl/zone0 xyz.openbmc_project.Debug.Pid.Zone \nFailSafeSensorsa{ss} 18 \"SENTINEL_DOME_SLOT_5_DIMM_A0_TEMP_C\" \"Sensor reading bad\" \n\"SENTINEL_DOME_SLOT_5_DIMM_A10_TEMP_C\" \"Sensor reading bad\"...\n```\nThis output shows a list of sensor names such as \"SENTINEL_DOME_SLOT_5_DIMM_A0_TEMP_C\", each associated with a status like \"Sensor reading bad\".\n\n[Gerrit 82447]: https://gerrit.openbmc.org/c/openbmc/phosphor-pid-control/+/82447",
      "parentUuid": "c3f470f4_02860712",
      "range": {
        "startLine": 13,
        "startChar": 17,
        "endLine": 13,
        "endChar": 23
      },
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a6b544b_68705b71",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-10-27T06:40:52Z",
      "side": 1,
      "message": "Why is string better than en enum here? Several existing PDIs use enums to expose failure states.",
      "range": {
        "startLine": 20,
        "startChar": 54,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3a9a734_9ef3aa12",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-10-28T12:44:09Z",
      "side": 1,
      "message": "Since sensor names may vary across platforms, it\u0027s not suitable to predefine them using enums. However, using enums for failure reasons should be acceptable. I can first try to see if it\u0027s possible to convert just the reason part to an enum while still displaying both the sensor name and reason in a dictionary type.",
      "parentUuid": "3a6b544b_68705b71",
      "range": {
        "startLine": 20,
        "startChar": 54,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2583d452_3f107c61",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-10-30T09:25:44Z",
      "side": 1,
      "message": "I’ve already tried converting the property to use enums. The output looks like this:\n```\nroot@bmc:~# busctl get-property xyz.openbmc_project.State.FanCtrl \n/xyz/openbmc_project/settings/fanctrl/zone0 \nxyz.openbmc_project.Debug.Pid.Zone \nFailSafeSensors\na{ss} 95 \"MEDUSA_MB8_HSC_12V_TEMP_C\" \n\"xyz.openbmc_project.Debug.Pid.Zone.FailureReason.MissingSensor\" \n...\nSENTINEL_DOME_SLOT_7_MB_X8_RTM_TEMP_C\" \n\"xyz.openbmc_project.Debug.Pid.Zone.FailureReason.BadReading\"\n...\n```\nHowever, this approach no longer directly displays the human-readable reason strings like those used in `phosphor-pid-control`. May I ask which format you would prefer to see?",
      "parentUuid": "e3a9a734_9ef3aa12",
      "range": {
        "startLine": 20,
        "startChar": 54,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d13545f4_dd12fbfc",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-10-30T10:02:54Z",
      "side": 1,
      "message": "I wouls use errors documented in the PDI repo.",
      "parentUuid": "2583d452_3f107c61",
      "range": {
        "startLine": 20,
        "startChar": 54,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cada16c7_a9ac94c0",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-10-30T12:04:02Z",
      "side": 1,
      "message": "To ensure I implement this exactly as you expect, could you please confirm the desired for FailureReason?\n\nOption 1 (enum): keep enum; busctl shows fully-qualified enum names (e.g., xyz.openbmc_project.Debug.Pid.Zone.FailureReason.Timeout).\nOption 2 (strings): return Common errors directly (e.g., xyz.openbmc_project.Common.Error.Timeout).\n\nFor domain-specific reasons without a direct Common error (MarginHot, ThresholdAsserted, BadReading), should we:\nkeep them as enum values (and, if a string is needed, map to Common.Error.Unknown), or remap to the closest Common errors (e.g., InvalidArgument / InternalFailure)?\n\nAlso, should we rename enum values to match Common terms (ObjectMissing→ResourceNotFound, NotFunctional→InternalFailure)?\n\nOr is the intention to define these errors in a newly created Zone.error.yaml? I’d really appreciate it if you could share more detailed thoughts to help clarify.\n\nThank you for your guidance.",
      "parentUuid": "d13545f4_dd12fbfc",
      "range": {
        "startLine": 20,
        "startChar": 54,
        "endLine": 20,
        "endChar": 60
      },
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18395e4c_240d6e36",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 23,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2025-10-27T06:40:52Z",
      "side": 1,
      "message": "What is expected to happen in case of a BMC reboot?",
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3344e8fd_71c7ae30",
        "filename": "yaml/xyz/openbmc_project/Debug/Pid/Zone.interface.yaml",
        "patchSetId": 8
      },
      "lineNbr": 23,
      "author": {
        "id": 1002134
      },
      "writtenOn": "2025-10-28T12:44:09Z",
      "side": 1,
      "message": "I expect that regardless of whether it\u0027s a BMC reboot or any other operation, the `xyz.openbmc_project.Debug.Pid.Zone` interface and its `FailSafeSensors` property will only be created after phosphor-pid-control has completed building the zone and created the object `/xyz/openbmc_project/settings/fanctrl/zone\u003cid\u003e`",
      "parentUuid": "18395e4c_240d6e36",
      "revId": "25d792c458bd2b1941b32e329de48fa74d1c82aa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}