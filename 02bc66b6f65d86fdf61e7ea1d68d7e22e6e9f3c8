{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "26a47556_a5bfaf3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "Please make sure to rebase this when submitting the next patch set also.",
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52c52c9c_cbd2c1d7",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 30,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "Are we expecting anyone to parse this inside the BMC or is this only going to be used externally via Redfish?  Generally we don\u0027t like parsing/matching on arbitrary strings.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 30,
        "endChar": 25
      },
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "251a1ded_46308571",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "in milliseconds since the epoch?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 80
      },
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fef4c4db_bd4e1691",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "Why does this matter?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 53
      },
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61d6e9e8_9e4b8330",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "You haven\u0027t introduced TrustedComponent yet.  Probably should move this to the next commit.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 55,
        "endChar": 63
      },
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83c19c55_ed7a9a32",
        "filename": "yaml/xyz/openbmc_project/Attestation/ComponentIntegrity.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "Do we need to add the reverse to Inventory.Item?",
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "752f09bf_0258080d",
        "filename": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "The dbus code allows multiple returns, which automatically turns it into a tuple.  This is really equivalent to the code you have except that we can natively document each return value instead of having them embedded in the description.  Can you try that?",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 35,
        "endChar": 61
      },
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "268c61d7_1c13efda",
        "filename": "yaml/xyz/openbmc_project/Attestation/MeasurementSet.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "I really don\u0027t like seeing new InternalFailures added.  What is a caller expected to do with this?  There isn\u0027t anything they can do to recover, so why tell them?",
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6a4c2f5_72a93b83",
        "filename": "yaml/xyz/openbmc_project/Certs/Certificate.interface.yaml",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-29T19:36:00Z",
      "side": 1,
      "message": "These aren\u0027t the association names you added to IdentityAuthentication.",
      "revId": "02bc66b6f65d86fdf61e7ea1d68d7e22e6e9f3c8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}