{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2ac12b1e_4f0ff3ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-08-17T12:26:58Z",
      "side": 1,
      "message": "really? Leak detectors were added in 2023.1 release. \n\nthe webinar says they can describe leak detectors and their state at 15:42 https://youtu.be/UKaLVR3HGSY?feature\u003dshared\n\nThey have defined a custom state schema per webinar. They didn\u0027t provide a message to say they had detected a leak?\n\nwould this be any different from a state change event for `DetectorState`\n\nhttps://github.com/DMTF/Redfish-Publications/blob/bff927ee3cd16e0c059845fba976bf738b0717b2/mockups/public-cooling-unit/ThermalEquipment/CDUs/1/LeakDetection/LeakDetectors/Moisture/index.json#L10\n   \n\ndid you ask the redfish forum for advice?",
      "revId": "d69356c1d2357e18eda871a860b136b7379b0595",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e67e089_cf9aa2bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-08-28T20:16:18Z",
      "side": 1,
      "message": "\u003e would this be any different from a state change event for DetectorState\n\nThis event is for asynchronous events generated by BMC https://github.com/openbmc/docs/blob/master/designs/event-logging.md\nhttps://www.dmtf.org/sites/default/files/standards/documents/DSP2065_2024.1.pdf\n\n\n\u003e did you ask the redfish forum for advice?\n\nYes, i discussed with the Redfish forum and they don\u0027t have this defined yet - https://redfishforum.com/thread/1074/redfish-message-registry-leakdetection",
      "parentUuid": "2ac12b1e_4f0ff3ab",
      "revId": "d69356c1d2357e18eda871a860b136b7379b0595",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c32a3f44_69ef7c2e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-08-28T22:24:37Z",
      "side": 1,
      "message": "can we get this link in the commit instead of buried in the comments?\n\npreferably we\u0027d have a pending discussion attribute (which is probably it\u0027s own patch to phosphor dbus interfaces) but at least in the change log to have a chance to find it with find with `git blame `.\n\n\u003e \u003e would this be any different from a state change event for DetectorState\n\n\u003e This event is for asynchronous events generated by BMC\n\nI was wondering if these should map to any of \n`ResourceChanged`, `ResourceStateChanged`, `ResourceStatusChangedCritical`, or `ResourceStatusChangedOK` from the base registry (from the DSP2065_2024.1 reference)\n\nhowever it makes sense to expose this new state uniquely on our internal dbua before mapping in bmcweb, where it can change when Redfish catches up.  I guess we could emit both these and a specific OEM event (another forum topic the event subscription is supposed to allow non existent messages for forward compatibly but a client would not know if a more specific event was added and is implemented for these).",
      "parentUuid": "7e67e089_cf9aa2bb",
      "revId": "d69356c1d2357e18eda871a860b136b7379b0595",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14ff74ef_a8ed7c0a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-08-28T22:46:52Z",
      "side": 1,
      "message": "\u003e can we get this link in the commit instead of buried in the comments?\n\nSure will add.\n\n\u003e I was wondering if these should map to any of\nResourceChanged, ResourceStateChanged, ResourceStatusChangedCritical, or ResourceStatusChangedOK from the base registry (from the DSP2065_2024.1 reference)\n\n\u003e however it makes sense to expose this new state uniquely on our internal dbua before mapping in bmcweb, where it can change when Redfish catches up. I guess we could emit both these and a specific OEM event (another forum topic the event subscription is supposed to allow non existent messages for forward compatibly but a client would not know if a more specific event was added and is implemented for these).\n\nRefer to redfish-mapping attribute in design https://github.com/openbmc/docs/blob/master/designs/event-logging.md. My understanding is that the events which won\u0027t have this attribute defined will be specific to openBMC namespace. @Patrick can provide more details as he is implementing this feature in BMCWeb.",
      "parentUuid": "c32a3f44_69ef7c2e",
      "revId": "d69356c1d2357e18eda871a860b136b7379b0595",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2ac095a_6117baef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-08-28T22:24:37Z",
      "side": 1,
      "message": "please add the link as described below",
      "revId": "d69356c1d2357e18eda871a860b136b7379b0595",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5de14c84_c9d03dea",
        "filename": "yaml/xyz/openbmc_project/Cooling/Leak.events.yaml",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-08-28T22:24:37Z",
      "side": 1,
      "message": "Redfish has now implemented a series of messages to clearly indicate when a previous indicator is no longer active.\n\nshould we include one now?",
      "revId": "d69356c1d2357e18eda871a860b136b7379b0595",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba508622_b65eedde",
        "filename": "yaml/xyz/openbmc_project/Cooling/Leak.events.yaml",
        "patchSetId": 2
      },
      "lineNbr": 5,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-08-28T22:46:52Z",
      "side": 1,
      "message": "\u003e Redfish has now implemented a series of messages to clearly indicate when a previous indicator is no longer active.\n\n\u003e should we include one now?\n\nRefer to https://github.com/openbmc/docs/blob/master/designs/event-logging.md. It mentions how an active event will be marked resolved.",
      "parentUuid": "5de14c84_c9d03dea",
      "revId": "d69356c1d2357e18eda871a860b136b7379b0595",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}