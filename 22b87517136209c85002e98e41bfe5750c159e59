{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d7d13df4_c388de6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2022-01-20T01:36:15Z",
      "side": 1,
      "message": "Hope these can be merged soon.",
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7987baf_95c9eb54",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-20T03:03:23Z",
      "side": 1,
      "message": "The current design is that there can be multiple Activation interfaces from a single Version and those Activation interfaces are hosted at sub-paths.  The primary/secondary flash bank is one such example that is clearly identified here.  The Activation path might be something like `/xyz/openbmc_project/software/12345/bmc-primary` (for well-defined paths we should probably enumerate in this document what the expectations are).\n\nThis is why I don\u0027t understand why we need a new UpdateTarget interface.  There are already separate Activations that tell you which device you are updating.  The advantage of separate Activations is that it also handles other device types (than just dual flash banks of the BMC).  We are already implementing support for multi-host BIOS update (devices might be host-1, host-2, host-3).  You could also handle VRs, CPLDs, Xeon ME, etc. like this.  IMO separate Activation interfaces is far more flexible because it handles _all_ these cases and not just a dual flash BMC.\n\nSince the separate Activation interfaces _can_ handle a dual-flash BMC, like you are proposing, I don\u0027t see a reason to also have a different way to handle it (ie. your UpdateTarget proposal).  This makes additional work for external interfaces, like bmcweb/Redfish, to special case the BMC.",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7818fe97_e14936f4",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-01-20T05:51:10Z",
      "side": 1,
      "message": "I did not realize this part.\nIs there any existing code that implemented the sub-path already?\n\n\u003e This is why I don\u0027t understand why we need a new UpdateTarget interface. \n\nSay the user uploads a BMC image on a dual image system:\n1. image-manager will create the version interface on /xyz/openbmc_project/software/\u003cid-to-be-updated\u003e;\n2. itme-updater will create the activation/version interface on the same object as well.\nHow does the user tell which BMC slot is to be updated in the above case?\n\nWith the sub-path concept, the item-updater may need to create two activation objects for this:\n /xyz/openbmc_project/software/\u003cid-to-be-updated\u003e/bmc_primary\n /xyz/openbmc_project/software/\u003cid-to-be-updated\u003e/bmc_secondary\n\nIs the above expected?\n\nIf yes, if the user only wants to update the `\u003cid-to-be-updated\u003e/bmc_primary`, the user needs to set RequestedActivation on the `\u003cid-to-be-updated\u003e/bmc_primary` object, and delete the `\u003cid-to-be-updated\u003e/bmc_secondary`, it looks not so good that doing a code update needs to delete a DBus object...\n\nI see it could express the concept of the same image on multiple devices, but it is not clear to me how good it is to handle the code update case.",
      "parentUuid": "a7987baf_95c9eb54",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68dc7719_b45752df",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-20T17:31:32Z",
      "side": 1,
      "message": "\u003e I did not realize this part.\n\u003e Is there any existing code that implemented the sub-path already?\n\nNo.  Some team members from HCL are working on an implementation for the Yv2 BIOS as an example.  I believe they\u0027re going to do refactoring of phosphor-bmc-code-mgmt as well.\n\nTheir design, which I\u0027m working through with them, is at:\n   https://gerrit.openbmc-project.xyz/c/openbmc/docs/+/37950\n\n\u003e With the sub-path concept, the item-updater may need to create two activation objects for this:\n\u003e  /xyz/openbmc_project/software/\u003cid-to-be-updated\u003e/bmc_primary\n\u003e  /xyz/openbmc_project/software/\u003cid-to-be-updated\u003e/bmc_secondary\n\u003e \n\u003e Is the above expected?\n\nYes, this is exactly what it expected.  The item-updater(s) will create slot/device specific sub-path elements.\n \n\u003e If yes, if the user only wants to update the `\u003cid-to-be-updated\u003e/bmc_primary`, the user needs to set RequestedActivation on the `\u003cid-to-be-updated\u003e/bmc_primary` object, and delete the `\u003cid-to-be-updated\u003e/bmc_secondary`, it looks not so good that doing a code update needs to delete a DBus object...\n\nThe `bmc_secondary` does not get deleted directly, no.  I think you\u0027re asking about the concept of garbage collection.\n\nThe ImageManager currently (as implemented today) keeps the images which could be activated and is responsible for garbage collecting them.  A reboot would usually cause them to be remove automatically since we keep them in tmpfs.  Otherwise there are two options:\n\n1. The ImageManager is already expected to expose a Object.Delete interface to allow proactive garbage collection (removal of the unapplied image).\n\n2. The ImageManager is expected to monitor for all targets to be Activated or Staged and then automatically garbage collect.\n\nBoth of these options are documented here:\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Software/README.md#image-clean-up",
      "parentUuid": "7818fe97_e14936f4",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bc1b6f3_3730c507",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-01-21T03:01:44Z",
      "side": 1,
      "message": "\u003e No.  Some team members from HCL are working on an implementation for the Yv2 BIOS as an example.  I believe they\u0027re going to do refactoring of phosphor-bmc-code-mgmt as well.\n\nThis is unfortunate, is it OK for HCL to submit what they have now so that we could work together to support the dual image and multiple host images?",
      "parentUuid": "68dc7719_b45752df",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab651d31_ca9fb2d3",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-26T22:15:24Z",
      "side": 1,
      "message": "@Naveen / Velu,\n\nIs there anything you can share here?",
      "parentUuid": "6bc1b6f3_3730c507",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ca9dc7c_118a71ce",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-01-28T02:51:45Z",
      "side": 1,
      "message": "Adriana and I are working on a different approach to make software-manager to support same image on different slots, the approach is mostly done, see series at:\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-bmc-code-mgmt/+/50473/2\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-bmc-code-mgmt/+/50271/1\n\nWith that approach, the description here will not be valid anymore and we will update the doc here with the new approach.\n\nWithout implementation, the design doc here is not valid anyway.\n@Patrick what do you think?",
      "parentUuid": "ab651d31_ca9fb2d3",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "692a17be_af572056",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-28T12:41:09Z",
      "side": 1,
      "message": "\u003e Without implementation, the design doc here is not valid anyway.\n\nI don\u0027t necessarily agree with this statement.\n\nThis design was written with the intent that it covers both multi-slot (BMC) and multi-device (ex. multi-host BIOS).  If you\u0027re doing something that deviates from that I\u0027ll need to see what it looks like to make sure it still covers the other intended use cases.  I don\u0027t want to see a divergence.",
      "parentUuid": "2ca9dc7c_118a71ce",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e94ae853_994e6265",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-01-29T13:52:44Z",
      "side": 1,
      "message": "\u003e This design was written with the intent that it covers both multi-slot (BMC) and multi-device (ex. multi-host BIOS). \n\nThe design is written, but the implementation is not.\n\n\u003e If you\u0027re doing something that deviates from that I\u0027ll need to see what it looks like to make sure it still covers the other intended use cases.  I don\u0027t want to see a divergence.\n\nI do not want to do divergence too.\nBoth Adriana and I are going to support multi-slot BMC by:\n* Create multiple DBus object for each slot;\n* For static-layout, reuse the RedundentPriority to represent slot, it scales if we have 3 or more BMC slots.\n* For ubi/emmc, it has dynamic RedundentPriority anyway so it works fine.\n\nThe code described above is implemented and under review.\nWhat we need to do here is to update this doc and describe the multi-slot support accordingly.\n\nI think HCL guys could weight in here and see if the above implementation works for multiple BIOS as well.\nI think it should be working as expected.\n\nWhat does not scale is the interface here that it currently defines \"primary\", \"secondary\" and \"both\".\nTo support multiple BIOS (that may have 3 or more), this property could changed to a value to indicate which slot to update, and it needs a special value to represent to update all slot.\n\n@Patrick you could check series at https://gerrit.openbmc-project.xyz/q/topic:bmc-dual-image for the above implementation.",
      "parentUuid": "692a17be_af572056",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b48b50ef_0db4f1fb",
        "filename": "yaml/xyz/openbmc_project/Software/README.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-31T22:22:07Z",
      "side": 1,
      "message": "\u003e The design is written, but the implementation is not.\n\nI don\u0027t really know what you expect here.  Don\u0027t we usually write the design proposal, get consensus on it, and then start implementation?  This isn\u0027t a design that has been sitting around for 6 months; it was literally agreed to in 2022.\n\nThe team has a pending request to get the repository created for the multi-host update procedures: https://github.com/openbmc/technical-oversight-forum/issues/11\n\n\u003e I do not want to do divergence too.\n\u003e Both Adriana and I are going to support multi-slot BMC by:\n\nThen _why_ are you diverging?  Nobody has worked on multi-slot / multi-device update for years.  Me and the HCL team spent a bunch of time getting it proposed, reviewed it with Adriana, etc.  And now you\u0027re coming around and doing something different, which doesn\u0027t work for multi-devices, and has no written design.\n\nIs there a reason that the agreed to design here doesn\u0027t work for BMC update?\n\n\u003e I think HCL guys could weight in here and see if the above implementation works for multiple BIOS as well.\n\nIt does not.  The RedundancyPriority has no bearing when you have 4 devices that all are updated independently.\n\n\u003e @Patrick you could check series at https://gerrit.openbmc-project.xyz/q/topic:bmc-dual-image for the above implementation.\n\nThe primary enhancement here appears to be that we\u0027re using a position indicator to create a separate hash ID.  We could take that position indicator to create the separate Activate object, which is literally the design.  Is this hard to do with this code series?",
      "parentUuid": "e94ae853_994e6265",
      "range": {
        "startLine": 55,
        "startChar": 41,
        "endLine": 59,
        "endChar": 79
      },
      "revId": "22b87517136209c85002e98e41bfe5750c159e59",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}